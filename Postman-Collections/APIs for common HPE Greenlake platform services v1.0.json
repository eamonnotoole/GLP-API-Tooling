{
	"info": {
		"_postman_id": "0fffab6d-d6ef-4064-ac5c-ad64dbf2c9b8",
		"name": "APIs for common HPE Greenlake platform services v1.0",
		"description": "Collection for APIs for common HPE GreenLake platform services with Variables defined at the Collection level.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "2747724"
	},
	"item": [
		{
			"name": "Step1-Generate Token",
			"item": [
				{
					"name": "Generate AccessToken",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody).access_token;\r",
									"pm.collectionVariables.set(\"BearerToken\",jsonData);\r",
									"console.log(jsonData)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "grant_type",
									"value": "client_credentials",
									"type": "text"
								},
								{
									"key": "client_id",
									"value": "{{ClientId}}",
									"type": "text"
								},
								{
									"key": "client_secret",
									"value": "{{ClientSecret}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "https://{{sso_URI}}",
							"protocol": "https",
							"host": [
								"{{sso_URI}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get workspace information",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/workspaces/v1/workspaces/:workspaceId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"workspaces",
								"v1",
								"workspaces",
								":workspaceId"
							],
							"variable": [
								{
									"key": "workspaceId",
									"value": "{{WorkspaceId}}",
									"description": "(Required) The unique identifier of the workspace."
								}
							]
						},
						"description": "Retrieve basic workspace information for a provided workspace identifier."
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/workspaces/v1/workspaces/:workspaceId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"workspaces",
										"v1",
										"workspaces",
										":workspaceId"
									],
									"variable": [
										{
											"key": "workspaceId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<uuid>\",\n  \"type\": \"<string>\",\n  \"workspaceName\": \"<string>\",\n  \"generation\": 0,\n  \"createdAt\": \"<dateTime>\",\n  \"updatedAt\": \"<dateTime>\",\n  \"createdBy\": \"<email>\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/workspaces/v1/workspaces/:workspaceId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"workspaces",
										"v1",
										"workspaces",
										":workspaceId"
									],
									"variable": [
										{
											"key": "workspaceId"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/workspaces/v1/workspaces/:workspaceId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"workspaces",
										"v1",
										"workspaces",
										":workspaceId"
									],
									"variable": [
										{
											"key": "workspaceId"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
						},
						{
							"name": "Precondition Failed",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/workspaces/v1/workspaces/:workspaceId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"workspaces",
										"v1",
										"workspaces",
										":workspaceId"
									],
									"variable": [
										{
											"key": "workspaceId"
										}
									]
								}
							},
							"status": "Precondition Failed",
							"code": 412,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
						},
						{
							"name": "Unprocessable Entity",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/workspaces/v1/workspaces/:workspaceId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"workspaces",
										"v1",
										"workspaces",
										":workspaceId"
									],
									"variable": [
										{
											"key": "workspaceId"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/workspaces/v1/workspaces/:workspaceId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"workspaces",
										"v1",
										"workspaces",
										":workspaceId"
									],
									"variable": [
										{
											"key": "workspaceId"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "Configuring and Managing GLP Workspace",
			"item": [
				{
					"name": "Step2-IAM",
					"item": [
						{
							"name": "identity",
							"item": [
								{
									"name": "v1",
									"item": [
										{
											"name": "users",
											"item": [
												{
													"name": "{id}",
													"item": [
														{
															"name": "Get a user",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			""
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/identity/v1/users/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"identity",
																		"v1",
																		"users",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "id",
																			"value": "{{InvitedUserId}}"
																		}
																	]
																},
																"description": "Retrieve a single user based on a given user ID."
															},
															"response": [
																{
																	"name": "Successful Response",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/identity/v1/users/:id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"identity",
																				"v1",
																				"users",
																				":id"
																			],
																			"variable": [
																				{
																					"key": "id"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"id\": \"<uuid>\",\n  \"type\": \"<string>\",\n  \"username\": \"<email>\",\n  \"generation\": 0,\n  \"createdAt\": \"<dateTime>\",\n  \"updatedAt\": \"<dateTime>\",\n  \"userStatus\": \"DELETED\",\n  \"lastLogin\": \"<dateTime>\"\n}"
																},
																{
																	"name": "Bad Request",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/identity/v1/users/:id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"identity",
																				"v1",
																				"users",
																				":id"
																			],
																			"variable": [
																				{
																					"key": "id"
																				}
																			]
																		}
																	},
																	"status": "Bad Request",
																	"code": 400,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
																},
																{
																	"name": "Unauthorized",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/identity/v1/users/:id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"identity",
																				"v1",
																				"users",
																				":id"
																			],
																			"variable": [
																				{
																					"key": "id"
																				}
																			]
																		}
																	},
																	"status": "Unauthorized",
																	"code": 401,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
																},
																{
																	"name": "Forbidden",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/identity/v1/users/:id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"identity",
																				"v1",
																				"users",
																				":id"
																			],
																			"variable": [
																				{
																					"key": "id"
																				}
																			]
																		}
																	},
																	"status": "Forbidden",
																	"code": 403,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
																},
																{
																	"name": "Precondition Failed",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/identity/v1/users/:id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"identity",
																				"v1",
																				"users",
																				":id"
																			],
																			"variable": [
																				{
																					"key": "id"
																				}
																			]
																		}
																	},
																	"status": "Precondition Failed",
																	"code": 412,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
																},
																{
																	"name": "Unprocessable Entity",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/identity/v1/users/:id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"identity",
																				"v1",
																				"users",
																				":id"
																			],
																			"variable": [
																				{
																					"key": "id"
																				}
																			]
																		}
																	},
																	"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
																	"code": 422,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
																},
																{
																	"name": "Internal Server Error",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/identity/v1/users/:id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"identity",
																				"v1",
																				"users",
																				":id"
																			],
																			"variable": [
																				{
																					"key": "id"
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
																}
															]
														},
														{
															"name": "Update a user",
															"request": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"language\": \"en\",\n  \"idleTimeout\": 1800\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/identity/v1/users/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"identity",
																		"v1",
																		"users",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "id",
																			"value": "{{UserId}}",
																			"description": "(Required) The unique identifier of the user to be updated."
																		}
																	]
																},
																"description": "Update an existing user's contact details and preferences."
															},
															"response": [
																{
																	"name": "Successful Response",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"language\": \"en\",\n  \"idleTimeout\": 1800\n}",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/identity/v1/users/:id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"identity",
																				"v1",
																				"users",
																				":id"
																			],
																			"variable": [
																				{
																					"key": "id"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{}"
																},
																{
																	"name": "Bad Request",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"language\": \"en\",\n  \"idleTimeout\": 1800\n}",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/identity/v1/users/:id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"identity",
																				"v1",
																				"users",
																				":id"
																			],
																			"variable": [
																				{
																					"key": "id"
																				}
																			]
																		}
																	},
																	"status": "Bad Request",
																	"code": 400,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
																},
																{
																	"name": "Unauthorized",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"language\": \"en\",\n  \"idleTimeout\": 1800\n}",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/identity/v1/users/:id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"identity",
																				"v1",
																				"users",
																				":id"
																			],
																			"variable": [
																				{
																					"key": "id"
																				}
																			]
																		}
																	},
																	"status": "Unauthorized",
																	"code": 401,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
																},
																{
																	"name": "Precondition Failed",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"language\": \"en\",\n  \"idleTimeout\": 1800\n}",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/identity/v1/users/:id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"identity",
																				"v1",
																				"users",
																				":id"
																			],
																			"variable": [
																				{
																					"key": "id"
																				}
																			]
																		}
																	},
																	"status": "Precondition Failed",
																	"code": 412,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
																},
																{
																	"name": "Unprocessable Entity",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"language\": \"en\",\n  \"idleTimeout\": 1800\n}",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/identity/v1/users/:id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"identity",
																				"v1",
																				"users",
																				":id"
																			],
																			"variable": [
																				{
																					"key": "id"
																				}
																			]
																		}
																	},
																	"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
																	"code": 422,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
																},
																{
																	"name": "Internal Server Error",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"language\": \"en\",\n  \"idleTimeout\": 1800\n}",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/identity/v1/users/:id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"identity",
																				"v1",
																				"users",
																				":id"
																			],
																			"variable": [
																				{
																					"key": "id"
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
																}
															]
														},
														{
															"name": "Disassociate a user",
															"request": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/identity/v1/users/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"identity",
																		"v1",
																		"users",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "id",
																			"value": "{{InvitedUserId}}",
																			"description": "(Required) The unique identifier of the user to be deleted."
																		}
																	]
																},
																"description": "Delete a user from a workspace. "
															},
															"response": [
																{
																	"name": "Successful Response",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/identity/v1/users/:id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"identity",
																				"v1",
																				"users",
																				":id"
																			],
																			"variable": [
																				{
																					"key": "id"
																				}
																			]
																		}
																	},
																	"status": "No Content",
																	"code": 204,
																	"_postman_previewlanguage": "text",
																	"header": [],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "Bad Request",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/identity/v1/users/:id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"identity",
																				"v1",
																				"users",
																				":id"
																			],
																			"variable": [
																				{
																					"key": "id"
																				}
																			]
																		}
																	},
																	"status": "Bad Request",
																	"code": 400,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
																},
																{
																	"name": "Unauthorized",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/identity/v1/users/:id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"identity",
																				"v1",
																				"users",
																				":id"
																			],
																			"variable": [
																				{
																					"key": "id"
																				}
																			]
																		}
																	},
																	"status": "Unauthorized",
																	"code": 401,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
																},
																{
																	"name": "Precondition Failed",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/identity/v1/users/:id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"identity",
																				"v1",
																				"users",
																				":id"
																			],
																			"variable": [
																				{
																					"key": "id"
																				}
																			]
																		}
																	},
																	"status": "Precondition Failed",
																	"code": 412,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
																},
																{
																	"name": "Unprocessable Entity",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/identity/v1/users/:id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"identity",
																				"v1",
																				"users",
																				":id"
																			],
																			"variable": [
																				{
																					"key": "id"
																				}
																			]
																		}
																	},
																	"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
																	"code": 422,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
																},
																{
																	"name": "Internal Server Error",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/identity/v1/users/:id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"identity",
																				"v1",
																				"users",
																				":id"
																			],
																			"variable": [
																				{
																					"key": "id"
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
																}
															]
														}
													]
												},
												{
													"name": "Get users by Username",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"var jsonData = JSON.parse(responseBody).items[0].id;\r",
																	"jsonData2 = jsonData.replace(/-/g,\"\");\r",
																	"pm.collectionVariables.set(\"UserId\",jsonData);\r",
																	"pm.collectionVariables.set(\"UserIdNoDash\",jsonData2);\r",
																	"console.log(jsonData);\r",
																	"console.log(jsonData2)"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/identity/v1/users?filter=username eq 'denis.choukroun@hpe.com'",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"identity",
																"v1",
																"users"
															],
															"query": [
																{
																	"key": "filter",
																	"value": "username eq 'denis.choukroun@hpe.com'",
																	"description": "\nFilter data using a subset of OData 4.0 and return only the subset of resources that match the filter.\n\nThe Get users API can be filtered by:\n- id\n- username\n- userStatus\n- createdAt\n- updatedAt\n- lastLogin\n"
																}
															]
														},
														"description": "Retrieve users that match given filters. All users are returned when no filters are provided."
													},
													"response": [
														{
															"name": "Successful Response",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/identity/v1/users?filter=&offset=0&limit=300",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"identity",
																		"v1",
																		"users"
																	],
																	"query": [
																		{
																			"key": "filter",
																			"value": "",
																			"description": "\nFilter data using a subset of OData 4.0 and return only the subset of resources that match the filter.\n\nThe Get users API can be filtered by:\n- id\n- username\n- userStatus\n- createdAt\n- updatedAt\n- lastLogin\n"
																		},
																		{
																			"key": "offset",
																			"value": "0",
																			"description": "Specify pagination offset. An offset argument defines how many pages to skip before returning results."
																		},
																		{
																			"key": "limit",
																			"value": "300",
																			"description": "Specify the maximum number of entries per page. NOTE: The maximum value accepted is 300."
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"offset\": \"<integer>\",\n  \"count\": \"<integer>\",\n  \"total\": \"<integer>\",\n  \"items\": [\n    {\n      \"id\": \"<uuid>\",\n      \"type\": \"<string>\",\n      \"username\": \"<email>\",\n      \"generation\": 0,\n      \"createdAt\": \"<dateTime>\",\n      \"updatedAt\": \"<dateTime>\",\n      \"userStatus\": \"BLOCKED\",\n      \"lastLogin\": \"<dateTime>\"\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"type\": \"<string>\",\n      \"username\": \"<email>\",\n      \"generation\": 0,\n      \"createdAt\": \"<dateTime>\",\n      \"updatedAt\": \"<dateTime>\",\n      \"userStatus\": \"DELETE_IN_PROGRESS\",\n      \"lastLogin\": \"<dateTime>\"\n    }\n  ]\n}"
														},
														{
															"name": "Bad Request",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/identity/v1/users?filter=&offset=0&limit=300",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"identity",
																		"v1",
																		"users"
																	],
																	"query": [
																		{
																			"key": "filter",
																			"value": "",
																			"description": "\nFilter data using a subset of OData 4.0 and return only the subset of resources that match the filter.\n\nThe Get users API can be filtered by:\n- id\n- username\n- userStatus\n- createdAt\n- updatedAt\n- lastLogin\n"
																		},
																		{
																			"key": "offset",
																			"value": "0",
																			"description": "Specify pagination offset. An offset argument defines how many pages to skip before returning results."
																		},
																		{
																			"key": "limit",
																			"value": "300",
																			"description": "Specify the maximum number of entries per page. NOTE: The maximum value accepted is 300."
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
														},
														{
															"name": "Unauthorized",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/identity/v1/users?filter=&offset=0&limit=300",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"identity",
																		"v1",
																		"users"
																	],
																	"query": [
																		{
																			"key": "filter",
																			"value": "",
																			"description": "\nFilter data using a subset of OData 4.0 and return only the subset of resources that match the filter.\n\nThe Get users API can be filtered by:\n- id\n- username\n- userStatus\n- createdAt\n- updatedAt\n- lastLogin\n"
																		},
																		{
																			"key": "offset",
																			"value": "0",
																			"description": "Specify pagination offset. An offset argument defines how many pages to skip before returning results."
																		},
																		{
																			"key": "limit",
																			"value": "300",
																			"description": "Specify the maximum number of entries per page. NOTE: The maximum value accepted is 300."
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
														},
														{
															"name": "Forbidden",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/identity/v1/users?filter=&offset=0&limit=300",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"identity",
																		"v1",
																		"users"
																	],
																	"query": [
																		{
																			"key": "filter",
																			"value": "",
																			"description": "\nFilter data using a subset of OData 4.0 and return only the subset of resources that match the filter.\n\nThe Get users API can be filtered by:\n- id\n- username\n- userStatus\n- createdAt\n- updatedAt\n- lastLogin\n"
																		},
																		{
																			"key": "offset",
																			"value": "0",
																			"description": "Specify pagination offset. An offset argument defines how many pages to skip before returning results."
																		},
																		{
																			"key": "limit",
																			"value": "300",
																			"description": "Specify the maximum number of entries per page. NOTE: The maximum value accepted is 300."
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
														},
														{
															"name": "Precondition Failed",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/identity/v1/users?filter=&offset=0&limit=300",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"identity",
																		"v1",
																		"users"
																	],
																	"query": [
																		{
																			"key": "filter",
																			"value": "",
																			"description": "\nFilter data using a subset of OData 4.0 and return only the subset of resources that match the filter.\n\nThe Get users API can be filtered by:\n- id\n- username\n- userStatus\n- createdAt\n- updatedAt\n- lastLogin\n"
																		},
																		{
																			"key": "offset",
																			"value": "0",
																			"description": "Specify pagination offset. An offset argument defines how many pages to skip before returning results."
																		},
																		{
																			"key": "limit",
																			"value": "300",
																			"description": "Specify the maximum number of entries per page. NOTE: The maximum value accepted is 300."
																		}
																	]
																}
															},
															"status": "Precondition Failed",
															"code": 412,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
														},
														{
															"name": "Unprocessable Entity",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/identity/v1/users?filter=&offset=0&limit=300",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"identity",
																		"v1",
																		"users"
																	],
																	"query": [
																		{
																			"key": "filter",
																			"value": "",
																			"description": "\nFilter data using a subset of OData 4.0 and return only the subset of resources that match the filter.\n\nThe Get users API can be filtered by:\n- id\n- username\n- userStatus\n- createdAt\n- updatedAt\n- lastLogin\n"
																		},
																		{
																			"key": "offset",
																			"value": "0",
																			"description": "Specify pagination offset. An offset argument defines how many pages to skip before returning results."
																		},
																		{
																			"key": "limit",
																			"value": "300",
																			"description": "Specify the maximum number of entries per page. NOTE: The maximum value accepted is 300."
																		}
																	]
																}
															},
															"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
															"code": 422,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
														},
														{
															"name": "Internal Server Error",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/identity/v1/users?filter=&offset=0&limit=300",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"identity",
																		"v1",
																		"users"
																	],
																	"query": [
																		{
																			"key": "filter",
																			"value": "",
																			"description": "\nFilter data using a subset of OData 4.0 and return only the subset of resources that match the filter.\n\nThe Get users API can be filtered by:\n- id\n- username\n- userStatus\n- createdAt\n- updatedAt\n- lastLogin\n"
																		},
																		{
																			"key": "offset",
																			"value": "0",
																			"description": "Specify pagination offset. An offset argument defines how many pages to skip before returning results."
																		},
																		{
																			"key": "limit",
																			"value": "300",
																			"description": "Specify the maximum number of entries per page. NOTE: The maximum value accepted is 300."
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
														}
													]
												},
												{
													"name": "Get Invited users by Username",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"var jsonData = JSON.parse(responseBody).items[0].id;\r",
																	"jsonData2 = jsonData.replace(/-/g,\"\");\r",
																	"pm.collectionVariables.set(\"InvitedUserId\",jsonData);\r",
																	"pm.collectionVariables.set(\"InvitedUserIdNoDash\",jsonData2);\r",
																	"console.log(jsonData);\r",
																	"console.log(jsonData2)"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/identity/v1/users?filter=username eq 'invitedusername@gmail.com'",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"identity",
																"v1",
																"users"
															],
															"query": [
																{
																	"key": "filter",
																	"value": "username eq 'invitedusername@gmail.com'",
																	"description": "\nFilter data using a subset of OData 4.0 and return only the subset of resources that match the filter.\n\nThe Get users API can be filtered by:\n- id\n- username\n- userStatus\n- createdAt\n- updatedAt\n- lastLogin\n"
																}
															]
														},
														"description": "Retrieve users that match given filters. All users are returned when no filters are provided."
													},
													"response": [
														{
															"name": "Successful Response",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/identity/v1/users?filter=&offset=0&limit=300",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"identity",
																		"v1",
																		"users"
																	],
																	"query": [
																		{
																			"key": "filter",
																			"value": "",
																			"description": "\nFilter data using a subset of OData 4.0 and return only the subset of resources that match the filter.\n\nThe Get users API can be filtered by:\n- id\n- username\n- userStatus\n- createdAt\n- updatedAt\n- lastLogin\n"
																		},
																		{
																			"key": "offset",
																			"value": "0",
																			"description": "Specify pagination offset. An offset argument defines how many pages to skip before returning results."
																		},
																		{
																			"key": "limit",
																			"value": "300",
																			"description": "Specify the maximum number of entries per page. NOTE: The maximum value accepted is 300."
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"offset\": \"<integer>\",\n  \"count\": \"<integer>\",\n  \"total\": \"<integer>\",\n  \"items\": [\n    {\n      \"id\": \"<uuid>\",\n      \"type\": \"<string>\",\n      \"username\": \"<email>\",\n      \"generation\": 0,\n      \"createdAt\": \"<dateTime>\",\n      \"updatedAt\": \"<dateTime>\",\n      \"userStatus\": \"BLOCKED\",\n      \"lastLogin\": \"<dateTime>\"\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"type\": \"<string>\",\n      \"username\": \"<email>\",\n      \"generation\": 0,\n      \"createdAt\": \"<dateTime>\",\n      \"updatedAt\": \"<dateTime>\",\n      \"userStatus\": \"DELETE_IN_PROGRESS\",\n      \"lastLogin\": \"<dateTime>\"\n    }\n  ]\n}"
														},
														{
															"name": "Bad Request",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/identity/v1/users?filter=&offset=0&limit=300",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"identity",
																		"v1",
																		"users"
																	],
																	"query": [
																		{
																			"key": "filter",
																			"value": "",
																			"description": "\nFilter data using a subset of OData 4.0 and return only the subset of resources that match the filter.\n\nThe Get users API can be filtered by:\n- id\n- username\n- userStatus\n- createdAt\n- updatedAt\n- lastLogin\n"
																		},
																		{
																			"key": "offset",
																			"value": "0",
																			"description": "Specify pagination offset. An offset argument defines how many pages to skip before returning results."
																		},
																		{
																			"key": "limit",
																			"value": "300",
																			"description": "Specify the maximum number of entries per page. NOTE: The maximum value accepted is 300."
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
														},
														{
															"name": "Unauthorized",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/identity/v1/users?filter=&offset=0&limit=300",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"identity",
																		"v1",
																		"users"
																	],
																	"query": [
																		{
																			"key": "filter",
																			"value": "",
																			"description": "\nFilter data using a subset of OData 4.0 and return only the subset of resources that match the filter.\n\nThe Get users API can be filtered by:\n- id\n- username\n- userStatus\n- createdAt\n- updatedAt\n- lastLogin\n"
																		},
																		{
																			"key": "offset",
																			"value": "0",
																			"description": "Specify pagination offset. An offset argument defines how many pages to skip before returning results."
																		},
																		{
																			"key": "limit",
																			"value": "300",
																			"description": "Specify the maximum number of entries per page. NOTE: The maximum value accepted is 300."
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
														},
														{
															"name": "Forbidden",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/identity/v1/users?filter=&offset=0&limit=300",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"identity",
																		"v1",
																		"users"
																	],
																	"query": [
																		{
																			"key": "filter",
																			"value": "",
																			"description": "\nFilter data using a subset of OData 4.0 and return only the subset of resources that match the filter.\n\nThe Get users API can be filtered by:\n- id\n- username\n- userStatus\n- createdAt\n- updatedAt\n- lastLogin\n"
																		},
																		{
																			"key": "offset",
																			"value": "0",
																			"description": "Specify pagination offset. An offset argument defines how many pages to skip before returning results."
																		},
																		{
																			"key": "limit",
																			"value": "300",
																			"description": "Specify the maximum number of entries per page. NOTE: The maximum value accepted is 300."
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
														},
														{
															"name": "Precondition Failed",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/identity/v1/users?filter=&offset=0&limit=300",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"identity",
																		"v1",
																		"users"
																	],
																	"query": [
																		{
																			"key": "filter",
																			"value": "",
																			"description": "\nFilter data using a subset of OData 4.0 and return only the subset of resources that match the filter.\n\nThe Get users API can be filtered by:\n- id\n- username\n- userStatus\n- createdAt\n- updatedAt\n- lastLogin\n"
																		},
																		{
																			"key": "offset",
																			"value": "0",
																			"description": "Specify pagination offset. An offset argument defines how many pages to skip before returning results."
																		},
																		{
																			"key": "limit",
																			"value": "300",
																			"description": "Specify the maximum number of entries per page. NOTE: The maximum value accepted is 300."
																		}
																	]
																}
															},
															"status": "Precondition Failed",
															"code": 412,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
														},
														{
															"name": "Unprocessable Entity",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/identity/v1/users?filter=&offset=0&limit=300",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"identity",
																		"v1",
																		"users"
																	],
																	"query": [
																		{
																			"key": "filter",
																			"value": "",
																			"description": "\nFilter data using a subset of OData 4.0 and return only the subset of resources that match the filter.\n\nThe Get users API can be filtered by:\n- id\n- username\n- userStatus\n- createdAt\n- updatedAt\n- lastLogin\n"
																		},
																		{
																			"key": "offset",
																			"value": "0",
																			"description": "Specify pagination offset. An offset argument defines how many pages to skip before returning results."
																		},
																		{
																			"key": "limit",
																			"value": "300",
																			"description": "Specify the maximum number of entries per page. NOTE: The maximum value accepted is 300."
																		}
																	]
																}
															},
															"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
															"code": 422,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
														},
														{
															"name": "Internal Server Error",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/identity/v1/users?filter=&offset=0&limit=300",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"identity",
																		"v1",
																		"users"
																	],
																	"query": [
																		{
																			"key": "filter",
																			"value": "",
																			"description": "\nFilter data using a subset of OData 4.0 and return only the subset of resources that match the filter.\n\nThe Get users API can be filtered by:\n- id\n- username\n- userStatus\n- createdAt\n- updatedAt\n- lastLogin\n"
																		},
																		{
																			"key": "offset",
																			"value": "0",
																			"description": "Specify pagination offset. An offset argument defines how many pages to skip before returning results."
																		},
																		{
																			"key": "limit",
																			"value": "300",
																			"description": "Specify the maximum number of entries per page. NOTE: The maximum value accepted is 300."
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
														}
													]
												},
												{
													"name": "Get users",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/identity/v1/users?filter=&offset=0&limit=300",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"identity",
																"v1",
																"users"
															],
															"query": [
																{
																	"key": "filter",
																	"value": "",
																	"description": "\nFilter data using a subset of OData 4.0 and return only the subset of resources that match the filter.\n\nThe Get users API can be filtered by:\n- id\n- username\n- userStatus\n- createdAt\n- updatedAt\n- lastLogin\n"
																},
																{
																	"key": "offset",
																	"value": "0",
																	"description": "Specify pagination offset. An offset argument defines how many pages to skip before returning results."
																},
																{
																	"key": "limit",
																	"value": "300",
																	"description": "Specify the maximum number of entries per page. NOTE: The maximum value accepted is 300."
																}
															]
														},
														"description": "Retrieve users that match given filters. All users are returned when no filters are provided."
													},
													"response": [
														{
															"name": "Successful Response",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/identity/v1/users?filter=&offset=0&limit=300",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"identity",
																		"v1",
																		"users"
																	],
																	"query": [
																		{
																			"key": "filter",
																			"value": "",
																			"description": "\nFilter data using a subset of OData 4.0 and return only the subset of resources that match the filter.\n\nThe Get users API can be filtered by:\n- id\n- username\n- userStatus\n- createdAt\n- updatedAt\n- lastLogin\n"
																		},
																		{
																			"key": "offset",
																			"value": "0",
																			"description": "Specify pagination offset. An offset argument defines how many pages to skip before returning results."
																		},
																		{
																			"key": "limit",
																			"value": "300",
																			"description": "Specify the maximum number of entries per page. NOTE: The maximum value accepted is 300."
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"offset\": \"<integer>\",\n  \"count\": \"<integer>\",\n  \"total\": \"<integer>\",\n  \"items\": [\n    {\n      \"id\": \"<uuid>\",\n      \"type\": \"<string>\",\n      \"username\": \"<email>\",\n      \"generation\": 0,\n      \"createdAt\": \"<dateTime>\",\n      \"updatedAt\": \"<dateTime>\",\n      \"userStatus\": \"BLOCKED\",\n      \"lastLogin\": \"<dateTime>\"\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"type\": \"<string>\",\n      \"username\": \"<email>\",\n      \"generation\": 0,\n      \"createdAt\": \"<dateTime>\",\n      \"updatedAt\": \"<dateTime>\",\n      \"userStatus\": \"DELETE_IN_PROGRESS\",\n      \"lastLogin\": \"<dateTime>\"\n    }\n  ]\n}"
														},
														{
															"name": "Bad Request",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/identity/v1/users?filter=&offset=0&limit=300",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"identity",
																		"v1",
																		"users"
																	],
																	"query": [
																		{
																			"key": "filter",
																			"value": "",
																			"description": "\nFilter data using a subset of OData 4.0 and return only the subset of resources that match the filter.\n\nThe Get users API can be filtered by:\n- id\n- username\n- userStatus\n- createdAt\n- updatedAt\n- lastLogin\n"
																		},
																		{
																			"key": "offset",
																			"value": "0",
																			"description": "Specify pagination offset. An offset argument defines how many pages to skip before returning results."
																		},
																		{
																			"key": "limit",
																			"value": "300",
																			"description": "Specify the maximum number of entries per page. NOTE: The maximum value accepted is 300."
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
														},
														{
															"name": "Unauthorized",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/identity/v1/users?filter=&offset=0&limit=300",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"identity",
																		"v1",
																		"users"
																	],
																	"query": [
																		{
																			"key": "filter",
																			"value": "",
																			"description": "\nFilter data using a subset of OData 4.0 and return only the subset of resources that match the filter.\n\nThe Get users API can be filtered by:\n- id\n- username\n- userStatus\n- createdAt\n- updatedAt\n- lastLogin\n"
																		},
																		{
																			"key": "offset",
																			"value": "0",
																			"description": "Specify pagination offset. An offset argument defines how many pages to skip before returning results."
																		},
																		{
																			"key": "limit",
																			"value": "300",
																			"description": "Specify the maximum number of entries per page. NOTE: The maximum value accepted is 300."
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
														},
														{
															"name": "Forbidden",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/identity/v1/users?filter=&offset=0&limit=300",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"identity",
																		"v1",
																		"users"
																	],
																	"query": [
																		{
																			"key": "filter",
																			"value": "",
																			"description": "\nFilter data using a subset of OData 4.0 and return only the subset of resources that match the filter.\n\nThe Get users API can be filtered by:\n- id\n- username\n- userStatus\n- createdAt\n- updatedAt\n- lastLogin\n"
																		},
																		{
																			"key": "offset",
																			"value": "0",
																			"description": "Specify pagination offset. An offset argument defines how many pages to skip before returning results."
																		},
																		{
																			"key": "limit",
																			"value": "300",
																			"description": "Specify the maximum number of entries per page. NOTE: The maximum value accepted is 300."
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
														},
														{
															"name": "Precondition Failed",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/identity/v1/users?filter=&offset=0&limit=300",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"identity",
																		"v1",
																		"users"
																	],
																	"query": [
																		{
																			"key": "filter",
																			"value": "",
																			"description": "\nFilter data using a subset of OData 4.0 and return only the subset of resources that match the filter.\n\nThe Get users API can be filtered by:\n- id\n- username\n- userStatus\n- createdAt\n- updatedAt\n- lastLogin\n"
																		},
																		{
																			"key": "offset",
																			"value": "0",
																			"description": "Specify pagination offset. An offset argument defines how many pages to skip before returning results."
																		},
																		{
																			"key": "limit",
																			"value": "300",
																			"description": "Specify the maximum number of entries per page. NOTE: The maximum value accepted is 300."
																		}
																	]
																}
															},
															"status": "Precondition Failed",
															"code": 412,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
														},
														{
															"name": "Unprocessable Entity",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/identity/v1/users?filter=&offset=0&limit=300",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"identity",
																		"v1",
																		"users"
																	],
																	"query": [
																		{
																			"key": "filter",
																			"value": "",
																			"description": "\nFilter data using a subset of OData 4.0 and return only the subset of resources that match the filter.\n\nThe Get users API can be filtered by:\n- id\n- username\n- userStatus\n- createdAt\n- updatedAt\n- lastLogin\n"
																		},
																		{
																			"key": "offset",
																			"value": "0",
																			"description": "Specify pagination offset. An offset argument defines how many pages to skip before returning results."
																		},
																		{
																			"key": "limit",
																			"value": "300",
																			"description": "Specify the maximum number of entries per page. NOTE: The maximum value accepted is 300."
																		}
																	]
																}
															},
															"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
															"code": 422,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
														},
														{
															"name": "Internal Server Error",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/identity/v1/users?filter=&offset=0&limit=300",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"identity",
																		"v1",
																		"users"
																	],
																	"query": [
																		{
																			"key": "filter",
																			"value": "",
																			"description": "\nFilter data using a subset of OData 4.0 and return only the subset of resources that match the filter.\n\nThe Get users API can be filtered by:\n- id\n- username\n- userStatus\n- createdAt\n- updatedAt\n- lastLogin\n"
																		},
																		{
																			"key": "offset",
																			"value": "0",
																			"description": "Specify pagination offset. An offset argument defines how many pages to skip before returning results."
																		},
																		{
																			"key": "limit",
																			"value": "300",
																			"description": "Specify the maximum number of entries per page. NOTE: The maximum value accepted is 300."
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
														}
													]
												},
												{
													"name": "Invite a user",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"email\": \"inviteusername@example.com\",\n  \"sendWelcomeEmail\": true\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/identity/v1/users",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"identity",
																"v1",
																"users"
															]
														},
														"description": "Invite a user to a workspace."
													},
													"response": [
														{
															"name": "Successful Response",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"email\": \"<string>\",\n  \"sendWelcomeEmail\": true\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/identity/v1/users",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"identity",
																		"v1",
																		"users"
																	]
																}
															},
															"status": "Created",
															"code": 201,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																},
																{
																	"key": "Location",
																	"value": "<string>",
																	"description": {
																		"content": "Endpoint to get the invited user resource",
																		"type": "text/plain"
																	}
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"<string>\"\n}"
														},
														{
															"name": "Bad Request",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"email\": \"<string>\",\n  \"sendWelcomeEmail\": true\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/identity/v1/users",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"identity",
																		"v1",
																		"users"
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
														},
														{
															"name": "Unauthorized",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"email\": \"<string>\",\n  \"sendWelcomeEmail\": true\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/identity/v1/users",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"identity",
																		"v1",
																		"users"
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
														},
														{
															"name": "Forbidden",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"email\": \"<string>\",\n  \"sendWelcomeEmail\": true\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/identity/v1/users",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"identity",
																		"v1",
																		"users"
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
														},
														{
															"name": "Conflict",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"email\": \"<string>\",\n  \"sendWelcomeEmail\": true\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/identity/v1/users",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"identity",
																		"v1",
																		"users"
																	]
																}
															},
															"status": "Conflict",
															"code": 409,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
														},
														{
															"name": "Unprocessable Entity",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"email\": \"<string>\",\n  \"sendWelcomeEmail\": true\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/identity/v1/users",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"identity",
																		"v1",
																		"users"
																	]
																}
															},
															"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
															"code": 422,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
														},
														{
															"name": "Unavailable For Legal Reasons",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"email\": \"<string>\",\n  \"sendWelcomeEmail\": true\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/identity/v1/users",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"identity",
																		"v1",
																		"users"
																	]
																}
															},
															"code": 451,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
														},
														{
															"name": "Internal Server Error",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"email\": \"<string>\",\n  \"sendWelcomeEmail\": true\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/identity/v1/users",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"identity",
																		"v1",
																		"users"
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
														}
													]
												}
											]
										}
									]
								}
							]
						},
						{
							"name": "workspaces",
							"item": [
								{
									"name": "v1",
									"item": [
										{
											"name": "workspaces",
											"item": [
												{
													"name": "{workspaceId}",
													"item": [
														{
															"name": "contact",
															"item": [
																{
																	"name": "Get detailed workspace information",
																	"request": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/workspaces/v1/workspaces/:workspaceId/contact",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"workspaces",
																				"v1",
																				"workspaces",
																				":workspaceId",
																				"contact"
																			],
																			"variable": [
																				{
																					"key": "workspaceId",
																					"value": "{{WorkspaceId}}",
																					"description": "(Required) The unique identifier of the workspace."
																				}
																			]
																		},
																		"description": "Retrieve detailed workspace information."
																	},
																	"response": [
																		{
																			"name": "Successful Response",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: apikey",
																						"key": "Authorization",
																						"value": "<API Key>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/workspaces/v1/workspaces/:workspaceId/contact",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"workspaces",
																						"v1",
																						"workspaces",
																						":workspaceId",
																						"contact"
																					],
																					"variable": [
																						{
																							"key": "workspaceId"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"address\": {\n    \"streetAddress\": \"<string>\",\n    \"streetAddressComplement\": \"<string>\",\n    \"city\": \"<string>\",\n    \"stateOrRegion\": \"<string>\",\n    \"zip\": \"<string>\",\n    \"countryCode\": \"<string>\"\n  },\n  \"phoneNumber\": \"<string>\",\n  \"email\": \"<email>\"\n}"
																		},
																		{
																			"name": "Unauthorized",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: apikey",
																						"key": "Authorization",
																						"value": "<API Key>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/workspaces/v1/workspaces/:workspaceId/contact",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"workspaces",
																						"v1",
																						"workspaces",
																						":workspaceId",
																						"contact"
																					],
																					"variable": [
																						{
																							"key": "workspaceId"
																						}
																					]
																				}
																			},
																			"status": "Unauthorized",
																			"code": 401,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Forbidden",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: apikey",
																						"key": "Authorization",
																						"value": "<API Key>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/workspaces/v1/workspaces/:workspaceId/contact",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"workspaces",
																						"v1",
																						"workspaces",
																						":workspaceId",
																						"contact"
																					],
																					"variable": [
																						{
																							"key": "workspaceId"
																						}
																					]
																				}
																			},
																			"status": "Forbidden",
																			"code": 403,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Not Found",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: apikey",
																						"key": "Authorization",
																						"value": "<API Key>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/workspaces/v1/workspaces/:workspaceId/contact",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"workspaces",
																						"v1",
																						"workspaces",
																						":workspaceId",
																						"contact"
																					],
																					"variable": [
																						{
																							"key": "workspaceId"
																						}
																					]
																				}
																			},
																			"status": "Not Found",
																			"code": 404,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Precondition Failed",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: apikey",
																						"key": "Authorization",
																						"value": "<API Key>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/workspaces/v1/workspaces/:workspaceId/contact",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"workspaces",
																						"v1",
																						"workspaces",
																						":workspaceId",
																						"contact"
																					],
																					"variable": [
																						{
																							"key": "workspaceId"
																						}
																					]
																				}
																			},
																			"status": "Precondition Failed",
																			"code": 412,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Unprocessable Entity",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: apikey",
																						"key": "Authorization",
																						"value": "<API Key>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/workspaces/v1/workspaces/:workspaceId/contact",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"workspaces",
																						"v1",
																						"workspaces",
																						":workspaceId",
																						"contact"
																					],
																					"variable": [
																						{
																							"key": "workspaceId"
																						}
																					]
																				}
																			},
																			"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
																			"code": 422,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Internal Server Error",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: apikey",
																						"key": "Authorization",
																						"value": "<API Key>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/workspaces/v1/workspaces/:workspaceId/contact",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"workspaces",
																						"v1",
																						"workspaces",
																						":workspaceId",
																						"contact"
																					],
																					"variable": [
																						{
																							"key": "workspaceId"
																						}
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
																		}
																	]
																}
															]
														},
														{
															"name": "Get workspace information",
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/workspaces/v1/workspaces/:workspaceId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"workspaces",
																		"v1",
																		"workspaces",
																		":workspaceId"
																	],
																	"variable": [
																		{
																			"key": "workspaceId",
																			"value": "{{WorkspaceId}}",
																			"description": "(Required) The unique identifier of the workspace."
																		}
																	]
																},
																"description": "Retrieve basic workspace information for a provided workspace identifier."
															},
															"response": [
																{
																	"name": "Successful Response",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/workspaces/v1/workspaces/:workspaceId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"workspaces",
																				"v1",
																				"workspaces",
																				":workspaceId"
																			],
																			"variable": [
																				{
																					"key": "workspaceId"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"id\": \"<uuid>\",\n  \"type\": \"<string>\",\n  \"workspaceName\": \"<string>\",\n  \"generation\": 0,\n  \"createdAt\": \"<dateTime>\",\n  \"updatedAt\": \"<dateTime>\",\n  \"createdBy\": \"<email>\"\n}"
																},
																{
																	"name": "Unauthorized",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/workspaces/v1/workspaces/:workspaceId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"workspaces",
																				"v1",
																				"workspaces",
																				":workspaceId"
																			],
																			"variable": [
																				{
																					"key": "workspaceId"
																				}
																			]
																		}
																	},
																	"status": "Unauthorized",
																	"code": 401,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
																},
																{
																	"name": "Forbidden",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/workspaces/v1/workspaces/:workspaceId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"workspaces",
																				"v1",
																				"workspaces",
																				":workspaceId"
																			],
																			"variable": [
																				{
																					"key": "workspaceId"
																				}
																			]
																		}
																	},
																	"status": "Forbidden",
																	"code": 403,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
																},
																{
																	"name": "Precondition Failed",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/workspaces/v1/workspaces/:workspaceId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"workspaces",
																				"v1",
																				"workspaces",
																				":workspaceId"
																			],
																			"variable": [
																				{
																					"key": "workspaceId"
																				}
																			]
																		}
																	},
																	"status": "Precondition Failed",
																	"code": 412,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
																},
																{
																	"name": "Unprocessable Entity",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/workspaces/v1/workspaces/:workspaceId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"workspaces",
																				"v1",
																				"workspaces",
																				":workspaceId"
																			],
																			"variable": [
																				{
																					"key": "workspaceId"
																				}
																			]
																		}
																	},
																	"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
																	"code": 422,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
																},
																{
																	"name": "Internal Server Error",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/workspaces/v1/workspaces/:workspaceId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"workspaces",
																				"v1",
																				"workspaces",
																				":workspaceId"
																			],
																			"variable": [
																				{
																					"key": "workspaceId"
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
																}
															]
														}
													]
												}
											]
										},
										{
											"name": "msp-tenants",
											"item": [
												{
													"name": "{tenantId}",
													"item": [
														{
															"name": "Update managed service tenant",
															"request": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"workspaceName\": \"<string>\",\n  \"address\": {\n    \"countryCode\": \"NI\",\n    \"streetAddress\": \"<string>\",\n    \"streetAddressComplement\": \"<string>\",\n    \"city\": \"<string>\",\n    \"stateOrRegion\": \"<string>\",\n    \"zip\": \"<string>\"\n  },\n  \"phoneNumber\": \"<string>\",\n  \"email\": \"<email>\",\n  \"description\": \"<string>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/workspaces/v1/msp-tenants/:tenantId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"workspaces",
																		"v1",
																		"msp-tenants",
																		":tenantId"
																	],
																	"variable": [
																		{
																			"key": "tenantId",
																			"value": "{{MSP-TenantId}}",
																			"description": "(Required) The unique ID of the tenant."
																		}
																	]
																},
																"description": "Update an existing tenant in the currently logged in managed service provider (MSP) workspace."
															},
															"response": [
																{
																	"name": "Successful Response",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"workspaceName\": \"<string>\",\n  \"address\": {\n    \"countryCode\": \"NI\",\n    \"streetAddress\": \"<string>\",\n    \"streetAddressComplement\": \"<string>\",\n    \"city\": \"<string>\",\n    \"stateOrRegion\": \"<string>\",\n    \"zip\": \"<string>\"\n  },\n  \"phoneNumber\": \"<string>\",\n  \"email\": \"<email>\",\n  \"description\": \"<string>\"\n}",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/workspaces/v1/msp-tenants/:tenantId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"workspaces",
																				"v1",
																				"msp-tenants",
																				":tenantId"
																			],
																			"variable": [
																				{
																					"key": "tenantId"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"message\": \"<string>\"\n}"
																},
																{
																	"name": "Unauthorized",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"workspaceName\": \"<string>\",\n  \"address\": {\n    \"countryCode\": \"NI\",\n    \"streetAddress\": \"<string>\",\n    \"streetAddressComplement\": \"<string>\",\n    \"city\": \"<string>\",\n    \"stateOrRegion\": \"<string>\",\n    \"zip\": \"<string>\"\n  },\n  \"phoneNumber\": \"<string>\",\n  \"email\": \"<email>\",\n  \"description\": \"<string>\"\n}",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/workspaces/v1/msp-tenants/:tenantId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"workspaces",
																				"v1",
																				"msp-tenants",
																				":tenantId"
																			],
																			"variable": [
																				{
																					"key": "tenantId"
																				}
																			]
																		}
																	},
																	"status": "Unauthorized",
																	"code": 401,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
																},
																{
																	"name": "Forbidden",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"workspaceName\": \"<string>\",\n  \"address\": {\n    \"countryCode\": \"NI\",\n    \"streetAddress\": \"<string>\",\n    \"streetAddressComplement\": \"<string>\",\n    \"city\": \"<string>\",\n    \"stateOrRegion\": \"<string>\",\n    \"zip\": \"<string>\"\n  },\n  \"phoneNumber\": \"<string>\",\n  \"email\": \"<email>\",\n  \"description\": \"<string>\"\n}",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/workspaces/v1/msp-tenants/:tenantId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"workspaces",
																				"v1",
																				"msp-tenants",
																				":tenantId"
																			],
																			"variable": [
																				{
																					"key": "tenantId"
																				}
																			]
																		}
																	},
																	"status": "Forbidden",
																	"code": 403,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
																},
																{
																	"name": "Conflict",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"workspaceName\": \"<string>\",\n  \"address\": {\n    \"countryCode\": \"NI\",\n    \"streetAddress\": \"<string>\",\n    \"streetAddressComplement\": \"<string>\",\n    \"city\": \"<string>\",\n    \"stateOrRegion\": \"<string>\",\n    \"zip\": \"<string>\"\n  },\n  \"phoneNumber\": \"<string>\",\n  \"email\": \"<email>\",\n  \"description\": \"<string>\"\n}",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/workspaces/v1/msp-tenants/:tenantId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"workspaces",
																				"v1",
																				"msp-tenants",
																				":tenantId"
																			],
																			"variable": [
																				{
																					"key": "tenantId"
																				}
																			]
																		}
																	},
																	"status": "Conflict",
																	"code": 409,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
																},
																{
																	"name": "Precondition Failed",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"workspaceName\": \"<string>\",\n  \"address\": {\n    \"countryCode\": \"NI\",\n    \"streetAddress\": \"<string>\",\n    \"streetAddressComplement\": \"<string>\",\n    \"city\": \"<string>\",\n    \"stateOrRegion\": \"<string>\",\n    \"zip\": \"<string>\"\n  },\n  \"phoneNumber\": \"<string>\",\n  \"email\": \"<email>\",\n  \"description\": \"<string>\"\n}",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/workspaces/v1/msp-tenants/:tenantId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"workspaces",
																				"v1",
																				"msp-tenants",
																				":tenantId"
																			],
																			"variable": [
																				{
																					"key": "tenantId"
																				}
																			]
																		}
																	},
																	"status": "Precondition Failed",
																	"code": 412,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
																},
																{
																	"name": "Unprocessable Entity",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"workspaceName\": \"<string>\",\n  \"address\": {\n    \"countryCode\": \"NI\",\n    \"streetAddress\": \"<string>\",\n    \"streetAddressComplement\": \"<string>\",\n    \"city\": \"<string>\",\n    \"stateOrRegion\": \"<string>\",\n    \"zip\": \"<string>\"\n  },\n  \"phoneNumber\": \"<string>\",\n  \"email\": \"<email>\",\n  \"description\": \"<string>\"\n}",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/workspaces/v1/msp-tenants/:tenantId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"workspaces",
																				"v1",
																				"msp-tenants",
																				":tenantId"
																			],
																			"variable": [
																				{
																					"key": "tenantId"
																				}
																			]
																		}
																	},
																	"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
																	"code": 422,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
																},
																{
																	"name": "Unavailable For Legal Reasons",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"workspaceName\": \"<string>\",\n  \"address\": {\n    \"countryCode\": \"NI\",\n    \"streetAddress\": \"<string>\",\n    \"streetAddressComplement\": \"<string>\",\n    \"city\": \"<string>\",\n    \"stateOrRegion\": \"<string>\",\n    \"zip\": \"<string>\"\n  },\n  \"phoneNumber\": \"<string>\",\n  \"email\": \"<email>\",\n  \"description\": \"<string>\"\n}",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/workspaces/v1/msp-tenants/:tenantId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"workspaces",
																				"v1",
																				"msp-tenants",
																				":tenantId"
																			],
																			"variable": [
																				{
																					"key": "tenantId"
																				}
																			]
																		}
																	},
																	"code": 451,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
																},
																{
																	"name": "Internal Server Error",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"workspaceName\": \"<string>\",\n  \"address\": {\n    \"countryCode\": \"NI\",\n    \"streetAddress\": \"<string>\",\n    \"streetAddressComplement\": \"<string>\",\n    \"city\": \"<string>\",\n    \"stateOrRegion\": \"<string>\",\n    \"zip\": \"<string>\"\n  },\n  \"phoneNumber\": \"<string>\",\n  \"email\": \"<email>\",\n  \"description\": \"<string>\"\n}",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/workspaces/v1/msp-tenants/:tenantId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"workspaces",
																				"v1",
																				"msp-tenants",
																				":tenantId"
																			],
																			"variable": [
																				{
																					"key": "tenantId"
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
																}
															]
														},
														{
															"name": "Delete a managed service tenant",
															"request": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/workspaces/v1/msp-tenants/:tenantId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"workspaces",
																		"v1",
																		"msp-tenants",
																		":tenantId"
																	],
																	"variable": [
																		{
																			"key": "tenantId",
																			"value": "{{MSP-TenantId}}",
																			"description": "(Required) The workspace ID for the tenant you want to delete."
																		}
																	]
																},
																"description": "Delete a tenant in the currently logged in managed service provider's (MSP) workspace."
															},
															"response": [
																{
																	"name": "Successful Response",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/workspaces/v1/msp-tenants/:tenantId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"workspaces",
																				"v1",
																				"msp-tenants",
																				":tenantId"
																			],
																			"variable": [
																				{
																					"key": "tenantId"
																				}
																			]
																		}
																	},
																	"status": "No Content",
																	"code": 204,
																	"_postman_previewlanguage": "text",
																	"header": [],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "Bad Request",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/workspaces/v1/msp-tenants/:tenantId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"workspaces",
																				"v1",
																				"msp-tenants",
																				":tenantId"
																			],
																			"variable": [
																				{
																					"key": "tenantId"
																				}
																			]
																		}
																	},
																	"status": "Bad Request",
																	"code": 400,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
																},
																{
																	"name": "Unauthorized",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/workspaces/v1/msp-tenants/:tenantId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"workspaces",
																				"v1",
																				"msp-tenants",
																				":tenantId"
																			],
																			"variable": [
																				{
																					"key": "tenantId"
																				}
																			]
																		}
																	},
																	"status": "Unauthorized",
																	"code": 401,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
																},
																{
																	"name": "Forbidden",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/workspaces/v1/msp-tenants/:tenantId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"workspaces",
																				"v1",
																				"msp-tenants",
																				":tenantId"
																			],
																			"variable": [
																				{
																					"key": "tenantId"
																				}
																			]
																		}
																	},
																	"status": "Forbidden",
																	"code": 403,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
																},
																{
																	"name": "Conflict",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/workspaces/v1/msp-tenants/:tenantId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"workspaces",
																				"v1",
																				"msp-tenants",
																				":tenantId"
																			],
																			"variable": [
																				{
																					"key": "tenantId"
																				}
																			]
																		}
																	},
																	"status": "Conflict",
																	"code": 409,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
																},
																{
																	"name": "Precondition Failed",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/workspaces/v1/msp-tenants/:tenantId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"workspaces",
																				"v1",
																				"msp-tenants",
																				":tenantId"
																			],
																			"variable": [
																				{
																					"key": "tenantId"
																				}
																			]
																		}
																	},
																	"status": "Precondition Failed",
																	"code": 412,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
																},
																{
																	"name": "Unprocessable Entity",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/workspaces/v1/msp-tenants/:tenantId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"workspaces",
																				"v1",
																				"msp-tenants",
																				":tenantId"
																			],
																			"variable": [
																				{
																					"key": "tenantId"
																				}
																			]
																		}
																	},
																	"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
																	"code": 422,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
																},
																{
																	"name": "Internal Server Error",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/workspaces/v1/msp-tenants/:tenantId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"workspaces",
																				"v1",
																				"msp-tenants",
																				":tenantId"
																			],
																			"variable": [
																				{
																					"key": "tenantId"
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
																}
															]
														}
													]
												},
												{
													"name": "Get list of MSP Tenants",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/workspaces/v1/msp-tenants?offset=0&limit=300",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"workspaces",
																"v1",
																"msp-tenants"
															],
															"query": [
																{
																	"key": "filter",
																	"value": "",
																	"description": "\nFilter data using a subset of OData 4.0 and return only the subset of resources that match the filter.\n\nGet list of MSP Tenants API can be filtered by:\n- id\n- createdAt\n- updatedAt\n- workspaceName\n- createdBy\n",
																	"disabled": true
																},
																{
																	"key": "offset",
																	"value": "0",
																	"description": "Specify pagination offset. An offset argument defines how many pages to skip before returning results."
																},
																{
																	"key": "limit",
																	"value": "300",
																	"description": "Specify the maximum number of entries per page. NOTE: The maximum value accepted is 300."
																}
															]
														},
														"description": "Retrieve a list of managed service provider (MSP) tenants."
													},
													"response": [
														{
															"name": "Successful Response",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/workspaces/v1/msp-tenants?filter=&offset=0&limit=300",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"workspaces",
																		"v1",
																		"msp-tenants"
																	],
																	"query": [
																		{
																			"key": "filter",
																			"value": "",
																			"description": "\nFilter data using a subset of OData 4.0 and return only the subset of resources that match the filter.\n\nGet list of MSP Tenants API can be filtered by:\n- id\n- createdAt\n- updatedAt\n- workspaceName\n- createdBy\n"
																		},
																		{
																			"key": "offset",
																			"value": "0",
																			"description": "Specify pagination offset. An offset argument defines how many pages to skip before returning results."
																		},
																		{
																			"key": "limit",
																			"value": "300",
																			"description": "Specify the maximum number of entries per page. NOTE: The maximum value accepted is 300."
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"offset\": \"<integer>\",\n  \"count\": \"<integer>\",\n  \"total\": \"<integer>\",\n  \"items\": [\n    {\n      \"id\": \"<uuid>\",\n      \"type\": \"<string>\",\n      \"workspaceName\": \"<string>\",\n      \"generation\": 0,\n      \"createdAt\": \"<dateTime>\",\n      \"updatedAt\": \"<dateTime>\",\n      \"createdBy\": \"<email>\"\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"type\": \"<string>\",\n      \"workspaceName\": \"<string>\",\n      \"generation\": 0,\n      \"createdAt\": \"<dateTime>\",\n      \"updatedAt\": \"<dateTime>\",\n      \"createdBy\": \"<email>\"\n    }\n  ]\n}"
														},
														{
															"name": "Unauthorized",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/workspaces/v1/msp-tenants?filter=&offset=0&limit=300",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"workspaces",
																		"v1",
																		"msp-tenants"
																	],
																	"query": [
																		{
																			"key": "filter",
																			"value": "",
																			"description": "\nFilter data using a subset of OData 4.0 and return only the subset of resources that match the filter.\n\nGet list of MSP Tenants API can be filtered by:\n- id\n- createdAt\n- updatedAt\n- workspaceName\n- createdBy\n"
																		},
																		{
																			"key": "offset",
																			"value": "0",
																			"description": "Specify pagination offset. An offset argument defines how many pages to skip before returning results."
																		},
																		{
																			"key": "limit",
																			"value": "300",
																			"description": "Specify the maximum number of entries per page. NOTE: The maximum value accepted is 300."
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
														},
														{
															"name": "Forbidden",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/workspaces/v1/msp-tenants?filter=&offset=0&limit=300",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"workspaces",
																		"v1",
																		"msp-tenants"
																	],
																	"query": [
																		{
																			"key": "filter",
																			"value": "",
																			"description": "\nFilter data using a subset of OData 4.0 and return only the subset of resources that match the filter.\n\nGet list of MSP Tenants API can be filtered by:\n- id\n- createdAt\n- updatedAt\n- workspaceName\n- createdBy\n"
																		},
																		{
																			"key": "offset",
																			"value": "0",
																			"description": "Specify pagination offset. An offset argument defines how many pages to skip before returning results."
																		},
																		{
																			"key": "limit",
																			"value": "300",
																			"description": "Specify the maximum number of entries per page. NOTE: The maximum value accepted is 300."
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
														},
														{
															"name": "Precondition Failed",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/workspaces/v1/msp-tenants?filter=&offset=0&limit=300",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"workspaces",
																		"v1",
																		"msp-tenants"
																	],
																	"query": [
																		{
																			"key": "filter",
																			"value": "",
																			"description": "\nFilter data using a subset of OData 4.0 and return only the subset of resources that match the filter.\n\nGet list of MSP Tenants API can be filtered by:\n- id\n- createdAt\n- updatedAt\n- workspaceName\n- createdBy\n"
																		},
																		{
																			"key": "offset",
																			"value": "0",
																			"description": "Specify pagination offset. An offset argument defines how many pages to skip before returning results."
																		},
																		{
																			"key": "limit",
																			"value": "300",
																			"description": "Specify the maximum number of entries per page. NOTE: The maximum value accepted is 300."
																		}
																	]
																}
															},
															"status": "Precondition Failed",
															"code": 412,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
														},
														{
															"name": "Unprocessable Entity",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/workspaces/v1/msp-tenants?filter=&offset=0&limit=300",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"workspaces",
																		"v1",
																		"msp-tenants"
																	],
																	"query": [
																		{
																			"key": "filter",
																			"value": "",
																			"description": "\nFilter data using a subset of OData 4.0 and return only the subset of resources that match the filter.\n\nGet list of MSP Tenants API can be filtered by:\n- id\n- createdAt\n- updatedAt\n- workspaceName\n- createdBy\n"
																		},
																		{
																			"key": "offset",
																			"value": "0",
																			"description": "Specify pagination offset. An offset argument defines how many pages to skip before returning results."
																		},
																		{
																			"key": "limit",
																			"value": "300",
																			"description": "Specify the maximum number of entries per page. NOTE: The maximum value accepted is 300."
																		}
																	]
																}
															},
															"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
															"code": 422,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
														},
														{
															"name": "Internal Server Error",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/workspaces/v1/msp-tenants?filter=&offset=0&limit=300",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"workspaces",
																		"v1",
																		"msp-tenants"
																	],
																	"query": [
																		{
																			"key": "filter",
																			"value": "",
																			"description": "\nFilter data using a subset of OData 4.0 and return only the subset of resources that match the filter.\n\nGet list of MSP Tenants API can be filtered by:\n- id\n- createdAt\n- updatedAt\n- workspaceName\n- createdBy\n"
																		},
																		{
																			"key": "offset",
																			"value": "0",
																			"description": "Specify pagination offset. An offset argument defines how many pages to skip before returning results."
																		},
																		{
																			"key": "limit",
																			"value": "300",
																			"description": "Specify the maximum number of entries per page. NOTE: The maximum value accepted is 300."
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
														}
													]
												},
												{
													"name": "Create MSP customer workspace",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"workspaceName\": \"<string>\",\n  \"address\": {\n    \"countryCode\": \"PA\",\n    \"streetAddress\": \"<string>\",\n    \"streetAddressComplement\": \"<string>\",\n    \"city\": \"<string>\",\n    \"stateOrRegion\": \"<string>\",\n    \"zip\": \"<string>\"\n  },\n  \"phoneNumber\": \"<string>\",\n  \"email\": \"<email>\",\n  \"description\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/workspaces/v1/msp-tenants",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"workspaces",
																"v1",
																"msp-tenants"
															]
														},
														"description": "Create an MSP customer workspace."
													},
													"response": [
														{
															"name": "Successful Response",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"workspaceName\": \"<string>\",\n  \"address\": {\n    \"countryCode\": \"PA\",\n    \"streetAddress\": \"<string>\",\n    \"streetAddressComplement\": \"<string>\",\n    \"city\": \"<string>\",\n    \"stateOrRegion\": \"<string>\",\n    \"zip\": \"<string>\"\n  },\n  \"phoneNumber\": \"<string>\",\n  \"email\": \"<email>\",\n  \"description\": \"<string>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/workspaces/v1/msp-tenants",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"workspaces",
																		"v1",
																		"msp-tenants"
																	]
																}
															},
															"status": "Created",
															"code": 201,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																},
																{
																	"key": "Location",
																	"value": "<string>",
																	"description": {
																		"content": "",
																		"type": "text/plain"
																	}
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"<string>\"\n}"
														},
														{
															"name": "Bad Request",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"workspaceName\": \"<string>\",\n  \"address\": {\n    \"countryCode\": \"PA\",\n    \"streetAddress\": \"<string>\",\n    \"streetAddressComplement\": \"<string>\",\n    \"city\": \"<string>\",\n    \"stateOrRegion\": \"<string>\",\n    \"zip\": \"<string>\"\n  },\n  \"phoneNumber\": \"<string>\",\n  \"email\": \"<email>\",\n  \"description\": \"<string>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/workspaces/v1/msp-tenants",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"workspaces",
																		"v1",
																		"msp-tenants"
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
														},
														{
															"name": "Unauthorized",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"workspaceName\": \"<string>\",\n  \"address\": {\n    \"countryCode\": \"PA\",\n    \"streetAddress\": \"<string>\",\n    \"streetAddressComplement\": \"<string>\",\n    \"city\": \"<string>\",\n    \"stateOrRegion\": \"<string>\",\n    \"zip\": \"<string>\"\n  },\n  \"phoneNumber\": \"<string>\",\n  \"email\": \"<email>\",\n  \"description\": \"<string>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/workspaces/v1/msp-tenants",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"workspaces",
																		"v1",
																		"msp-tenants"
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
														},
														{
															"name": "Forbidden",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"workspaceName\": \"<string>\",\n  \"address\": {\n    \"countryCode\": \"PA\",\n    \"streetAddress\": \"<string>\",\n    \"streetAddressComplement\": \"<string>\",\n    \"city\": \"<string>\",\n    \"stateOrRegion\": \"<string>\",\n    \"zip\": \"<string>\"\n  },\n  \"phoneNumber\": \"<string>\",\n  \"email\": \"<email>\",\n  \"description\": \"<string>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/workspaces/v1/msp-tenants",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"workspaces",
																		"v1",
																		"msp-tenants"
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
														},
														{
															"name": "Conflict",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"workspaceName\": \"<string>\",\n  \"address\": {\n    \"countryCode\": \"PA\",\n    \"streetAddress\": \"<string>\",\n    \"streetAddressComplement\": \"<string>\",\n    \"city\": \"<string>\",\n    \"stateOrRegion\": \"<string>\",\n    \"zip\": \"<string>\"\n  },\n  \"phoneNumber\": \"<string>\",\n  \"email\": \"<email>\",\n  \"description\": \"<string>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/workspaces/v1/msp-tenants",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"workspaces",
																		"v1",
																		"msp-tenants"
																	]
																}
															},
															"status": "Conflict",
															"code": 409,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
														},
														{
															"name": "Precondition Failed",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"workspaceName\": \"<string>\",\n  \"address\": {\n    \"countryCode\": \"PA\",\n    \"streetAddress\": \"<string>\",\n    \"streetAddressComplement\": \"<string>\",\n    \"city\": \"<string>\",\n    \"stateOrRegion\": \"<string>\",\n    \"zip\": \"<string>\"\n  },\n  \"phoneNumber\": \"<string>\",\n  \"email\": \"<email>\",\n  \"description\": \"<string>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/workspaces/v1/msp-tenants",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"workspaces",
																		"v1",
																		"msp-tenants"
																	]
																}
															},
															"status": "Precondition Failed",
															"code": 412,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
														},
														{
															"name": "Unprocessable Entity",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"workspaceName\": \"<string>\",\n  \"address\": {\n    \"countryCode\": \"PA\",\n    \"streetAddress\": \"<string>\",\n    \"streetAddressComplement\": \"<string>\",\n    \"city\": \"<string>\",\n    \"stateOrRegion\": \"<string>\",\n    \"zip\": \"<string>\"\n  },\n  \"phoneNumber\": \"<string>\",\n  \"email\": \"<email>\",\n  \"description\": \"<string>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/workspaces/v1/msp-tenants",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"workspaces",
																		"v1",
																		"msp-tenants"
																	]
																}
															},
															"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
															"code": 422,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
														},
														{
															"name": "Unavailable For Legal Reasons",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"workspaceName\": \"<string>\",\n  \"address\": {\n    \"countryCode\": \"PA\",\n    \"streetAddress\": \"<string>\",\n    \"streetAddressComplement\": \"<string>\",\n    \"city\": \"<string>\",\n    \"stateOrRegion\": \"<string>\",\n    \"zip\": \"<string>\"\n  },\n  \"phoneNumber\": \"<string>\",\n  \"email\": \"<email>\",\n  \"description\": \"<string>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/workspaces/v1/msp-tenants",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"workspaces",
																		"v1",
																		"msp-tenants"
																	]
																}
															},
															"code": 451,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
														},
														{
															"name": "Internal Server Error",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"workspaceName\": \"<string>\",\n  \"address\": {\n    \"countryCode\": \"PA\",\n    \"streetAddress\": \"<string>\",\n    \"streetAddressComplement\": \"<string>\",\n    \"city\": \"<string>\",\n    \"stateOrRegion\": \"<string>\",\n    \"zip\": \"<string>\"\n  },\n  \"phoneNumber\": \"<string>\",\n  \"email\": \"<email>\",\n  \"description\": \"<string>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/workspaces/v1/msp-tenants",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"workspaces",
																		"v1",
																		"msp-tenants"
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
														}
													]
												}
											]
										}
									]
								}
							]
						},
						{
							"name": "authorization/v1alpha1",
							"item": [
								{
									"name": "applications/{application-id}",
									"item": [
										{
											"name": "assignments",
											"item": [
												{
													"name": "Assign role to a user",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"roleId\": \"<string>\",\n  \"subjectId\": \"<string>\",\n  \"accessRules\": {\n    \"msp\": \"<boolean>\",\n    \"tenants\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"resourceRestrictionPolicies\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/authorization/v1alpha1/applications/:application-id/assignments",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"authorization",
																"v1alpha1",
																"applications",
																":application-id",
																"assignments"
															],
															"variable": [
																{
																	"key": "application-id",
																	"value": "<uuid>",
																	"description": "(Required) Unique identifier of the application"
																}
															]
														},
														"description": "Assign role to a user within an application"
													},
													"response": [
														{
															"name": "Successful Response",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"roleId\": \"<string>\",\n  \"subjectId\": \"<string>\",\n  \"accessRules\": {\n    \"msp\": \"<boolean>\",\n    \"tenants\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"resourceRestrictionPolicies\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/authorization/v1alpha1/applications/:application-id/assignments",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"authorization",
																		"v1alpha1",
																		"applications",
																		":application-id",
																		"assignments"
																	],
																	"variable": [
																		{
																			"key": "application-id",
																			"value": "<uuid>",
																			"description": "(Required) Unique identifier of the application"
																		}
																	]
																}
															},
															"status": "Created",
															"code": 201,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Location",
																	"value": "<string>",
																	"description": "URL to access the newly created assignment"
																},
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"subjectName\": \"<string>\",\n  \"count\": \"<integer>\",\n  \"items\": [\n    {\n      \"id\": \"<string>\",\n      \"type\": \"<string>\",\n      \"roleName\": \"<string>\",\n      \"createdAt\": \"<dateTime>\",\n      \"updatedAt\": \"<dateTime>\",\n      \"generation\": \"<integer>\",\n      \"accessRules\": {\n        \"msp\": \"<boolean>\",\n        \"tenants\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"applicationId\": \"<string>\",\n      \"applicationName\": \"<string>\",\n      \"roleDescription\": \"<string>\",\n      \"tags\": \"<object>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"type\": \"<string>\",\n      \"roleName\": \"<string>\",\n      \"createdAt\": \"<dateTime>\",\n      \"updatedAt\": \"<dateTime>\",\n      \"generation\": \"<integer>\",\n      \"accessRules\": {\n        \"msp\": \"<boolean>\",\n        \"tenants\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"applicationId\": \"<string>\",\n      \"applicationName\": \"<string>\",\n      \"roleDescription\": \"<string>\",\n      \"tags\": \"<object>\"\n    }\n  ],\n  \"subjectFirstName\": \"<string>\",\n  \"subjectLastName\": \"<string>\",\n  \"subjectType\": \"<string>\"\n}"
														},
														{
															"name": "Bad Request",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"roleId\": \"<string>\",\n  \"subjectId\": \"<string>\",\n  \"accessRules\": {\n    \"msp\": \"<boolean>\",\n    \"tenants\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"resourceRestrictionPolicies\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/authorization/v1alpha1/applications/:application-id/assignments",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"authorization",
																		"v1alpha1",
																		"applications",
																		":application-id",
																		"assignments"
																	],
																	"variable": [
																		{
																			"key": "application-id",
																			"value": "<uuid>",
																			"description": "(Required) Unique identifier of the application"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"errorCode\": \"HPE_GL_ERROR_BAD_REQUEST\",\n  \"message\": \"Bad Request\",\n  \"debugId\": \"00000000-0000-0000-0000-000000000000\",\n  \"httpStatusCode\": 400\n}"
														},
														{
															"name": "Unauthorized",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"roleId\": \"<string>\",\n  \"subjectId\": \"<string>\",\n  \"accessRules\": {\n    \"msp\": \"<boolean>\",\n    \"tenants\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"resourceRestrictionPolicies\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/authorization/v1alpha1/applications/:application-id/assignments",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"authorization",
																		"v1alpha1",
																		"applications",
																		":application-id",
																		"assignments"
																	],
																	"variable": [
																		{
																			"key": "application-id",
																			"value": "<uuid>",
																			"description": "(Required) Unique identifier of the application"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"errorCode\": \"HPE_GL_ERROR_UNAUTHORIZED\",\n  \"message\": \"Authentication error\",\n  \"debugId\": \"00000000-0000-0000-0000-000000000000\",\n  \"httpStatusCode\": 401\n}"
														},
														{
															"name": "Forbidden",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"roleId\": \"<string>\",\n  \"subjectId\": \"<string>\",\n  \"accessRules\": {\n    \"msp\": \"<boolean>\",\n    \"tenants\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"resourceRestrictionPolicies\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/authorization/v1alpha1/applications/:application-id/assignments",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"authorization",
																		"v1alpha1",
																		"applications",
																		":application-id",
																		"assignments"
																	],
																	"variable": [
																		{
																			"key": "application-id",
																			"value": "<uuid>",
																			"description": "(Required) Unique identifier of the application"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"errorCode\": \"HPE_GL_ERROR_FORBIDDEN\",\n  \"message\": \"Action is blocked for this user\",\n  \"debugId\": \"00000000-0000-0000-0000-000000000000\",\n  \"httpStatusCode\": 403\n}"
														},
														{
															"name": "Not Found",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"roleId\": \"<string>\",\n  \"subjectId\": \"<string>\",\n  \"accessRules\": {\n    \"msp\": \"<boolean>\",\n    \"tenants\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"resourceRestrictionPolicies\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/authorization/v1alpha1/applications/:application-id/assignments",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"authorization",
																		"v1alpha1",
																		"applications",
																		":application-id",
																		"assignments"
																	],
																	"variable": [
																		{
																			"key": "application-id",
																			"value": "<uuid>",
																			"description": "(Required) Unique identifier of the application"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"errorCode\": \"HPE_GL_ERROR_NOT_FOUND\",\n  \"message\": \"Not Found\",\n  \"debugId\": \"00000000-0000-0000-0000-000000000000\",\n  \"httpStatusCode\": 404\n}"
														},
														{
															"name": "Method Not Allowed",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"roleId\": \"<string>\",\n  \"subjectId\": \"<string>\",\n  \"accessRules\": {\n    \"msp\": \"<boolean>\",\n    \"tenants\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"resourceRestrictionPolicies\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/authorization/v1alpha1/applications/:application-id/assignments",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"authorization",
																		"v1alpha1",
																		"applications",
																		":application-id",
																		"assignments"
																	],
																	"variable": [
																		{
																			"key": "application-id",
																			"value": "<uuid>",
																			"description": "(Required) Unique identifier of the application"
																		}
																	]
																}
															},
															"status": "Method Not Allowed",
															"code": 405,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"errorCode\": \"HPE_GL_ERROR_METHOD_NOT_ALLOWED\",\n  \"message\": \"The method is not allowed on this path\",\n  \"debugId\": \"00000000-0000-0000-0000-000000000000\",\n  \"httpStatusCode\": 405\n}"
														},
														{
															"name": "Conflict",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"roleId\": \"<string>\",\n  \"subjectId\": \"<string>\",\n  \"accessRules\": {\n    \"msp\": \"<boolean>\",\n    \"tenants\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"resourceRestrictionPolicies\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/authorization/v1alpha1/applications/:application-id/assignments",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"authorization",
																		"v1alpha1",
																		"applications",
																		":application-id",
																		"assignments"
																	],
																	"variable": [
																		{
																			"key": "application-id",
																			"value": "<uuid>",
																			"description": "(Required) Unique identifier of the application"
																		}
																	]
																}
															},
															"status": "Conflict",
															"code": 409,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"errorCode\": \"HPE_GL_ERROR_CONFLICT\",\n  \"message\": \"Data Already Exists\",\n  \"debugId\": \"00000000-0000-0000-0000-000000000000\",\n  \"httpStatusCode\": 409\n}"
														},
														{
															"name": "Validation Error",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"roleId\": \"<string>\",\n  \"subjectId\": \"<string>\",\n  \"accessRules\": {\n    \"msp\": \"<boolean>\",\n    \"tenants\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"resourceRestrictionPolicies\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/authorization/v1alpha1/applications/:application-id/assignments",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"authorization",
																		"v1alpha1",
																		"applications",
																		":application-id",
																		"assignments"
																	],
																	"variable": [
																		{
																			"key": "application-id",
																			"value": "<uuid>",
																			"description": "(Required) Unique identifier of the application"
																		}
																	]
																}
															},
															"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
															"code": 422,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"errorCode\": \"HPE_GL_ERROR_REQUEST_VALIDATION_ERROR\",\n  \"message\": \"Request Validation Error\",\n  \"debugId\": \"00000000-0000-0000-0000-000000000000\",\n  \"httpStatusCode\": 422\n}"
														},
														{
															"name": "Internal Server Error",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"roleId\": \"<string>\",\n  \"subjectId\": \"<string>\",\n  \"accessRules\": {\n    \"msp\": \"<boolean>\",\n    \"tenants\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"resourceRestrictionPolicies\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/authorization/v1alpha1/applications/:application-id/assignments",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"authorization",
																		"v1alpha1",
																		"applications",
																		":application-id",
																		"assignments"
																	],
																	"variable": [
																		{
																			"key": "application-id",
																			"value": "<uuid>",
																			"description": "(Required) Unique identifier of the application"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"errorCode\": \"HPE_GL_ERROR_INTERNAL_SERVER_ERROR\",\n  \"message\": \"The method is not allowed on this path\",\n  \"debugId\": \"00000000-0000-0000-0000-000000000000\",\n  \"httpStatusCode\": 500\n}"
														}
													]
												},
												{
													"name": "Assign invited user with GLP Operator role",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"roleId\": \"ccs.operator\",\n  \"subjectId\": \"grn:glp/organizations/0000-0000-0000-0000/workspaces/{{workspaceid}}/users/{{InvitedUserIdNoDash}}\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/authorization/v1alpha1/applications/:application-id/assignments",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"authorization",
																"v1alpha1",
																"applications",
																":application-id",
																"assignments"
															],
															"variable": [
																{
																	"key": "application-id",
																	"value": "{{GLP_Application_Id}}",
																	"description": "(Required) Unique identifier of the application"
																}
															]
														},
														"description": "Assign role to a user within an application"
													},
													"response": [
														{
															"name": "Successful Response",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"roleId\": \"<string>\",\n  \"subjectId\": \"<string>\",\n  \"accessRules\": {\n    \"msp\": \"<boolean>\",\n    \"tenants\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"resourceRestrictionPolicies\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/authorization/v1alpha1/applications/:application-id/assignments",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"authorization",
																		"v1alpha1",
																		"applications",
																		":application-id",
																		"assignments"
																	],
																	"variable": [
																		{
																			"key": "application-id",
																			"value": "<uuid>",
																			"description": "(Required) Unique identifier of the application"
																		}
																	]
																}
															},
															"status": "Created",
															"code": 201,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Location",
																	"value": "<string>",
																	"description": "URL to access the newly created assignment"
																},
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"subjectName\": \"<string>\",\n  \"count\": \"<integer>\",\n  \"items\": [\n    {\n      \"id\": \"<string>\",\n      \"type\": \"<string>\",\n      \"roleName\": \"<string>\",\n      \"createdAt\": \"<dateTime>\",\n      \"updatedAt\": \"<dateTime>\",\n      \"generation\": \"<integer>\",\n      \"accessRules\": {\n        \"msp\": \"<boolean>\",\n        \"tenants\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"applicationId\": \"<string>\",\n      \"applicationName\": \"<string>\",\n      \"roleDescription\": \"<string>\",\n      \"tags\": \"<object>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"type\": \"<string>\",\n      \"roleName\": \"<string>\",\n      \"createdAt\": \"<dateTime>\",\n      \"updatedAt\": \"<dateTime>\",\n      \"generation\": \"<integer>\",\n      \"accessRules\": {\n        \"msp\": \"<boolean>\",\n        \"tenants\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"applicationId\": \"<string>\",\n      \"applicationName\": \"<string>\",\n      \"roleDescription\": \"<string>\",\n      \"tags\": \"<object>\"\n    }\n  ],\n  \"subjectFirstName\": \"<string>\",\n  \"subjectLastName\": \"<string>\",\n  \"subjectType\": \"<string>\"\n}"
														},
														{
															"name": "Bad Request",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"roleId\": \"<string>\",\n  \"subjectId\": \"<string>\",\n  \"accessRules\": {\n    \"msp\": \"<boolean>\",\n    \"tenants\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"resourceRestrictionPolicies\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/authorization/v1alpha1/applications/:application-id/assignments",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"authorization",
																		"v1alpha1",
																		"applications",
																		":application-id",
																		"assignments"
																	],
																	"variable": [
																		{
																			"key": "application-id",
																			"value": "<uuid>",
																			"description": "(Required) Unique identifier of the application"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"errorCode\": \"HPE_GL_ERROR_BAD_REQUEST\",\n  \"message\": \"Bad Request\",\n  \"debugId\": \"00000000-0000-0000-0000-000000000000\",\n  \"httpStatusCode\": 400\n}"
														},
														{
															"name": "Unauthorized",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"roleId\": \"<string>\",\n  \"subjectId\": \"<string>\",\n  \"accessRules\": {\n    \"msp\": \"<boolean>\",\n    \"tenants\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"resourceRestrictionPolicies\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/authorization/v1alpha1/applications/:application-id/assignments",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"authorization",
																		"v1alpha1",
																		"applications",
																		":application-id",
																		"assignments"
																	],
																	"variable": [
																		{
																			"key": "application-id",
																			"value": "<uuid>",
																			"description": "(Required) Unique identifier of the application"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"errorCode\": \"HPE_GL_ERROR_UNAUTHORIZED\",\n  \"message\": \"Authentication error\",\n  \"debugId\": \"00000000-0000-0000-0000-000000000000\",\n  \"httpStatusCode\": 401\n}"
														},
														{
															"name": "Forbidden",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"roleId\": \"<string>\",\n  \"subjectId\": \"<string>\",\n  \"accessRules\": {\n    \"msp\": \"<boolean>\",\n    \"tenants\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"resourceRestrictionPolicies\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/authorization/v1alpha1/applications/:application-id/assignments",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"authorization",
																		"v1alpha1",
																		"applications",
																		":application-id",
																		"assignments"
																	],
																	"variable": [
																		{
																			"key": "application-id",
																			"value": "<uuid>",
																			"description": "(Required) Unique identifier of the application"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"errorCode\": \"HPE_GL_ERROR_FORBIDDEN\",\n  \"message\": \"Action is blocked for this user\",\n  \"debugId\": \"00000000-0000-0000-0000-000000000000\",\n  \"httpStatusCode\": 403\n}"
														},
														{
															"name": "Not Found",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"roleId\": \"<string>\",\n  \"subjectId\": \"<string>\",\n  \"accessRules\": {\n    \"msp\": \"<boolean>\",\n    \"tenants\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"resourceRestrictionPolicies\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/authorization/v1alpha1/applications/:application-id/assignments",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"authorization",
																		"v1alpha1",
																		"applications",
																		":application-id",
																		"assignments"
																	],
																	"variable": [
																		{
																			"key": "application-id",
																			"value": "<uuid>",
																			"description": "(Required) Unique identifier of the application"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"errorCode\": \"HPE_GL_ERROR_NOT_FOUND\",\n  \"message\": \"Not Found\",\n  \"debugId\": \"00000000-0000-0000-0000-000000000000\",\n  \"httpStatusCode\": 404\n}"
														},
														{
															"name": "Method Not Allowed",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"roleId\": \"<string>\",\n  \"subjectId\": \"<string>\",\n  \"accessRules\": {\n    \"msp\": \"<boolean>\",\n    \"tenants\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"resourceRestrictionPolicies\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/authorization/v1alpha1/applications/:application-id/assignments",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"authorization",
																		"v1alpha1",
																		"applications",
																		":application-id",
																		"assignments"
																	],
																	"variable": [
																		{
																			"key": "application-id",
																			"value": "<uuid>",
																			"description": "(Required) Unique identifier of the application"
																		}
																	]
																}
															},
															"status": "Method Not Allowed",
															"code": 405,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"errorCode\": \"HPE_GL_ERROR_METHOD_NOT_ALLOWED\",\n  \"message\": \"The method is not allowed on this path\",\n  \"debugId\": \"00000000-0000-0000-0000-000000000000\",\n  \"httpStatusCode\": 405\n}"
														},
														{
															"name": "Conflict",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"roleId\": \"<string>\",\n  \"subjectId\": \"<string>\",\n  \"accessRules\": {\n    \"msp\": \"<boolean>\",\n    \"tenants\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"resourceRestrictionPolicies\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/authorization/v1alpha1/applications/:application-id/assignments",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"authorization",
																		"v1alpha1",
																		"applications",
																		":application-id",
																		"assignments"
																	],
																	"variable": [
																		{
																			"key": "application-id",
																			"value": "<uuid>",
																			"description": "(Required) Unique identifier of the application"
																		}
																	]
																}
															},
															"status": "Conflict",
															"code": 409,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"errorCode\": \"HPE_GL_ERROR_CONFLICT\",\n  \"message\": \"Data Already Exists\",\n  \"debugId\": \"00000000-0000-0000-0000-000000000000\",\n  \"httpStatusCode\": 409\n}"
														},
														{
															"name": "Validation Error",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"roleId\": \"<string>\",\n  \"subjectId\": \"<string>\",\n  \"accessRules\": {\n    \"msp\": \"<boolean>\",\n    \"tenants\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"resourceRestrictionPolicies\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/authorization/v1alpha1/applications/:application-id/assignments",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"authorization",
																		"v1alpha1",
																		"applications",
																		":application-id",
																		"assignments"
																	],
																	"variable": [
																		{
																			"key": "application-id",
																			"value": "<uuid>",
																			"description": "(Required) Unique identifier of the application"
																		}
																	]
																}
															},
															"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
															"code": 422,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"errorCode\": \"HPE_GL_ERROR_REQUEST_VALIDATION_ERROR\",\n  \"message\": \"Request Validation Error\",\n  \"debugId\": \"00000000-0000-0000-0000-000000000000\",\n  \"httpStatusCode\": 422\n}"
														},
														{
															"name": "Internal Server Error",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"roleId\": \"<string>\",\n  \"subjectId\": \"<string>\",\n  \"accessRules\": {\n    \"msp\": \"<boolean>\",\n    \"tenants\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"resourceRestrictionPolicies\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/authorization/v1alpha1/applications/:application-id/assignments",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"authorization",
																		"v1alpha1",
																		"applications",
																		":application-id",
																		"assignments"
																	],
																	"variable": [
																		{
																			"key": "application-id",
																			"value": "<uuid>",
																			"description": "(Required) Unique identifier of the application"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"errorCode\": \"HPE_GL_ERROR_INTERNAL_SERVER_ERROR\",\n  \"message\": \"The method is not allowed on this path\",\n  \"debugId\": \"00000000-0000-0000-0000-000000000000\",\n  \"httpStatusCode\": 500\n}"
														}
													]
												},
												{
													"name": "Assign invited user with Aruba Admin role",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"roleId\": \"aruba-central.admin\",\n  \"subjectId\": \"grn:glp/organizations/0000-0000-0000-0000/workspaces/{{workspaceid}}/users/{{InvitedUserIdNoDash}}\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/authorization/v1alpha1/applications/:application-id/assignments",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"authorization",
																"v1alpha1",
																"applications",
																":application-id",
																"assignments"
															],
															"variable": [
																{
																	"key": "application-id",
																	"value": "{{Aruba_Application_Id}}",
																	"description": "(Required) Unique identifier of the application"
																}
															]
														},
														"description": "Assign role to a user within an application"
													},
													"response": [
														{
															"name": "Successful Response",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"roleId\": \"<string>\",\n  \"subjectId\": \"<string>\",\n  \"accessRules\": {\n    \"msp\": \"<boolean>\",\n    \"tenants\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"resourceRestrictionPolicies\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/authorization/v1alpha1/applications/:application-id/assignments",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"authorization",
																		"v1alpha1",
																		"applications",
																		":application-id",
																		"assignments"
																	],
																	"variable": [
																		{
																			"key": "application-id",
																			"value": "<uuid>",
																			"description": "(Required) Unique identifier of the application"
																		}
																	]
																}
															},
															"status": "Created",
															"code": 201,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Location",
																	"value": "<string>",
																	"description": "URL to access the newly created assignment"
																},
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"subjectName\": \"<string>\",\n  \"count\": \"<integer>\",\n  \"items\": [\n    {\n      \"id\": \"<string>\",\n      \"type\": \"<string>\",\n      \"roleName\": \"<string>\",\n      \"createdAt\": \"<dateTime>\",\n      \"updatedAt\": \"<dateTime>\",\n      \"generation\": \"<integer>\",\n      \"accessRules\": {\n        \"msp\": \"<boolean>\",\n        \"tenants\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"applicationId\": \"<string>\",\n      \"applicationName\": \"<string>\",\n      \"roleDescription\": \"<string>\",\n      \"tags\": \"<object>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"type\": \"<string>\",\n      \"roleName\": \"<string>\",\n      \"createdAt\": \"<dateTime>\",\n      \"updatedAt\": \"<dateTime>\",\n      \"generation\": \"<integer>\",\n      \"accessRules\": {\n        \"msp\": \"<boolean>\",\n        \"tenants\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"applicationId\": \"<string>\",\n      \"applicationName\": \"<string>\",\n      \"roleDescription\": \"<string>\",\n      \"tags\": \"<object>\"\n    }\n  ],\n  \"subjectFirstName\": \"<string>\",\n  \"subjectLastName\": \"<string>\",\n  \"subjectType\": \"<string>\"\n}"
														},
														{
															"name": "Bad Request",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"roleId\": \"<string>\",\n  \"subjectId\": \"<string>\",\n  \"accessRules\": {\n    \"msp\": \"<boolean>\",\n    \"tenants\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"resourceRestrictionPolicies\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/authorization/v1alpha1/applications/:application-id/assignments",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"authorization",
																		"v1alpha1",
																		"applications",
																		":application-id",
																		"assignments"
																	],
																	"variable": [
																		{
																			"key": "application-id",
																			"value": "<uuid>",
																			"description": "(Required) Unique identifier of the application"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"errorCode\": \"HPE_GL_ERROR_BAD_REQUEST\",\n  \"message\": \"Bad Request\",\n  \"debugId\": \"00000000-0000-0000-0000-000000000000\",\n  \"httpStatusCode\": 400\n}"
														},
														{
															"name": "Unauthorized",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"roleId\": \"<string>\",\n  \"subjectId\": \"<string>\",\n  \"accessRules\": {\n    \"msp\": \"<boolean>\",\n    \"tenants\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"resourceRestrictionPolicies\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/authorization/v1alpha1/applications/:application-id/assignments",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"authorization",
																		"v1alpha1",
																		"applications",
																		":application-id",
																		"assignments"
																	],
																	"variable": [
																		{
																			"key": "application-id",
																			"value": "<uuid>",
																			"description": "(Required) Unique identifier of the application"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"errorCode\": \"HPE_GL_ERROR_UNAUTHORIZED\",\n  \"message\": \"Authentication error\",\n  \"debugId\": \"00000000-0000-0000-0000-000000000000\",\n  \"httpStatusCode\": 401\n}"
														},
														{
															"name": "Forbidden",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"roleId\": \"<string>\",\n  \"subjectId\": \"<string>\",\n  \"accessRules\": {\n    \"msp\": \"<boolean>\",\n    \"tenants\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"resourceRestrictionPolicies\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/authorization/v1alpha1/applications/:application-id/assignments",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"authorization",
																		"v1alpha1",
																		"applications",
																		":application-id",
																		"assignments"
																	],
																	"variable": [
																		{
																			"key": "application-id",
																			"value": "<uuid>",
																			"description": "(Required) Unique identifier of the application"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"errorCode\": \"HPE_GL_ERROR_FORBIDDEN\",\n  \"message\": \"Action is blocked for this user\",\n  \"debugId\": \"00000000-0000-0000-0000-000000000000\",\n  \"httpStatusCode\": 403\n}"
														},
														{
															"name": "Not Found",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"roleId\": \"<string>\",\n  \"subjectId\": \"<string>\",\n  \"accessRules\": {\n    \"msp\": \"<boolean>\",\n    \"tenants\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"resourceRestrictionPolicies\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/authorization/v1alpha1/applications/:application-id/assignments",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"authorization",
																		"v1alpha1",
																		"applications",
																		":application-id",
																		"assignments"
																	],
																	"variable": [
																		{
																			"key": "application-id",
																			"value": "<uuid>",
																			"description": "(Required) Unique identifier of the application"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"errorCode\": \"HPE_GL_ERROR_NOT_FOUND\",\n  \"message\": \"Not Found\",\n  \"debugId\": \"00000000-0000-0000-0000-000000000000\",\n  \"httpStatusCode\": 404\n}"
														},
														{
															"name": "Method Not Allowed",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"roleId\": \"<string>\",\n  \"subjectId\": \"<string>\",\n  \"accessRules\": {\n    \"msp\": \"<boolean>\",\n    \"tenants\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"resourceRestrictionPolicies\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/authorization/v1alpha1/applications/:application-id/assignments",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"authorization",
																		"v1alpha1",
																		"applications",
																		":application-id",
																		"assignments"
																	],
																	"variable": [
																		{
																			"key": "application-id",
																			"value": "<uuid>",
																			"description": "(Required) Unique identifier of the application"
																		}
																	]
																}
															},
															"status": "Method Not Allowed",
															"code": 405,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"errorCode\": \"HPE_GL_ERROR_METHOD_NOT_ALLOWED\",\n  \"message\": \"The method is not allowed on this path\",\n  \"debugId\": \"00000000-0000-0000-0000-000000000000\",\n  \"httpStatusCode\": 405\n}"
														},
														{
															"name": "Conflict",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"roleId\": \"<string>\",\n  \"subjectId\": \"<string>\",\n  \"accessRules\": {\n    \"msp\": \"<boolean>\",\n    \"tenants\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"resourceRestrictionPolicies\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/authorization/v1alpha1/applications/:application-id/assignments",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"authorization",
																		"v1alpha1",
																		"applications",
																		":application-id",
																		"assignments"
																	],
																	"variable": [
																		{
																			"key": "application-id",
																			"value": "<uuid>",
																			"description": "(Required) Unique identifier of the application"
																		}
																	]
																}
															},
															"status": "Conflict",
															"code": 409,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"errorCode\": \"HPE_GL_ERROR_CONFLICT\",\n  \"message\": \"Data Already Exists\",\n  \"debugId\": \"00000000-0000-0000-0000-000000000000\",\n  \"httpStatusCode\": 409\n}"
														},
														{
															"name": "Validation Error",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"roleId\": \"<string>\",\n  \"subjectId\": \"<string>\",\n  \"accessRules\": {\n    \"msp\": \"<boolean>\",\n    \"tenants\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"resourceRestrictionPolicies\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/authorization/v1alpha1/applications/:application-id/assignments",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"authorization",
																		"v1alpha1",
																		"applications",
																		":application-id",
																		"assignments"
																	],
																	"variable": [
																		{
																			"key": "application-id",
																			"value": "<uuid>",
																			"description": "(Required) Unique identifier of the application"
																		}
																	]
																}
															},
															"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
															"code": 422,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"errorCode\": \"HPE_GL_ERROR_REQUEST_VALIDATION_ERROR\",\n  \"message\": \"Request Validation Error\",\n  \"debugId\": \"00000000-0000-0000-0000-000000000000\",\n  \"httpStatusCode\": 422\n}"
														},
														{
															"name": "Internal Server Error",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"roleId\": \"<string>\",\n  \"subjectId\": \"<string>\",\n  \"accessRules\": {\n    \"msp\": \"<boolean>\",\n    \"tenants\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"resourceRestrictionPolicies\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/authorization/v1alpha1/applications/:application-id/assignments",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"authorization",
																		"v1alpha1",
																		"applications",
																		":application-id",
																		"assignments"
																	],
																	"variable": [
																		{
																			"key": "application-id",
																			"value": "<uuid>",
																			"description": "(Required) Unique identifier of the application"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"errorCode\": \"HPE_GL_ERROR_INTERNAL_SERVER_ERROR\",\n  \"message\": \"The method is not allowed on this path\",\n  \"debugId\": \"00000000-0000-0000-0000-000000000000\",\n  \"httpStatusCode\": 500\n}"
														}
													]
												},
												{
													"name": "Assign invited user with COM Operator role",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"roleId\": \"compute.operator\",\n  \"subjectId\": \"grn:glp/organizations/0000-0000-0000-0000/workspaces/{{workspaceid}}/users/{{InvitedUserIdNoDash}}\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/authorization/v1alpha1/applications/:application-id/assignments",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"authorization",
																"v1alpha1",
																"applications",
																":application-id",
																"assignments"
															],
															"variable": [
																{
																	"key": "application-id",
																	"value": "{{COM_Application_Id}}",
																	"description": "(Required) Unique identifier of the application"
																}
															]
														},
														"description": "Assign role to a user within an application"
													},
													"response": [
														{
															"name": "Successful Response",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"roleId\": \"<string>\",\n  \"subjectId\": \"<string>\",\n  \"accessRules\": {\n    \"msp\": \"<boolean>\",\n    \"tenants\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"resourceRestrictionPolicies\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/authorization/v1alpha1/applications/:application-id/assignments",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"authorization",
																		"v1alpha1",
																		"applications",
																		":application-id",
																		"assignments"
																	],
																	"variable": [
																		{
																			"key": "application-id",
																			"value": "<uuid>",
																			"description": "(Required) Unique identifier of the application"
																		}
																	]
																}
															},
															"status": "Created",
															"code": 201,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Location",
																	"value": "<string>",
																	"description": "URL to access the newly created assignment"
																},
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"subjectName\": \"<string>\",\n  \"count\": \"<integer>\",\n  \"items\": [\n    {\n      \"id\": \"<string>\",\n      \"type\": \"<string>\",\n      \"roleName\": \"<string>\",\n      \"createdAt\": \"<dateTime>\",\n      \"updatedAt\": \"<dateTime>\",\n      \"generation\": \"<integer>\",\n      \"accessRules\": {\n        \"msp\": \"<boolean>\",\n        \"tenants\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"applicationId\": \"<string>\",\n      \"applicationName\": \"<string>\",\n      \"roleDescription\": \"<string>\",\n      \"tags\": \"<object>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"type\": \"<string>\",\n      \"roleName\": \"<string>\",\n      \"createdAt\": \"<dateTime>\",\n      \"updatedAt\": \"<dateTime>\",\n      \"generation\": \"<integer>\",\n      \"accessRules\": {\n        \"msp\": \"<boolean>\",\n        \"tenants\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"applicationId\": \"<string>\",\n      \"applicationName\": \"<string>\",\n      \"roleDescription\": \"<string>\",\n      \"tags\": \"<object>\"\n    }\n  ],\n  \"subjectFirstName\": \"<string>\",\n  \"subjectLastName\": \"<string>\",\n  \"subjectType\": \"<string>\"\n}"
														},
														{
															"name": "Bad Request",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"roleId\": \"<string>\",\n  \"subjectId\": \"<string>\",\n  \"accessRules\": {\n    \"msp\": \"<boolean>\",\n    \"tenants\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"resourceRestrictionPolicies\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/authorization/v1alpha1/applications/:application-id/assignments",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"authorization",
																		"v1alpha1",
																		"applications",
																		":application-id",
																		"assignments"
																	],
																	"variable": [
																		{
																			"key": "application-id",
																			"value": "<uuid>",
																			"description": "(Required) Unique identifier of the application"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"errorCode\": \"HPE_GL_ERROR_BAD_REQUEST\",\n  \"message\": \"Bad Request\",\n  \"debugId\": \"00000000-0000-0000-0000-000000000000\",\n  \"httpStatusCode\": 400\n}"
														},
														{
															"name": "Unauthorized",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"roleId\": \"<string>\",\n  \"subjectId\": \"<string>\",\n  \"accessRules\": {\n    \"msp\": \"<boolean>\",\n    \"tenants\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"resourceRestrictionPolicies\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/authorization/v1alpha1/applications/:application-id/assignments",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"authorization",
																		"v1alpha1",
																		"applications",
																		":application-id",
																		"assignments"
																	],
																	"variable": [
																		{
																			"key": "application-id",
																			"value": "<uuid>",
																			"description": "(Required) Unique identifier of the application"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"errorCode\": \"HPE_GL_ERROR_UNAUTHORIZED\",\n  \"message\": \"Authentication error\",\n  \"debugId\": \"00000000-0000-0000-0000-000000000000\",\n  \"httpStatusCode\": 401\n}"
														},
														{
															"name": "Forbidden",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"roleId\": \"<string>\",\n  \"subjectId\": \"<string>\",\n  \"accessRules\": {\n    \"msp\": \"<boolean>\",\n    \"tenants\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"resourceRestrictionPolicies\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/authorization/v1alpha1/applications/:application-id/assignments",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"authorization",
																		"v1alpha1",
																		"applications",
																		":application-id",
																		"assignments"
																	],
																	"variable": [
																		{
																			"key": "application-id",
																			"value": "<uuid>",
																			"description": "(Required) Unique identifier of the application"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"errorCode\": \"HPE_GL_ERROR_FORBIDDEN\",\n  \"message\": \"Action is blocked for this user\",\n  \"debugId\": \"00000000-0000-0000-0000-000000000000\",\n  \"httpStatusCode\": 403\n}"
														},
														{
															"name": "Not Found",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"roleId\": \"<string>\",\n  \"subjectId\": \"<string>\",\n  \"accessRules\": {\n    \"msp\": \"<boolean>\",\n    \"tenants\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"resourceRestrictionPolicies\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/authorization/v1alpha1/applications/:application-id/assignments",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"authorization",
																		"v1alpha1",
																		"applications",
																		":application-id",
																		"assignments"
																	],
																	"variable": [
																		{
																			"key": "application-id",
																			"value": "<uuid>",
																			"description": "(Required) Unique identifier of the application"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"errorCode\": \"HPE_GL_ERROR_NOT_FOUND\",\n  \"message\": \"Not Found\",\n  \"debugId\": \"00000000-0000-0000-0000-000000000000\",\n  \"httpStatusCode\": 404\n}"
														},
														{
															"name": "Method Not Allowed",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"roleId\": \"<string>\",\n  \"subjectId\": \"<string>\",\n  \"accessRules\": {\n    \"msp\": \"<boolean>\",\n    \"tenants\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"resourceRestrictionPolicies\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/authorization/v1alpha1/applications/:application-id/assignments",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"authorization",
																		"v1alpha1",
																		"applications",
																		":application-id",
																		"assignments"
																	],
																	"variable": [
																		{
																			"key": "application-id",
																			"value": "<uuid>",
																			"description": "(Required) Unique identifier of the application"
																		}
																	]
																}
															},
															"status": "Method Not Allowed",
															"code": 405,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"errorCode\": \"HPE_GL_ERROR_METHOD_NOT_ALLOWED\",\n  \"message\": \"The method is not allowed on this path\",\n  \"debugId\": \"00000000-0000-0000-0000-000000000000\",\n  \"httpStatusCode\": 405\n}"
														},
														{
															"name": "Conflict",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"roleId\": \"<string>\",\n  \"subjectId\": \"<string>\",\n  \"accessRules\": {\n    \"msp\": \"<boolean>\",\n    \"tenants\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"resourceRestrictionPolicies\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/authorization/v1alpha1/applications/:application-id/assignments",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"authorization",
																		"v1alpha1",
																		"applications",
																		":application-id",
																		"assignments"
																	],
																	"variable": [
																		{
																			"key": "application-id",
																			"value": "<uuid>",
																			"description": "(Required) Unique identifier of the application"
																		}
																	]
																}
															},
															"status": "Conflict",
															"code": 409,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"errorCode\": \"HPE_GL_ERROR_CONFLICT\",\n  \"message\": \"Data Already Exists\",\n  \"debugId\": \"00000000-0000-0000-0000-000000000000\",\n  \"httpStatusCode\": 409\n}"
														},
														{
															"name": "Validation Error",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"roleId\": \"<string>\",\n  \"subjectId\": \"<string>\",\n  \"accessRules\": {\n    \"msp\": \"<boolean>\",\n    \"tenants\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"resourceRestrictionPolicies\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/authorization/v1alpha1/applications/:application-id/assignments",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"authorization",
																		"v1alpha1",
																		"applications",
																		":application-id",
																		"assignments"
																	],
																	"variable": [
																		{
																			"key": "application-id",
																			"value": "<uuid>",
																			"description": "(Required) Unique identifier of the application"
																		}
																	]
																}
															},
															"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
															"code": 422,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"errorCode\": \"HPE_GL_ERROR_REQUEST_VALIDATION_ERROR\",\n  \"message\": \"Request Validation Error\",\n  \"debugId\": \"00000000-0000-0000-0000-000000000000\",\n  \"httpStatusCode\": 422\n}"
														},
														{
															"name": "Internal Server Error",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"roleId\": \"<string>\",\n  \"subjectId\": \"<string>\",\n  \"accessRules\": {\n    \"msp\": \"<boolean>\",\n    \"tenants\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"resourceRestrictionPolicies\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/authorization/v1alpha1/applications/:application-id/assignments",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"authorization",
																		"v1alpha1",
																		"applications",
																		":application-id",
																		"assignments"
																	],
																	"variable": [
																		{
																			"key": "application-id",
																			"value": "<uuid>",
																			"description": "(Required) Unique identifier of the application"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"errorCode\": \"HPE_GL_ERROR_INTERNAL_SERVER_ERROR\",\n  \"message\": \"The method is not allowed on this path\",\n  \"debugId\": \"00000000-0000-0000-0000-000000000000\",\n  \"httpStatusCode\": 500\n}"
														}
													]
												},
												{
													"name": "Update user role assignment",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"roleId\": \"<string>\",\n  \"subjectId\": \"<string>\",\n  \"accessRules\": {\n    \"msp\": \"<boolean>\",\n    \"tenants\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"resourceRestrictionPolicies\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/authorization/v1alpha1/applications/:application-id/assignments",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"authorization",
																"v1alpha1",
																"applications",
																":application-id",
																"assignments"
															],
															"variable": [
																{
																	"key": "application-id",
																	"value": "<uuid>",
																	"description": "(Required) Unique identifier of the application"
																}
															]
														},
														"description": "Update role assignment to a user within an application"
													},
													"response": [
														{
															"name": "Successful Response",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"roleId\": \"<string>\",\n  \"subjectId\": \"<string>\",\n  \"accessRules\": {\n    \"msp\": \"<boolean>\",\n    \"tenants\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"resourceRestrictionPolicies\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/authorization/v1alpha1/applications/:application-id/assignments",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"authorization",
																		"v1alpha1",
																		"applications",
																		":application-id",
																		"assignments"
																	],
																	"variable": [
																		{
																			"key": "application-id",
																			"value": "<uuid>",
																			"description": "(Required) Unique identifier of the application"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"subjectName\": \"<string>\",\n  \"count\": \"<integer>\",\n  \"items\": [\n    {\n      \"id\": \"<string>\",\n      \"type\": \"<string>\",\n      \"roleName\": \"<string>\",\n      \"createdAt\": \"<dateTime>\",\n      \"updatedAt\": \"<dateTime>\",\n      \"generation\": \"<integer>\",\n      \"accessRules\": {\n        \"msp\": \"<boolean>\",\n        \"tenants\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"applicationId\": \"<string>\",\n      \"applicationName\": \"<string>\",\n      \"roleDescription\": \"<string>\",\n      \"tags\": \"<object>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"type\": \"<string>\",\n      \"roleName\": \"<string>\",\n      \"createdAt\": \"<dateTime>\",\n      \"updatedAt\": \"<dateTime>\",\n      \"generation\": \"<integer>\",\n      \"accessRules\": {\n        \"msp\": \"<boolean>\",\n        \"tenants\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"applicationId\": \"<string>\",\n      \"applicationName\": \"<string>\",\n      \"roleDescription\": \"<string>\",\n      \"tags\": \"<object>\"\n    }\n  ],\n  \"subjectFirstName\": \"<string>\",\n  \"subjectLastName\": \"<string>\",\n  \"subjectType\": \"<string>\"\n}"
														},
														{
															"name": "Bad Request",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"roleId\": \"<string>\",\n  \"subjectId\": \"<string>\",\n  \"accessRules\": {\n    \"msp\": \"<boolean>\",\n    \"tenants\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"resourceRestrictionPolicies\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/authorization/v1alpha1/applications/:application-id/assignments",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"authorization",
																		"v1alpha1",
																		"applications",
																		":application-id",
																		"assignments"
																	],
																	"variable": [
																		{
																			"key": "application-id",
																			"value": "<uuid>",
																			"description": "(Required) Unique identifier of the application"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"errorCode\": \"HPE_GL_ERROR_BAD_REQUEST\",\n  \"message\": \"Bad Request\",\n  \"debugId\": \"00000000-0000-0000-0000-000000000000\",\n  \"httpStatusCode\": 400\n}"
														},
														{
															"name": "Unauthorized",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"roleId\": \"<string>\",\n  \"subjectId\": \"<string>\",\n  \"accessRules\": {\n    \"msp\": \"<boolean>\",\n    \"tenants\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"resourceRestrictionPolicies\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/authorization/v1alpha1/applications/:application-id/assignments",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"authorization",
																		"v1alpha1",
																		"applications",
																		":application-id",
																		"assignments"
																	],
																	"variable": [
																		{
																			"key": "application-id",
																			"value": "<uuid>",
																			"description": "(Required) Unique identifier of the application"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"errorCode\": \"HPE_GL_ERROR_UNAUTHORIZED\",\n  \"message\": \"Authentication error\",\n  \"debugId\": \"00000000-0000-0000-0000-000000000000\",\n  \"httpStatusCode\": 401\n}"
														},
														{
															"name": "Forbidden",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"roleId\": \"<string>\",\n  \"subjectId\": \"<string>\",\n  \"accessRules\": {\n    \"msp\": \"<boolean>\",\n    \"tenants\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"resourceRestrictionPolicies\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/authorization/v1alpha1/applications/:application-id/assignments",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"authorization",
																		"v1alpha1",
																		"applications",
																		":application-id",
																		"assignments"
																	],
																	"variable": [
																		{
																			"key": "application-id",
																			"value": "<uuid>",
																			"description": "(Required) Unique identifier of the application"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"errorCode\": \"HPE_GL_ERROR_FORBIDDEN\",\n  \"message\": \"Action is blocked for this user\",\n  \"debugId\": \"00000000-0000-0000-0000-000000000000\",\n  \"httpStatusCode\": 403\n}"
														},
														{
															"name": "Not Found",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"roleId\": \"<string>\",\n  \"subjectId\": \"<string>\",\n  \"accessRules\": {\n    \"msp\": \"<boolean>\",\n    \"tenants\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"resourceRestrictionPolicies\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/authorization/v1alpha1/applications/:application-id/assignments",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"authorization",
																		"v1alpha1",
																		"applications",
																		":application-id",
																		"assignments"
																	],
																	"variable": [
																		{
																			"key": "application-id",
																			"value": "<uuid>",
																			"description": "(Required) Unique identifier of the application"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"errorCode\": \"HPE_GL_ERROR_NOT_FOUND\",\n  \"message\": \"Not Found\",\n  \"debugId\": \"00000000-0000-0000-0000-000000000000\",\n  \"httpStatusCode\": 404\n}"
														},
														{
															"name": "Method Not Allowed",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"roleId\": \"<string>\",\n  \"subjectId\": \"<string>\",\n  \"accessRules\": {\n    \"msp\": \"<boolean>\",\n    \"tenants\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"resourceRestrictionPolicies\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/authorization/v1alpha1/applications/:application-id/assignments",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"authorization",
																		"v1alpha1",
																		"applications",
																		":application-id",
																		"assignments"
																	],
																	"variable": [
																		{
																			"key": "application-id",
																			"value": "<uuid>",
																			"description": "(Required) Unique identifier of the application"
																		}
																	]
																}
															},
															"status": "Method Not Allowed",
															"code": 405,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"errorCode\": \"HPE_GL_ERROR_METHOD_NOT_ALLOWED\",\n  \"message\": \"The method is not allowed on this path\",\n  \"debugId\": \"00000000-0000-0000-0000-000000000000\",\n  \"httpStatusCode\": 405\n}"
														},
														{
															"name": "Validation Error",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"roleId\": \"<string>\",\n  \"subjectId\": \"<string>\",\n  \"accessRules\": {\n    \"msp\": \"<boolean>\",\n    \"tenants\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"resourceRestrictionPolicies\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/authorization/v1alpha1/applications/:application-id/assignments",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"authorization",
																		"v1alpha1",
																		"applications",
																		":application-id",
																		"assignments"
																	],
																	"variable": [
																		{
																			"key": "application-id",
																			"value": "<uuid>",
																			"description": "(Required) Unique identifier of the application"
																		}
																	]
																}
															},
															"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
															"code": 422,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"errorCode\": \"HPE_GL_ERROR_REQUEST_VALIDATION_ERROR\",\n  \"message\": \"Request Validation Error\",\n  \"debugId\": \"00000000-0000-0000-0000-000000000000\",\n  \"httpStatusCode\": 422\n}"
														},
														{
															"name": "Internal Server Error",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"roleId\": \"<string>\",\n  \"subjectId\": \"<string>\",\n  \"accessRules\": {\n    \"msp\": \"<boolean>\",\n    \"tenants\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"resourceRestrictionPolicies\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/authorization/v1alpha1/applications/:application-id/assignments",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"authorization",
																		"v1alpha1",
																		"applications",
																		":application-id",
																		"assignments"
																	],
																	"variable": [
																		{
																			"key": "application-id",
																			"value": "<uuid>",
																			"description": "(Required) Unique identifier of the application"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"errorCode\": \"HPE_GL_ERROR_INTERNAL_SERVER_ERROR\",\n  \"message\": \"The method is not allowed on this path\",\n  \"debugId\": \"00000000-0000-0000-0000-000000000000\",\n  \"httpStatusCode\": 500\n}"
														}
													]
												}
											]
										},
										{
											"name": "roles",
											"item": [
												{
													"name": "{role-id}",
													"item": [
														{
															"name": "Delete Role",
															"request": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/authorization/v1alpha1/applications/:application-id/roles/:role-id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"authorization",
																		"v1alpha1",
																		"applications",
																		":application-id",
																		"roles",
																		":role-id"
																	],
																	"variable": [
																		{
																			"key": "application-id",
																			"value": "<uuid>",
																			"description": "(Required) Unique identifier of the application"
																		},
																		{
																			"key": "role-id",
																			"value": "<string>",
																			"description": "(Required) Slug identifying the role"
																		}
																	]
																},
																"description": "Deletes a customer's custom role for an application"
															},
															"response": [
																{
																	"name": "Successful Response",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: bearer",
																				"key": "Authorization",
																				"value": "Bearer <token>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/authorization/v1alpha1/applications/:application-id/roles/:role-id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"authorization",
																				"v1alpha1",
																				"applications",
																				":application-id",
																				"roles",
																				":role-id"
																			],
																			"variable": [
																				{
																					"key": "application-id",
																					"value": "<uuid>",
																					"description": "(Required) Unique identifier of the application"
																				},
																				{
																					"key": "role-id",
																					"value": "<string>",
																					"description": "(Required) Slug identifying the role"
																				}
																			]
																		}
																	},
																	"status": "No Content",
																	"code": 204,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "Bad Request",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: bearer",
																				"key": "Authorization",
																				"value": "Bearer <token>"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/authorization/v1alpha1/applications/:application-id/roles/:role-id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"authorization",
																				"v1alpha1",
																				"applications",
																				":application-id",
																				"roles",
																				":role-id"
																			],
																			"variable": [
																				{
																					"key": "application-id",
																					"value": "<uuid>",
																					"description": "(Required) Unique identifier of the application"
																				},
																				{
																					"key": "role-id",
																					"value": "<string>",
																					"description": "(Required) Slug identifying the role"
																				}
																			]
																		}
																	},
																	"status": "Bad Request",
																	"code": 400,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"errorCode\": \"HPE_GL_ERROR_BAD_REQUEST\",\n  \"message\": \"Bad Request\",\n  \"debugId\": \"00000000-0000-0000-0000-000000000000\",\n  \"httpStatusCode\": 400\n}"
																},
																{
																	"name": "Unauthorized",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: bearer",
																				"key": "Authorization",
																				"value": "Bearer <token>"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/authorization/v1alpha1/applications/:application-id/roles/:role-id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"authorization",
																				"v1alpha1",
																				"applications",
																				":application-id",
																				"roles",
																				":role-id"
																			],
																			"variable": [
																				{
																					"key": "application-id",
																					"value": "<uuid>",
																					"description": "(Required) Unique identifier of the application"
																				},
																				{
																					"key": "role-id",
																					"value": "<string>",
																					"description": "(Required) Slug identifying the role"
																				}
																			]
																		}
																	},
																	"status": "Unauthorized",
																	"code": 401,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"errorCode\": \"HPE_GL_ERROR_UNAUTHORIZED\",\n  \"message\": \"Authentication error\",\n  \"debugId\": \"00000000-0000-0000-0000-000000000000\",\n  \"httpStatusCode\": 401\n}"
																},
																{
																	"name": "Forbidden",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: bearer",
																				"key": "Authorization",
																				"value": "Bearer <token>"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/authorization/v1alpha1/applications/:application-id/roles/:role-id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"authorization",
																				"v1alpha1",
																				"applications",
																				":application-id",
																				"roles",
																				":role-id"
																			],
																			"variable": [
																				{
																					"key": "application-id",
																					"value": "<uuid>",
																					"description": "(Required) Unique identifier of the application"
																				},
																				{
																					"key": "role-id",
																					"value": "<string>",
																					"description": "(Required) Slug identifying the role"
																				}
																			]
																		}
																	},
																	"status": "Forbidden",
																	"code": 403,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"errorCode\": \"HPE_GL_ERROR_FORBIDDEN\",\n  \"message\": \"Action is blocked for this user\",\n  \"debugId\": \"00000000-0000-0000-0000-000000000000\",\n  \"httpStatusCode\": 403\n}"
																},
																{
																	"name": "Not Found",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: bearer",
																				"key": "Authorization",
																				"value": "Bearer <token>"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/authorization/v1alpha1/applications/:application-id/roles/:role-id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"authorization",
																				"v1alpha1",
																				"applications",
																				":application-id",
																				"roles",
																				":role-id"
																			],
																			"variable": [
																				{
																					"key": "application-id",
																					"value": "<uuid>",
																					"description": "(Required) Unique identifier of the application"
																				},
																				{
																					"key": "role-id",
																					"value": "<string>",
																					"description": "(Required) Slug identifying the role"
																				}
																			]
																		}
																	},
																	"status": "Not Found",
																	"code": 404,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"errorCode\": \"HPE_GL_ERROR_NOT_FOUND\",\n  \"message\": \"Not Found\",\n  \"debugId\": \"00000000-0000-0000-0000-000000000000\",\n  \"httpStatusCode\": 404\n}"
																},
																{
																	"name": "Method Not Allowed",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: bearer",
																				"key": "Authorization",
																				"value": "Bearer <token>"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/authorization/v1alpha1/applications/:application-id/roles/:role-id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"authorization",
																				"v1alpha1",
																				"applications",
																				":application-id",
																				"roles",
																				":role-id"
																			],
																			"variable": [
																				{
																					"key": "application-id",
																					"value": "<uuid>",
																					"description": "(Required) Unique identifier of the application"
																				},
																				{
																					"key": "role-id",
																					"value": "<string>",
																					"description": "(Required) Slug identifying the role"
																				}
																			]
																		}
																	},
																	"status": "Method Not Allowed",
																	"code": 405,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"errorCode\": \"HPE_GL_ERROR_METHOD_NOT_ALLOWED\",\n  \"message\": \"The method is not allowed on this path\",\n  \"debugId\": \"00000000-0000-0000-0000-000000000000\",\n  \"httpStatusCode\": 405\n}"
																},
																{
																	"name": "Validation Error",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: bearer",
																				"key": "Authorization",
																				"value": "Bearer <token>"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/authorization/v1alpha1/applications/:application-id/roles/:role-id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"authorization",
																				"v1alpha1",
																				"applications",
																				":application-id",
																				"roles",
																				":role-id"
																			],
																			"variable": [
																				{
																					"key": "application-id",
																					"value": "<uuid>",
																					"description": "(Required) Unique identifier of the application"
																				},
																				{
																					"key": "role-id",
																					"value": "<string>",
																					"description": "(Required) Slug identifying the role"
																				}
																			]
																		}
																	},
																	"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
																	"code": 422,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"errorCode\": \"HPE_GL_ERROR_REQUEST_VALIDATION_ERROR\",\n  \"message\": \"Request Validation Error\",\n  \"debugId\": \"00000000-0000-0000-0000-000000000000\",\n  \"httpStatusCode\": 422\n}"
																},
																{
																	"name": "Internal Server Error",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: bearer",
																				"key": "Authorization",
																				"value": "Bearer <token>"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/authorization/v1alpha1/applications/:application-id/roles/:role-id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"authorization",
																				"v1alpha1",
																				"applications",
																				":application-id",
																				"roles",
																				":role-id"
																			],
																			"variable": [
																				{
																					"key": "application-id",
																					"value": "<uuid>",
																					"description": "(Required) Unique identifier of the application"
																				},
																				{
																					"key": "role-id",
																					"value": "<string>",
																					"description": "(Required) Slug identifying the role"
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"errorCode\": \"HPE_GL_ERROR_INTERNAL_SERVER_ERROR\",\n  \"message\": \"The method is not allowed on this path\",\n  \"debugId\": \"00000000-0000-0000-0000-000000000000\",\n  \"httpStatusCode\": 500\n}"
																}
															]
														},
														{
															"name": "Get Customer Role",
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/authorization/v1alpha1/applications/:application-id/roles/:role-id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"authorization",
																		"v1alpha1",
																		"applications",
																		":application-id",
																		"roles",
																		":role-id"
																	],
																	"variable": [
																		{
																			"key": "application-id",
																			"value": "{{DSCC_Application_Id}}",
																			"description": "(Required) Unique identifier of the application"
																		},
																		{
																			"key": "role-id",
																			"value": "operator",
																			"description": "(Required) Slug identifying the role"
																		}
																	]
																},
																"description": "Get Role for a specific application by role-id"
															},
															"response": [
																{
																	"name": "Successful Response",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: bearer",
																				"key": "Authorization",
																				"value": "Bearer <token>"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/authorization/v1alpha1/applications/:application-id/roles/:role-id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"authorization",
																				"v1alpha1",
																				"applications",
																				":application-id",
																				"roles",
																				":role-id"
																			],
																			"variable": [
																				{
																					"key": "application-id",
																					"value": "<uuid>",
																					"description": "(Required) Unique identifier of the application"
																				},
																				{
																					"key": "role-id",
																					"value": "<string>",
																					"description": "(Required) Slug identifying the role"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"id\": \"<string>\",\n  \"type\": \"<string>\",\n  \"name\": \"<string>\",\n  \"resourcePolicies\": [\n    {\n      \"resource\": {\n        \"matcher\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"permissions\": [\n        {\n          \"permissionId\": \"<string>\",\n          \"name\": \"<string>\"\n        },\n        {\n          \"permissionId\": \"<string>\",\n          \"name\": \"<string>\"\n        }\n      ],\n      \"effect\": \"<string>\"\n    },\n    {\n      \"resource\": {\n        \"matcher\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"permissions\": [\n        {\n          \"permissionId\": \"<string>\",\n          \"name\": \"<string>\"\n        },\n        {\n          \"permissionId\": \"<string>\",\n          \"name\": \"<string>\"\n        }\n      ],\n      \"effect\": \"<string>\"\n    }\n  ],\n  \"createdAt\": \"<string>\",\n  \"updatedAt\": \"<string>\",\n  \"generation\": \"<integer>\",\n  \"applicationId\": \"<string>\",\n  \"applicationName\": \"<string>\",\n  \"description\": \"<string>\",\n  \"tags\": \"<object>\"\n}"
																},
																{
																	"name": "Bad Request",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: bearer",
																				"key": "Authorization",
																				"value": "Bearer <token>"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/authorization/v1alpha1/applications/:application-id/roles/:role-id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"authorization",
																				"v1alpha1",
																				"applications",
																				":application-id",
																				"roles",
																				":role-id"
																			],
																			"variable": [
																				{
																					"key": "application-id",
																					"value": "<uuid>",
																					"description": "(Required) Unique identifier of the application"
																				},
																				{
																					"key": "role-id",
																					"value": "<string>",
																					"description": "(Required) Slug identifying the role"
																				}
																			]
																		}
																	},
																	"status": "Bad Request",
																	"code": 400,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"errorCode\": \"HPE_GL_ERROR_BAD_REQUEST\",\n  \"message\": \"Bad Request\",\n  \"debugId\": \"00000000-0000-0000-0000-000000000000\",\n  \"httpStatusCode\": 400\n}"
																},
																{
																	"name": "Unauthorized",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: bearer",
																				"key": "Authorization",
																				"value": "Bearer <token>"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/authorization/v1alpha1/applications/:application-id/roles/:role-id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"authorization",
																				"v1alpha1",
																				"applications",
																				":application-id",
																				"roles",
																				":role-id"
																			],
																			"variable": [
																				{
																					"key": "application-id",
																					"value": "<uuid>",
																					"description": "(Required) Unique identifier of the application"
																				},
																				{
																					"key": "role-id",
																					"value": "<string>",
																					"description": "(Required) Slug identifying the role"
																				}
																			]
																		}
																	},
																	"status": "Unauthorized",
																	"code": 401,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"errorCode\": \"HPE_GL_ERROR_UNAUTHORIZED\",\n  \"message\": \"Authentication error\",\n  \"debugId\": \"00000000-0000-0000-0000-000000000000\",\n  \"httpStatusCode\": 401\n}"
																},
																{
																	"name": "Forbidden",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: bearer",
																				"key": "Authorization",
																				"value": "Bearer <token>"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/authorization/v1alpha1/applications/:application-id/roles/:role-id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"authorization",
																				"v1alpha1",
																				"applications",
																				":application-id",
																				"roles",
																				":role-id"
																			],
																			"variable": [
																				{
																					"key": "application-id",
																					"value": "<uuid>",
																					"description": "(Required) Unique identifier of the application"
																				},
																				{
																					"key": "role-id",
																					"value": "<string>",
																					"description": "(Required) Slug identifying the role"
																				}
																			]
																		}
																	},
																	"status": "Forbidden",
																	"code": 403,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"errorCode\": \"HPE_GL_ERROR_FORBIDDEN\",\n  \"message\": \"Action is blocked for this user\",\n  \"debugId\": \"00000000-0000-0000-0000-000000000000\",\n  \"httpStatusCode\": 403\n}"
																},
																{
																	"name": "Not Found",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: bearer",
																				"key": "Authorization",
																				"value": "Bearer <token>"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/authorization/v1alpha1/applications/:application-id/roles/:role-id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"authorization",
																				"v1alpha1",
																				"applications",
																				":application-id",
																				"roles",
																				":role-id"
																			],
																			"variable": [
																				{
																					"key": "application-id",
																					"value": "<uuid>",
																					"description": "(Required) Unique identifier of the application"
																				},
																				{
																					"key": "role-id",
																					"value": "<string>",
																					"description": "(Required) Slug identifying the role"
																				}
																			]
																		}
																	},
																	"status": "Not Found",
																	"code": 404,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"errorCode\": \"HPE_GL_ERROR_NOT_FOUND\",\n  \"message\": \"Not Found\",\n  \"debugId\": \"00000000-0000-0000-0000-000000000000\",\n  \"httpStatusCode\": 404\n}"
																},
																{
																	"name": "Method Not Allowed",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: bearer",
																				"key": "Authorization",
																				"value": "Bearer <token>"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/authorization/v1alpha1/applications/:application-id/roles/:role-id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"authorization",
																				"v1alpha1",
																				"applications",
																				":application-id",
																				"roles",
																				":role-id"
																			],
																			"variable": [
																				{
																					"key": "application-id",
																					"value": "<uuid>",
																					"description": "(Required) Unique identifier of the application"
																				},
																				{
																					"key": "role-id",
																					"value": "<string>",
																					"description": "(Required) Slug identifying the role"
																				}
																			]
																		}
																	},
																	"status": "Method Not Allowed",
																	"code": 405,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"errorCode\": \"HPE_GL_ERROR_METHOD_NOT_ALLOWED\",\n  \"message\": \"The method is not allowed on this path\",\n  \"debugId\": \"00000000-0000-0000-0000-000000000000\",\n  \"httpStatusCode\": 405\n}"
																},
																{
																	"name": "Validation Error",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: bearer",
																				"key": "Authorization",
																				"value": "Bearer <token>"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/authorization/v1alpha1/applications/:application-id/roles/:role-id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"authorization",
																				"v1alpha1",
																				"applications",
																				":application-id",
																				"roles",
																				":role-id"
																			],
																			"variable": [
																				{
																					"key": "application-id",
																					"value": "<uuid>",
																					"description": "(Required) Unique identifier of the application"
																				},
																				{
																					"key": "role-id",
																					"value": "<string>",
																					"description": "(Required) Slug identifying the role"
																				}
																			]
																		}
																	},
																	"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
																	"code": 422,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"errorCode\": \"HPE_GL_ERROR_REQUEST_VALIDATION_ERROR\",\n  \"message\": \"Request Validation Error\",\n  \"debugId\": \"00000000-0000-0000-0000-000000000000\",\n  \"httpStatusCode\": 422\n}"
																},
																{
																	"name": "Internal Server Error",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: bearer",
																				"key": "Authorization",
																				"value": "Bearer <token>"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/authorization/v1alpha1/applications/:application-id/roles/:role-id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"authorization",
																				"v1alpha1",
																				"applications",
																				":application-id",
																				"roles",
																				":role-id"
																			],
																			"variable": [
																				{
																					"key": "application-id",
																					"value": "<uuid>",
																					"description": "(Required) Unique identifier of the application"
																				},
																				{
																					"key": "role-id",
																					"value": "<string>",
																					"description": "(Required) Slug identifying the role"
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"errorCode\": \"HPE_GL_ERROR_INTERNAL_SERVER_ERROR\",\n  \"message\": \"The method is not allowed on this path\",\n  \"debugId\": \"00000000-0000-0000-0000-000000000000\",\n  \"httpStatusCode\": 500\n}"
																}
															]
														},
														{
															"name": "Delete a user assignment",
															"request": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/authorization/v1alpha1/applications/:application-id/roles/:role-id/assignments?subject-id=grn:glp/organizations/0000-0000-0000-0000/workspaces/{{WorkspaceId}}/users/{{InvitedUserIdNoDash}}",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"authorization",
																		"v1alpha1",
																		"applications",
																		":application-id",
																		"roles",
																		":role-id",
																		"assignments"
																	],
																	"query": [
																		{
																			"key": "subject-id",
																			"value": "grn:glp/organizations/0000-0000-0000-0000/workspaces/{{WorkspaceId}}/users/{{InvitedUserIdNoDash}}",
																			"description": "(Required) Identifies the subject by Greenlake Resource Notation"
																		}
																	],
																	"variable": [
																		{
																			"key": "application-id",
																			"value": "{{GLP_Application_Id}}",
																			"description": "(Required) Unique identifier of the application"
																		},
																		{
																			"key": "role-id",
																			"value": "ccs.operator",
																			"description": "(Required) Slug identifying the role"
																		}
																	]
																},
																"description": "Delete a user assignment"
															},
															"response": [
																{
																	"name": "Successful Response",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: bearer",
																				"key": "Authorization",
																				"value": "Bearer <token>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/authorization/v1alpha1/applications/:application-id/roles/:role-id/assignments?subject-id=<string>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"authorization",
																				"v1alpha1",
																				"applications",
																				":application-id",
																				"roles",
																				":role-id",
																				"assignments"
																			],
																			"query": [
																				{
																					"key": "subject-id",
																					"value": "<string>"
																				}
																			],
																			"variable": [
																				{
																					"key": "application-id",
																					"value": "<uuid>",
																					"description": "(Required) Unique identifier of the application"
																				},
																				{
																					"key": "role-id",
																					"value": "<string>",
																					"description": "(Required) Slug identifying the role"
																				}
																			]
																		}
																	},
																	"status": "No Content",
																	"code": 204,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "Bad Request",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: bearer",
																				"key": "Authorization",
																				"value": "Bearer <token>"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/authorization/v1alpha1/applications/:application-id/roles/:role-id/assignments?subject-id=<string>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"authorization",
																				"v1alpha1",
																				"applications",
																				":application-id",
																				"roles",
																				":role-id",
																				"assignments"
																			],
																			"query": [
																				{
																					"key": "subject-id",
																					"value": "<string>"
																				}
																			],
																			"variable": [
																				{
																					"key": "application-id",
																					"value": "<uuid>",
																					"description": "(Required) Unique identifier of the application"
																				},
																				{
																					"key": "role-id",
																					"value": "<string>",
																					"description": "(Required) Slug identifying the role"
																				}
																			]
																		}
																	},
																	"status": "Bad Request",
																	"code": 400,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"errorCode\": \"HPE_GL_ERROR_BAD_REQUEST\",\n  \"message\": \"Bad Request\",\n  \"debugId\": \"00000000-0000-0000-0000-000000000000\",\n  \"httpStatusCode\": 400\n}"
																},
																{
																	"name": "Unauthorized",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: bearer",
																				"key": "Authorization",
																				"value": "Bearer <token>"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/authorization/v1alpha1/applications/:application-id/roles/:role-id/assignments?subject-id=<string>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"authorization",
																				"v1alpha1",
																				"applications",
																				":application-id",
																				"roles",
																				":role-id",
																				"assignments"
																			],
																			"query": [
																				{
																					"key": "subject-id",
																					"value": "<string>"
																				}
																			],
																			"variable": [
																				{
																					"key": "application-id",
																					"value": "<uuid>",
																					"description": "(Required) Unique identifier of the application"
																				},
																				{
																					"key": "role-id",
																					"value": "<string>",
																					"description": "(Required) Slug identifying the role"
																				}
																			]
																		}
																	},
																	"status": "Unauthorized",
																	"code": 401,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"errorCode\": \"HPE_GL_ERROR_UNAUTHORIZED\",\n  \"message\": \"Authentication error\",\n  \"debugId\": \"00000000-0000-0000-0000-000000000000\",\n  \"httpStatusCode\": 401\n}"
																},
																{
																	"name": "Forbidden",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: bearer",
																				"key": "Authorization",
																				"value": "Bearer <token>"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/authorization/v1alpha1/applications/:application-id/roles/:role-id/assignments?subject-id=<string>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"authorization",
																				"v1alpha1",
																				"applications",
																				":application-id",
																				"roles",
																				":role-id",
																				"assignments"
																			],
																			"query": [
																				{
																					"key": "subject-id",
																					"value": "<string>"
																				}
																			],
																			"variable": [
																				{
																					"key": "application-id",
																					"value": "<uuid>",
																					"description": "(Required) Unique identifier of the application"
																				},
																				{
																					"key": "role-id",
																					"value": "<string>",
																					"description": "(Required) Slug identifying the role"
																				}
																			]
																		}
																	},
																	"status": "Forbidden",
																	"code": 403,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"errorCode\": \"HPE_GL_ERROR_FORBIDDEN\",\n  \"message\": \"Action is blocked for this user\",\n  \"debugId\": \"00000000-0000-0000-0000-000000000000\",\n  \"httpStatusCode\": 403\n}"
																},
																{
																	"name": "Not Found",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: bearer",
																				"key": "Authorization",
																				"value": "Bearer <token>"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/authorization/v1alpha1/applications/:application-id/roles/:role-id/assignments?subject-id=<string>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"authorization",
																				"v1alpha1",
																				"applications",
																				":application-id",
																				"roles",
																				":role-id",
																				"assignments"
																			],
																			"query": [
																				{
																					"key": "subject-id",
																					"value": "<string>"
																				}
																			],
																			"variable": [
																				{
																					"key": "application-id",
																					"value": "<uuid>",
																					"description": "(Required) Unique identifier of the application"
																				},
																				{
																					"key": "role-id",
																					"value": "<string>",
																					"description": "(Required) Slug identifying the role"
																				}
																			]
																		}
																	},
																	"status": "Not Found",
																	"code": 404,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"errorCode\": \"HPE_GL_ERROR_NOT_FOUND\",\n  \"message\": \"Not Found\",\n  \"debugId\": \"00000000-0000-0000-0000-000000000000\",\n  \"httpStatusCode\": 404\n}"
																},
																{
																	"name": "Method Not Allowed",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: bearer",
																				"key": "Authorization",
																				"value": "Bearer <token>"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/authorization/v1alpha1/applications/:application-id/roles/:role-id/assignments?subject-id=<string>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"authorization",
																				"v1alpha1",
																				"applications",
																				":application-id",
																				"roles",
																				":role-id",
																				"assignments"
																			],
																			"query": [
																				{
																					"key": "subject-id",
																					"value": "<string>"
																				}
																			],
																			"variable": [
																				{
																					"key": "application-id",
																					"value": "<uuid>",
																					"description": "(Required) Unique identifier of the application"
																				},
																				{
																					"key": "role-id",
																					"value": "<string>",
																					"description": "(Required) Slug identifying the role"
																				}
																			]
																		}
																	},
																	"status": "Method Not Allowed",
																	"code": 405,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"errorCode\": \"HPE_GL_ERROR_METHOD_NOT_ALLOWED\",\n  \"message\": \"The method is not allowed on this path\",\n  \"debugId\": \"00000000-0000-0000-0000-000000000000\",\n  \"httpStatusCode\": 405\n}"
																},
																{
																	"name": "Validation Error",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: bearer",
																				"key": "Authorization",
																				"value": "Bearer <token>"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/authorization/v1alpha1/applications/:application-id/roles/:role-id/assignments?subject-id=<string>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"authorization",
																				"v1alpha1",
																				"applications",
																				":application-id",
																				"roles",
																				":role-id",
																				"assignments"
																			],
																			"query": [
																				{
																					"key": "subject-id",
																					"value": "<string>"
																				}
																			],
																			"variable": [
																				{
																					"key": "application-id",
																					"value": "<uuid>",
																					"description": "(Required) Unique identifier of the application"
																				},
																				{
																					"key": "role-id",
																					"value": "<string>",
																					"description": "(Required) Slug identifying the role"
																				}
																			]
																		}
																	},
																	"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
																	"code": 422,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"errorCode\": \"HPE_GL_ERROR_REQUEST_VALIDATION_ERROR\",\n  \"message\": \"Request Validation Error\",\n  \"debugId\": \"00000000-0000-0000-0000-000000000000\",\n  \"httpStatusCode\": 422\n}"
																},
																{
																	"name": "Internal Server Error",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: bearer",
																				"key": "Authorization",
																				"value": "Bearer <token>"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/authorization/v1alpha1/applications/:application-id/roles/:role-id/assignments?subject-id=<string>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"authorization",
																				"v1alpha1",
																				"applications",
																				":application-id",
																				"roles",
																				":role-id",
																				"assignments"
																			],
																			"query": [
																				{
																					"key": "subject-id",
																					"value": "<string>"
																				}
																			],
																			"variable": [
																				{
																					"key": "application-id",
																					"value": "<uuid>",
																					"description": "(Required) Unique identifier of the application"
																				},
																				{
																					"key": "role-id",
																					"value": "<string>",
																					"description": "(Required) Slug identifying the role"
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"errorCode\": \"HPE_GL_ERROR_INTERNAL_SERVER_ERROR\",\n  \"message\": \"The method is not allowed on this path\",\n  \"debugId\": \"00000000-0000-0000-0000-000000000000\",\n  \"httpStatusCode\": 500\n}"
																}
															]
														}
													]
												},
												{
													"name": "Get Customer Roles",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/authorization/v1alpha1/applications/:application-id/roles?search-name=Operator",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"authorization",
																"v1alpha1",
																"applications",
																":application-id",
																"roles"
															],
															"query": [
																{
																	"key": "search-name",
																	"value": "Operator",
																	"description": "An expression that matches role names"
																},
																{
																	"key": "include-predefined-roles",
																	"value": "true",
																	"description": "Indicates whether or not to include application predefined roles",
																	"disabled": true
																},
																{
																	"key": "limit",
																	"value": "100",
																	"description": "The maximum number of items to retrieve",
																	"disabled": true
																},
																{
																	"key": "next",
																	"value": "<string>",
																	"description": "The pagination cursor for the next page of resources",
																	"disabled": true
																}
															],
															"variable": [
																{
																	"key": "application-id",
																	"value": "{{GLP_Application_Id}}",
																	"description": "(Required) Unique identifier of the application"
																}
															]
														},
														"description": "Get list of Roles for a specific application"
													},
													"response": [
														{
															"name": "Successful Response",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/authorization/v1alpha1/applications/:application-id/roles?search-name=<string>&include-predefined-roles=true&limit=100&next=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"authorization",
																		"v1alpha1",
																		"applications",
																		":application-id",
																		"roles"
																	],
																	"query": [
																		{
																			"key": "search-name",
																			"value": "<string>"
																		},
																		{
																			"key": "include-predefined-roles",
																			"value": "true"
																		},
																		{
																			"key": "limit",
																			"value": "100"
																		},
																		{
																			"key": "next",
																			"value": "<string>"
																		}
																	],
																	"variable": [
																		{
																			"key": "application-id",
																			"value": "<uuid>",
																			"description": "(Required) Unique identifier of the application"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"items\": [\n    {\n      \"id\": \"<string>\",\n      \"type\": \"<string>\",\n      \"name\": \"<string>\",\n      \"resourcePolicies\": [\n        {\n          \"resource\": {\n            \"matcher\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"permissions\": [\n            {\n              \"permissionId\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"name\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            },\n            {\n              \"permissionId\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"name\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            }\n          ],\n          \"effect\": \"<string>\"\n        },\n        {\n          \"resource\": {\n            \"matcher\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"permissions\": [\n            {\n              \"permissionId\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"name\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            },\n            {\n              \"permissionId\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"name\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            }\n          ],\n          \"effect\": \"<string>\"\n        }\n      ],\n      \"createdAt\": \"<string>\",\n      \"updatedAt\": \"<string>\",\n      \"generation\": \"<integer>\",\n      \"applicationId\": \"<string>\",\n      \"applicationName\": \"<string>\",\n      \"description\": \"<string>\",\n      \"tags\": \"<object>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"type\": \"<string>\",\n      \"name\": \"<string>\",\n      \"resourcePolicies\": [\n        {\n          \"resource\": {\n            \"matcher\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"permissions\": [\n            {\n              \"permissionId\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"name\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            },\n            {\n              \"permissionId\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"name\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            }\n          ],\n          \"effect\": \"<string>\"\n        },\n        {\n          \"resource\": {\n            \"matcher\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"permissions\": [\n            {\n              \"permissionId\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"name\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            },\n            {\n              \"permissionId\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"name\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            }\n          ],\n          \"effect\": \"<string>\"\n        }\n      ],\n      \"createdAt\": \"<string>\",\n      \"updatedAt\": \"<string>\",\n      \"generation\": \"<integer>\",\n      \"applicationId\": \"<string>\",\n      \"applicationName\": \"<string>\",\n      \"description\": \"<string>\",\n      \"tags\": \"<object>\"\n    }\n  ],\n  \"count\": 100,\n  \"createdAt\": \"<dateTime>\",\n  \"updatedAt\": \"<dateTime>\",\n  \"generation\": \"<integer>\",\n  \"next\": \"<string>\",\n  \"total\": 0,\n  \"errorCode\": -99065616.7375255,\n  \"message\": \"velit adipisicing sunt nostrud ipsum\",\n  \"debugId\": 71091008,\n  \"httpStatusCode\": \"quis mollit\",\n  \"type\": \"irure incididunt quis\"\n}"
														},
														{
															"name": "Bad Request",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/authorization/v1alpha1/applications/:application-id/roles?search-name=<string>&include-predefined-roles=true&limit=100&next=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"authorization",
																		"v1alpha1",
																		"applications",
																		":application-id",
																		"roles"
																	],
																	"query": [
																		{
																			"key": "search-name",
																			"value": "<string>"
																		},
																		{
																			"key": "include-predefined-roles",
																			"value": "true"
																		},
																		{
																			"key": "limit",
																			"value": "100"
																		},
																		{
																			"key": "next",
																			"value": "<string>"
																		}
																	],
																	"variable": [
																		{
																			"key": "application-id",
																			"value": "<uuid>",
																			"description": "(Required) Unique identifier of the application"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"errorCode\": \"HPE_GL_ERROR_BAD_REQUEST\",\n  \"message\": \"Bad Request\",\n  \"debugId\": \"00000000-0000-0000-0000-000000000000\",\n  \"httpStatusCode\": 400\n}"
														},
														{
															"name": "Unauthorized",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/authorization/v1alpha1/applications/:application-id/roles?search-name=<string>&include-predefined-roles=true&limit=100&next=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"authorization",
																		"v1alpha1",
																		"applications",
																		":application-id",
																		"roles"
																	],
																	"query": [
																		{
																			"key": "search-name",
																			"value": "<string>"
																		},
																		{
																			"key": "include-predefined-roles",
																			"value": "true"
																		},
																		{
																			"key": "limit",
																			"value": "100"
																		},
																		{
																			"key": "next",
																			"value": "<string>"
																		}
																	],
																	"variable": [
																		{
																			"key": "application-id",
																			"value": "<uuid>",
																			"description": "(Required) Unique identifier of the application"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"errorCode\": \"HPE_GL_ERROR_UNAUTHORIZED\",\n  \"message\": \"Authentication error\",\n  \"debugId\": \"00000000-0000-0000-0000-000000000000\",\n  \"httpStatusCode\": 401\n}"
														},
														{
															"name": "Forbidden",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/authorization/v1alpha1/applications/:application-id/roles?search-name=<string>&include-predefined-roles=true&limit=100&next=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"authorization",
																		"v1alpha1",
																		"applications",
																		":application-id",
																		"roles"
																	],
																	"query": [
																		{
																			"key": "search-name",
																			"value": "<string>"
																		},
																		{
																			"key": "include-predefined-roles",
																			"value": "true"
																		},
																		{
																			"key": "limit",
																			"value": "100"
																		},
																		{
																			"key": "next",
																			"value": "<string>"
																		}
																	],
																	"variable": [
																		{
																			"key": "application-id",
																			"value": "<uuid>",
																			"description": "(Required) Unique identifier of the application"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"errorCode\": \"HPE_GL_ERROR_FORBIDDEN\",\n  \"message\": \"Action is blocked for this user\",\n  \"debugId\": \"00000000-0000-0000-0000-000000000000\",\n  \"httpStatusCode\": 403\n}"
														},
														{
															"name": "Not Found",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/authorization/v1alpha1/applications/:application-id/roles?search-name=<string>&include-predefined-roles=true&limit=100&next=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"authorization",
																		"v1alpha1",
																		"applications",
																		":application-id",
																		"roles"
																	],
																	"query": [
																		{
																			"key": "search-name",
																			"value": "<string>"
																		},
																		{
																			"key": "include-predefined-roles",
																			"value": "true"
																		},
																		{
																			"key": "limit",
																			"value": "100"
																		},
																		{
																			"key": "next",
																			"value": "<string>"
																		}
																	],
																	"variable": [
																		{
																			"key": "application-id",
																			"value": "<uuid>",
																			"description": "(Required) Unique identifier of the application"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"errorCode\": \"HPE_GL_ERROR_NOT_FOUND\",\n  \"message\": \"Not Found\",\n  \"debugId\": \"00000000-0000-0000-0000-000000000000\",\n  \"httpStatusCode\": 404\n}"
														},
														{
															"name": "Method Not Allowed",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/authorization/v1alpha1/applications/:application-id/roles?search-name=<string>&include-predefined-roles=true&limit=100&next=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"authorization",
																		"v1alpha1",
																		"applications",
																		":application-id",
																		"roles"
																	],
																	"query": [
																		{
																			"key": "search-name",
																			"value": "<string>"
																		},
																		{
																			"key": "include-predefined-roles",
																			"value": "true"
																		},
																		{
																			"key": "limit",
																			"value": "100"
																		},
																		{
																			"key": "next",
																			"value": "<string>"
																		}
																	],
																	"variable": [
																		{
																			"key": "application-id",
																			"value": "<uuid>",
																			"description": "(Required) Unique identifier of the application"
																		}
																	]
																}
															},
															"status": "Method Not Allowed",
															"code": 405,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"errorCode\": \"HPE_GL_ERROR_METHOD_NOT_ALLOWED\",\n  \"message\": \"The method is not allowed on this path\",\n  \"debugId\": \"00000000-0000-0000-0000-000000000000\",\n  \"httpStatusCode\": 405\n}"
														},
														{
															"name": "Validation Error",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/authorization/v1alpha1/applications/:application-id/roles?search-name=<string>&include-predefined-roles=true&limit=100&next=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"authorization",
																		"v1alpha1",
																		"applications",
																		":application-id",
																		"roles"
																	],
																	"query": [
																		{
																			"key": "search-name",
																			"value": "<string>"
																		},
																		{
																			"key": "include-predefined-roles",
																			"value": "true"
																		},
																		{
																			"key": "limit",
																			"value": "100"
																		},
																		{
																			"key": "next",
																			"value": "<string>"
																		}
																	],
																	"variable": [
																		{
																			"key": "application-id",
																			"value": "<uuid>",
																			"description": "(Required) Unique identifier of the application"
																		}
																	]
																}
															},
															"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
															"code": 422,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"errorCode\": \"HPE_GL_ERROR_REQUEST_VALIDATION_ERROR\",\n  \"message\": \"Request Validation Error\",\n  \"debugId\": \"00000000-0000-0000-0000-000000000000\",\n  \"httpStatusCode\": 422\n}"
														},
														{
															"name": "Internal Server Error",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/authorization/v1alpha1/applications/:application-id/roles?search-name=<string>&include-predefined-roles=true&limit=100&next=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"authorization",
																		"v1alpha1",
																		"applications",
																		":application-id",
																		"roles"
																	],
																	"query": [
																		{
																			"key": "search-name",
																			"value": "<string>"
																		},
																		{
																			"key": "include-predefined-roles",
																			"value": "true"
																		},
																		{
																			"key": "limit",
																			"value": "100"
																		},
																		{
																			"key": "next",
																			"value": "<string>"
																		}
																	],
																	"variable": [
																		{
																			"key": "application-id",
																			"value": "<uuid>",
																			"description": "(Required) Unique identifier of the application"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"errorCode\": \"HPE_GL_ERROR_INTERNAL_SERVER_ERROR\",\n  \"message\": \"The method is not allowed on this path\",\n  \"debugId\": \"00000000-0000-0000-0000-000000000000\",\n  \"httpStatusCode\": 500\n}"
														}
													]
												}
											]
										}
									]
								},
								{
									"name": "Get User Role Assignments",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/authorization/v1alpha1/assignments?subject-id=grn:glp/organizations/0000-0000-0000-0000/workspaces/{{WorkspaceId}}/users/{{InvitedUserIdNoDash}}&limit=100",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"authorization",
												"v1alpha1",
												"assignments"
											],
											"query": [
												{
													"key": "subject-id",
													"value": "grn:glp/organizations/0000-0000-0000-0000/workspaces/{{WorkspaceId}}/users/{{InvitedUserIdNoDash}}",
													"description": "(Required) Identifies the subject by Greenlake Resource Notation"
												},
												{
													"key": "limit",
													"value": "100",
													"description": "Number of items to be returned"
												}
											]
										},
										"description": "Get user assignments across applications"
									},
									"response": [
										{
											"name": "Successful Response",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/authorization/v1alpha1/assignments?subject-id=<string>&limit=100",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"authorization",
														"v1alpha1",
														"assignments"
													],
													"query": [
														{
															"key": "subject-id",
															"value": "<string>"
														},
														{
															"key": "limit",
															"value": "100"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"subjectName\": \"<string>\",\n  \"count\": \"<integer>\",\n  \"items\": [\n    {\n      \"id\": \"<string>\",\n      \"type\": \"<string>\",\n      \"roleName\": \"<string>\",\n      \"createdAt\": \"<dateTime>\",\n      \"updatedAt\": \"<dateTime>\",\n      \"generation\": \"<integer>\",\n      \"accessRules\": {\n        \"msp\": \"<boolean>\",\n        \"tenants\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"applicationId\": \"<string>\",\n      \"applicationName\": \"<string>\",\n      \"roleDescription\": \"<string>\",\n      \"tags\": \"<object>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"type\": \"<string>\",\n      \"roleName\": \"<string>\",\n      \"createdAt\": \"<dateTime>\",\n      \"updatedAt\": \"<dateTime>\",\n      \"generation\": \"<integer>\",\n      \"accessRules\": {\n        \"msp\": \"<boolean>\",\n        \"tenants\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"applicationId\": \"<string>\",\n      \"applicationName\": \"<string>\",\n      \"roleDescription\": \"<string>\",\n      \"tags\": \"<object>\"\n    }\n  ],\n  \"subjectFirstName\": \"<string>\",\n  \"subjectLastName\": \"<string>\",\n  \"subjectType\": \"<string>\"\n}"
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/authorization/v1alpha1/assignments?subject-id=<string>&limit=100",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"authorization",
														"v1alpha1",
														"assignments"
													],
													"query": [
														{
															"key": "subject-id",
															"value": "<string>"
														},
														{
															"key": "limit",
															"value": "100"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"HPE_GL_ERROR_BAD_REQUEST\",\n  \"message\": \"Bad Request\",\n  \"debugId\": \"00000000-0000-0000-0000-000000000000\",\n  \"httpStatusCode\": 400\n}"
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/authorization/v1alpha1/assignments?subject-id=<string>&limit=100",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"authorization",
														"v1alpha1",
														"assignments"
													],
													"query": [
														{
															"key": "subject-id",
															"value": "<string>"
														},
														{
															"key": "limit",
															"value": "100"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"HPE_GL_ERROR_UNAUTHORIZED\",\n  \"message\": \"Authentication error\",\n  \"debugId\": \"00000000-0000-0000-0000-000000000000\",\n  \"httpStatusCode\": 401\n}"
										},
										{
											"name": "Forbidden",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/authorization/v1alpha1/assignments?subject-id=<string>&limit=100",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"authorization",
														"v1alpha1",
														"assignments"
													],
													"query": [
														{
															"key": "subject-id",
															"value": "<string>"
														},
														{
															"key": "limit",
															"value": "100"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"HPE_GL_ERROR_FORBIDDEN\",\n  \"message\": \"Action is blocked for this user\",\n  \"debugId\": \"00000000-0000-0000-0000-000000000000\",\n  \"httpStatusCode\": 403\n}"
										},
										{
											"name": "Not Found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/authorization/v1alpha1/assignments?subject-id=<string>&limit=100",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"authorization",
														"v1alpha1",
														"assignments"
													],
													"query": [
														{
															"key": "subject-id",
															"value": "<string>"
														},
														{
															"key": "limit",
															"value": "100"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"HPE_GL_ERROR_NOT_FOUND\",\n  \"message\": \"Not Found\",\n  \"debugId\": \"00000000-0000-0000-0000-000000000000\",\n  \"httpStatusCode\": 404\n}"
										},
										{
											"name": "Method Not Allowed",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/authorization/v1alpha1/assignments?subject-id=<string>&limit=100",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"authorization",
														"v1alpha1",
														"assignments"
													],
													"query": [
														{
															"key": "subject-id",
															"value": "<string>"
														},
														{
															"key": "limit",
															"value": "100"
														}
													]
												}
											},
											"status": "Method Not Allowed",
											"code": 405,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"HPE_GL_ERROR_METHOD_NOT_ALLOWED\",\n  \"message\": \"The method is not allowed on this path\",\n  \"debugId\": \"00000000-0000-0000-0000-000000000000\",\n  \"httpStatusCode\": 405\n}"
										},
										{
											"name": "Validation Error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/authorization/v1alpha1/assignments?subject-id=<string>&limit=100",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"authorization",
														"v1alpha1",
														"assignments"
													],
													"query": [
														{
															"key": "subject-id",
															"value": "<string>"
														},
														{
															"key": "limit",
															"value": "100"
														}
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"HPE_GL_ERROR_REQUEST_VALIDATION_ERROR\",\n  \"message\": \"Request Validation Error\",\n  \"debugId\": \"00000000-0000-0000-0000-000000000000\",\n  \"httpStatusCode\": 422\n}"
										},
										{
											"name": "Internal Server Error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/authorization/v1alpha1/assignments?subject-id=<string>&limit=100",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"authorization",
														"v1alpha1",
														"assignments"
													],
													"query": [
														{
															"key": "subject-id",
															"value": "<string>"
														},
														{
															"key": "limit",
															"value": "100"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"HPE_GL_ERROR_INTERNAL_SERVER_ERROR\",\n  \"message\": \"The method is not allowed on this path\",\n  \"debugId\": \"00000000-0000-0000-0000-000000000000\",\n  \"httpStatusCode\": 500\n}"
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "Step3-Locations",
					"item": [
						{
							"name": "locations/v1/locations",
							"item": [
								{
									"name": "{id}",
									"item": [
										{
											"name": "Retrieve a location",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/locations/v1/locations/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"locations",
														"v1",
														"locations",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "cf929875-cba0-4ad1-99b0-cf1cc8033ee1",
															"description": "(Required) Location ID `(945e70ec-b043-4cad-9ed0-069c06fdb8af)`"
														}
													]
												},
												"description": "Used to get location information using it's unique ID."
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/locations/v1beta1/locations/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"locations",
																"v1beta1",
																"locations",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<uuid>",
																	"description": "(Required) Location ID `(945e70ec-b043-4cad-9ed0-069c06fdb8af)`"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"<uuid>\",\n  \"type\": \"<string>\",\n  \"addresses\": {\n    \"city\": \"<string>\",\n    \"country\": \"<string>\",\n    \"id\": \"<uuid>\",\n    \"postalCode\": \"<string>\",\n    \"state\": \"<string>\",\n    \"streetAddress\": \"<string>\",\n    \"streetAddress2\": \"<string>\",\n    \"type\": \"<string>\"\n  },\n  \"contacts\": {\n    \"email\": \"<string>\",\n    \"id\": \"<uuid>\",\n    \"name\": \"<string>\",\n    \"phoneNumber\": \"<string>\",\n    \"type\": \"<string>\"\n  },\n  \"description\": \"<string>\",\n  \"expiredAt\": \"<string>\",\n  \"name\": \"<string>\",\n  \"validated\": true,\n  \"validatedAt\": \"<string>\",\n  \"validatedByEmail\": \"<string>\",\n  \"validatedByName\": \"<string>\",\n  \"validationCycle\": \"<string>\",\n  \"validationExpired\": false\n}"
												},
												{
													"name": "Bad request",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/locations/v1beta1/locations/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"locations",
																"v1beta1",
																"locations",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<uuid>",
																	"description": "(Required) Location ID `(945e70ec-b043-4cad-9ed0-069c06fdb8af)`"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\"\n}"
												},
												{
													"name": "Not found",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/locations/v1beta1/locations/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"locations",
																"v1beta1",
																"locations",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<uuid>",
																	"description": "(Required) Location ID `(945e70ec-b043-4cad-9ed0-069c06fdb8af)`"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\"\n}"
												},
												{
													"name": "Internal server error",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/locations/v1beta1/locations/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"locations",
																"v1beta1",
																"locations",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<uuid>",
																	"description": "(Required) Location ID `(945e70ec-b043-4cad-9ed0-069c06fdb8af)`"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\"\n}"
												}
											]
										},
										{
											"name": "Delete a location",
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/locations/v1/locations/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"locations",
														"v1",
														"locations",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "cf929875-cba0-4ad1-99b0-cf1cc8033ee1",
															"description": "(Required) Unique idenitifer for the location `(945e70ec-b043-4cad-9ed0-069c06fdb8af)`"
														}
													]
												},
												"description": "Delete a location by providing a specific location ID."
											},
											"response": [
												{
													"name": "Successfully deleted",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/locations/v1beta1/locations/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"locations",
																"v1beta1",
																"locations",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<uuid>",
																	"description": "(Required) Unique idenitifer for the location `(945e70ec-b043-4cad-9ed0-069c06fdb8af)`"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Bad request",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/locations/v1beta1/locations/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"locations",
																"v1beta1",
																"locations",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<uuid>",
																	"description": "(Required) Unique idenitifer for the location `(945e70ec-b043-4cad-9ed0-069c06fdb8af)`"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\"\n}"
												},
												{
													"name": "Internal server error",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/locations/v1beta1/locations/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"locations",
																"v1beta1",
																"locations",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<uuid>",
																	"description": "(Required) Unique idenitifer for the location `(945e70ec-b043-4cad-9ed0-069c06fdb8af)`"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\"\n}"
												}
											]
										},
										{
											"name": "Update a location",
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/merge-patch+json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\"name\": \"TestLocation\",\n    \"type\": \"building\",\n    \"contacts\": [\n        {\n            \"id\": \"3b98f14b-9a44-41aa-bdcc-4f7c94c466e9\",\n            \"type\": \"primary\"\n        },\n        {\n            \"type\": \"primary\",\n            \"name\": \"Denis Choukroun\",\n            \"email\": \"denis.choukroun@hpe.com\",\n            \"phoneNumber\": \"+33622268474\"\n        }\n    ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/locations/v1/locations/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"locations",
														"v1",
														"locations",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "cf929875-cba0-4ad1-99b0-cf1cc8033ee1",
															"description": "(Required) Unique 32 digit alpha-numeric identifier for the location `(945e70ec-b043-4cad-9ed0-069c06fdb8af)`"
														}
													]
												},
												"description": "Update the location Information for a specified location."
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"addresses\": [\n    {\n      \"id\": \"<uuid>\",\n      \"city\": \"<string>\",\n      \"country\": \"<string>\",\n      \"locationId\": \"<string>\",\n      \"postalCode\": \"<string>\",\n      \"state\": \"<string>\",\n      \"streetAddress\": \"<string>\",\n      \"streetAddress2\": \"<string>\",\n      \"type\": {\n        \"value\": \"<Error: Could not resolve allOf schema\"\n      }\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"city\": \"<string>\",\n      \"country\": \"<string>\",\n      \"locationId\": \"<string>\",\n      \"postalCode\": \"<string>\",\n      \"state\": \"<string>\",\n      \"streetAddress\": \"<string>\",\n      \"streetAddress2\": \"<string>\",\n      \"type\": {\n        \"value\": \"<Error: Could not resolve allOf schema\"\n      }\n    }\n  ],\n  \"contacts\": [\n    {\n      \"type\": \"<string>\",\n      \"email\": \"<string>\",\n      \"id\": \"<uuid>\",\n      \"locationId\": \"<string>\",\n      \"name\": \"<string>\",\n      \"phoneNumber\": \"<string>\"\n    },\n    {\n      \"type\": \"<string>\",\n      \"email\": \"<string>\",\n      \"id\": \"<uuid>\",\n      \"locationId\": \"<string>\",\n      \"name\": \"<string>\",\n      \"phoneNumber\": \"<string>\"\n    }\n  ],\n  \"description\": \"<string>\",\n  \"expiredAt\": \"<string>\",\n  \"name\": \"<string>\",\n  \"type\": \"<string>\",\n  \"validated\": true,\n  \"validatedAt\": \"<string>\",\n  \"validatedByEmail\": \"<string>\",\n  \"validatedByName\": \"<string>\",\n  \"validationCycle\": \"<string>\",\n  \"validationExpired\": false\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/locations/v1beta1/locations/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"locations",
																"v1beta1",
																"locations",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<uuid>",
																	"description": "(Required) Unique 32 digit alpha-numeric identifier for the location `(945e70ec-b043-4cad-9ed0-069c06fdb8af)`"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"<uuid>\",\n  \"type\": \"<string>\",\n  \"createdAt\": \"<string>\",\n  \"updatedAt\": \"<string>\",\n  \"generation\": \"<integer>\",\n  \"addresses\": [\n    {\n      \"city\": \"<string>\",\n      \"country\": \"<string>\",\n      \"id\": \"<uuid>\",\n      \"postalCode\": \"<string>\",\n      \"state\": \"<string>\",\n      \"streetAddress\": \"<string>\",\n      \"streetAddress2\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"city\": \"<string>\",\n      \"country\": \"<string>\",\n      \"id\": \"<uuid>\",\n      \"postalCode\": \"<string>\",\n      \"state\": \"<string>\",\n      \"streetAddress\": \"<string>\",\n      \"streetAddress2\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ],\n  \"contacts\": [\n    {\n      \"email\": \"<string>\",\n      \"id\": \"<uuid>\",\n      \"name\": \"<string>\",\n      \"phoneNumber\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"email\": \"<string>\",\n      \"id\": \"<uuid>\",\n      \"name\": \"<string>\",\n      \"phoneNumber\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ],\n  \"description\": \"<string>\",\n  \"expiredAt\": \"<string>\",\n  \"name\": \"<string>\",\n  \"validated\": true,\n  \"validatedAt\": \"<string>\",\n  \"validatedByEmail\": \"<string>\",\n  \"validatedByName\": \"<string>\",\n  \"validationCycle\": \"<string>\",\n  \"validationExpired\": false\n}"
												},
												{
													"name": "Bad request",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"addresses\": [\n    {\n      \"id\": \"<uuid>\",\n      \"city\": \"<string>\",\n      \"country\": \"<string>\",\n      \"locationId\": \"<string>\",\n      \"postalCode\": \"<string>\",\n      \"state\": \"<string>\",\n      \"streetAddress\": \"<string>\",\n      \"streetAddress2\": \"<string>\",\n      \"type\": {\n        \"value\": \"<Error: Could not resolve allOf schema\"\n      }\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"city\": \"<string>\",\n      \"country\": \"<string>\",\n      \"locationId\": \"<string>\",\n      \"postalCode\": \"<string>\",\n      \"state\": \"<string>\",\n      \"streetAddress\": \"<string>\",\n      \"streetAddress2\": \"<string>\",\n      \"type\": {\n        \"value\": \"<Error: Could not resolve allOf schema\"\n      }\n    }\n  ],\n  \"contacts\": [\n    {\n      \"type\": \"<string>\",\n      \"email\": \"<string>\",\n      \"id\": \"<uuid>\",\n      \"locationId\": \"<string>\",\n      \"name\": \"<string>\",\n      \"phoneNumber\": \"<string>\"\n    },\n    {\n      \"type\": \"<string>\",\n      \"email\": \"<string>\",\n      \"id\": \"<uuid>\",\n      \"locationId\": \"<string>\",\n      \"name\": \"<string>\",\n      \"phoneNumber\": \"<string>\"\n    }\n  ],\n  \"description\": \"<string>\",\n  \"expiredAt\": \"<string>\",\n  \"name\": \"<string>\",\n  \"type\": \"<string>\",\n  \"validated\": true,\n  \"validatedAt\": \"<string>\",\n  \"validatedByEmail\": \"<string>\",\n  \"validatedByName\": \"<string>\",\n  \"validationCycle\": \"<string>\",\n  \"validationExpired\": false\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/locations/v1beta1/locations/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"locations",
																"v1beta1",
																"locations",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<uuid>",
																	"description": "(Required) Unique 32 digit alpha-numeric identifier for the location `(945e70ec-b043-4cad-9ed0-069c06fdb8af)`"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\"\n}"
												},
												{
													"name": "Not found",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"addresses\": [\n    {\n      \"id\": \"<uuid>\",\n      \"city\": \"<string>\",\n      \"country\": \"<string>\",\n      \"locationId\": \"<string>\",\n      \"postalCode\": \"<string>\",\n      \"state\": \"<string>\",\n      \"streetAddress\": \"<string>\",\n      \"streetAddress2\": \"<string>\",\n      \"type\": {\n        \"value\": \"<Error: Could not resolve allOf schema\"\n      }\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"city\": \"<string>\",\n      \"country\": \"<string>\",\n      \"locationId\": \"<string>\",\n      \"postalCode\": \"<string>\",\n      \"state\": \"<string>\",\n      \"streetAddress\": \"<string>\",\n      \"streetAddress2\": \"<string>\",\n      \"type\": {\n        \"value\": \"<Error: Could not resolve allOf schema\"\n      }\n    }\n  ],\n  \"contacts\": [\n    {\n      \"type\": \"<string>\",\n      \"email\": \"<string>\",\n      \"id\": \"<uuid>\",\n      \"locationId\": \"<string>\",\n      \"name\": \"<string>\",\n      \"phoneNumber\": \"<string>\"\n    },\n    {\n      \"type\": \"<string>\",\n      \"email\": \"<string>\",\n      \"id\": \"<uuid>\",\n      \"locationId\": \"<string>\",\n      \"name\": \"<string>\",\n      \"phoneNumber\": \"<string>\"\n    }\n  ],\n  \"description\": \"<string>\",\n  \"expiredAt\": \"<string>\",\n  \"name\": \"<string>\",\n  \"type\": \"<string>\",\n  \"validated\": true,\n  \"validatedAt\": \"<string>\",\n  \"validatedByEmail\": \"<string>\",\n  \"validatedByName\": \"<string>\",\n  \"validationCycle\": \"<string>\",\n  \"validationExpired\": false\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/locations/v1beta1/locations/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"locations",
																"v1beta1",
																"locations",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<uuid>",
																	"description": "(Required) Unique 32 digit alpha-numeric identifier for the location `(945e70ec-b043-4cad-9ed0-069c06fdb8af)`"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\"\n}"
												},
												{
													"name": "Internal server error",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"addresses\": [\n    {\n      \"id\": \"<uuid>\",\n      \"city\": \"<string>\",\n      \"country\": \"<string>\",\n      \"locationId\": \"<string>\",\n      \"postalCode\": \"<string>\",\n      \"state\": \"<string>\",\n      \"streetAddress\": \"<string>\",\n      \"streetAddress2\": \"<string>\",\n      \"type\": {\n        \"value\": \"<Error: Could not resolve allOf schema\"\n      }\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"city\": \"<string>\",\n      \"country\": \"<string>\",\n      \"locationId\": \"<string>\",\n      \"postalCode\": \"<string>\",\n      \"state\": \"<string>\",\n      \"streetAddress\": \"<string>\",\n      \"streetAddress2\": \"<string>\",\n      \"type\": {\n        \"value\": \"<Error: Could not resolve allOf schema\"\n      }\n    }\n  ],\n  \"contacts\": [\n    {\n      \"type\": \"<string>\",\n      \"email\": \"<string>\",\n      \"id\": \"<uuid>\",\n      \"locationId\": \"<string>\",\n      \"name\": \"<string>\",\n      \"phoneNumber\": \"<string>\"\n    },\n    {\n      \"type\": \"<string>\",\n      \"email\": \"<string>\",\n      \"id\": \"<uuid>\",\n      \"locationId\": \"<string>\",\n      \"name\": \"<string>\",\n      \"phoneNumber\": \"<string>\"\n    }\n  ],\n  \"description\": \"<string>\",\n  \"expiredAt\": \"<string>\",\n  \"name\": \"<string>\",\n  \"type\": \"<string>\",\n  \"validated\": true,\n  \"validatedAt\": \"<string>\",\n  \"validatedByEmail\": \"<string>\",\n  \"validatedByName\": \"<string>\",\n  \"validationCycle\": \"<string>\",\n  \"validationExpired\": false\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/locations/v1beta1/locations/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"locations",
																"v1beta1",
																"locations",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<uuid>",
																	"description": "(Required) Unique 32 digit alpha-numeric identifier for the location `(945e70ec-b043-4cad-9ed0-069c06fdb8af)`"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "Lists all locations",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/locations/v1/locations?offset=0&limit=100",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"locations",
												"v1",
												"locations"
											],
											"query": [
												{
													"key": "offset",
													"value": "0",
													"description": "(Required) Offset"
												},
												{
													"key": "limit",
													"value": "100",
													"description": "(Required) Limit"
												},
												{
													"key": "filter",
													"value": "<string>",
													"description": "Filter data using a subset of OData 4.0 and return only the subset of resources that match the filter. The Get locations API can be filtered by name.",
													"disabled": true
												}
											]
										},
										"description": "Retrieve location information for all locations."
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/locations/v1beta1/locations?offset=<integer>&limit=100&filter=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"locations",
														"v1beta1",
														"locations"
													],
													"query": [
														{
															"key": "offset",
															"value": "<integer>"
														},
														{
															"key": "limit",
															"value": "100"
														},
														{
															"key": "filter",
															"value": "<string>"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"items\": [\n    {\n      \"id\": \"<uuid>\",\n      \"type\": \"<string>\",\n      \"city\": \"<string>\",\n      \"country\": \"<string>\",\n      \"expiredAt\": \"<string>\",\n      \"name\": \"<string>\",\n      \"validated\": true,\n      \"validatedAt\": \"<string>\",\n      \"validatedByEmail\": \"<string>\",\n      \"validatedByName\": \"<string>\",\n      \"validationCycle\": \"<string>\",\n      \"validationExpired\": false\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"type\": \"<string>\",\n      \"city\": \"<string>\",\n      \"country\": \"<string>\",\n      \"expiredAt\": \"<string>\",\n      \"name\": \"<string>\",\n      \"validated\": true,\n      \"validatedAt\": \"<string>\",\n      \"validatedByEmail\": \"<string>\",\n      \"validatedByName\": \"<string>\",\n      \"validationCycle\": \"<string>\",\n      \"validationExpired\": false\n    }\n  ],\n  \"count\": \"<integer>\",\n  \"offset\": \"<integer>\",\n  \"total\": \"<integer>\"\n}"
										},
										{
											"name": "Bad request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/locations/v1beta1/locations?offset=<integer>&limit=100&filter=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"locations",
														"v1beta1",
														"locations"
													],
													"query": [
														{
															"key": "offset",
															"value": "<integer>"
														},
														{
															"key": "limit",
															"value": "100"
														},
														{
															"key": "filter",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\"\n}"
										},
										{
											"name": "Not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/locations/v1beta1/locations?offset=<integer>&limit=100&filter=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"locations",
														"v1beta1",
														"locations"
													],
													"query": [
														{
															"key": "offset",
															"value": "<integer>"
														},
														{
															"key": "limit",
															"value": "100"
														},
														{
															"key": "filter",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Internal server error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/locations/v1beta1/locations?offset=<integer>&limit=100&filter=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"locations",
														"v1beta1",
														"locations"
													],
													"query": [
														{
															"key": "offset",
															"value": "<integer>"
														},
														{
															"key": "limit",
															"value": "100"
														},
														{
															"key": "filter",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\"\n}"
										}
									]
								},
								{
									"name": "Create a Location",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"addresses\": [\n    {\n      \"city\": \"<string>\",\n      \"country\": \"<string>\",\n      \"postalCode\": \"<string>\",\n      \"state\": \"<string>\",\n      \"streetAddress\": \"<string>\",\n      \"type\": {\n        \"value\": \"<Error: Could not resolve allOf schema\"\n      },\n      \"id\": \"<uuid>\",\n      \"locationId\": \"<string>\",\n      \"streetAddress2\": \"<string>\"\n    },\n    {\n      \"city\": \"<string>\",\n      \"country\": \"<string>\",\n      \"postalCode\": \"<string>\",\n      \"state\": \"<string>\",\n      \"streetAddress\": \"<string>\",\n      \"type\": {\n        \"value\": \"<Error: Could not resolve allOf schema\"\n      },\n      \"id\": \"<uuid>\",\n      \"locationId\": \"<string>\",\n      \"streetAddress2\": \"<string>\"\n    }\n  ],\n  \"contacts\": [\n    {\n      \"email\": \"<string>\",\n      \"name\": \"<string>\",\n      \"type\": \"<string>\",\n      \"id\": \"<uuid>\",\n      \"locationId\": \"<string>\",\n      \"phoneNumber\": \"<string>\"\n    },\n    {\n      \"email\": \"<string>\",\n      \"name\": \"<string>\",\n      \"type\": \"<string>\",\n      \"id\": \"<uuid>\",\n      \"locationId\": \"<string>\",\n      \"phoneNumber\": \"<string>\"\n    }\n  ],\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"expiredAt\": \"<string>\",\n  \"type\": \"<string>\",\n  \"validated\": true,\n  \"validatedAt\": \"<string>\",\n  \"validatedByEmail\": \"<string>\",\n  \"validatedByName\": \"<string>\",\n  \"validationCycle\": \"<string>\",\n  \"validationExpired\": false\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/locations/v1/locations",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"locations",
												"v1",
												"locations"
											]
										},
										"description": "Create a location and store its associated information."
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"addresses\": [\n    {\n      \"city\": \"<string>\",\n      \"country\": \"<string>\",\n      \"postalCode\": \"<string>\",\n      \"state\": \"<string>\",\n      \"streetAddress\": \"<string>\",\n      \"type\": {\n        \"value\": \"<Error: Could not resolve allOf schema\"\n      },\n      \"id\": \"<uuid>\",\n      \"locationId\": \"<string>\",\n      \"streetAddress2\": \"<string>\"\n    },\n    {\n      \"city\": \"<string>\",\n      \"country\": \"<string>\",\n      \"postalCode\": \"<string>\",\n      \"state\": \"<string>\",\n      \"streetAddress\": \"<string>\",\n      \"type\": {\n        \"value\": \"<Error: Could not resolve allOf schema\"\n      },\n      \"id\": \"<uuid>\",\n      \"locationId\": \"<string>\",\n      \"streetAddress2\": \"<string>\"\n    }\n  ],\n  \"contacts\": [\n    {\n      \"email\": \"<string>\",\n      \"name\": \"<string>\",\n      \"type\": \"<string>\",\n      \"id\": \"<uuid>\",\n      \"locationId\": \"<string>\",\n      \"phoneNumber\": \"<string>\"\n    },\n    {\n      \"email\": \"<string>\",\n      \"name\": \"<string>\",\n      \"type\": \"<string>\",\n      \"id\": \"<uuid>\",\n      \"locationId\": \"<string>\",\n      \"phoneNumber\": \"<string>\"\n    }\n  ],\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"expiredAt\": \"<string>\",\n  \"type\": \"<string>\",\n  \"validated\": true,\n  \"validatedAt\": \"<string>\",\n  \"validatedByEmail\": \"<string>\",\n  \"validatedByName\": \"<string>\",\n  \"validationCycle\": \"<string>\",\n  \"validationExpired\": false\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/locations/v1beta1/locations",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"locations",
														"v1beta1",
														"locations"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"<uuid>\",\n  \"type\": \"<string>\",\n  \"createdAt\": \"<string>\",\n  \"updatedAt\": \"<string>\",\n  \"generation\": \"<integer>\",\n  \"addresses\": [\n    {\n      \"city\": \"<string>\",\n      \"country\": \"<string>\",\n      \"id\": \"<uuid>\",\n      \"postalCode\": \"<string>\",\n      \"state\": \"<string>\",\n      \"streetAddress\": \"<string>\",\n      \"streetAddress2\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"city\": \"<string>\",\n      \"country\": \"<string>\",\n      \"id\": \"<uuid>\",\n      \"postalCode\": \"<string>\",\n      \"state\": \"<string>\",\n      \"streetAddress\": \"<string>\",\n      \"streetAddress2\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ],\n  \"contacts\": [\n    {\n      \"email\": \"<string>\",\n      \"id\": \"<uuid>\",\n      \"name\": \"<string>\",\n      \"phoneNumber\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"email\": \"<string>\",\n      \"id\": \"<uuid>\",\n      \"name\": \"<string>\",\n      \"phoneNumber\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ],\n  \"description\": \"<string>\",\n  \"expiredAt\": \"<string>\",\n  \"name\": \"<string>\",\n  \"validated\": true,\n  \"validatedAt\": \"<string>\",\n  \"validatedByEmail\": \"<string>\",\n  \"validatedByName\": \"<string>\",\n  \"validationCycle\": \"<string>\",\n  \"validationExpired\": false\n}"
										},
										{
											"name": "Bad request",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"addresses\": [\n    {\n      \"city\": \"<string>\",\n      \"country\": \"<string>\",\n      \"postalCode\": \"<string>\",\n      \"state\": \"<string>\",\n      \"streetAddress\": \"<string>\",\n      \"type\": {\n        \"value\": \"<Error: Could not resolve allOf schema\"\n      },\n      \"id\": \"<uuid>\",\n      \"locationId\": \"<string>\",\n      \"streetAddress2\": \"<string>\"\n    },\n    {\n      \"city\": \"<string>\",\n      \"country\": \"<string>\",\n      \"postalCode\": \"<string>\",\n      \"state\": \"<string>\",\n      \"streetAddress\": \"<string>\",\n      \"type\": {\n        \"value\": \"<Error: Could not resolve allOf schema\"\n      },\n      \"id\": \"<uuid>\",\n      \"locationId\": \"<string>\",\n      \"streetAddress2\": \"<string>\"\n    }\n  ],\n  \"contacts\": [\n    {\n      \"email\": \"<string>\",\n      \"name\": \"<string>\",\n      \"type\": \"<string>\",\n      \"id\": \"<uuid>\",\n      \"locationId\": \"<string>\",\n      \"phoneNumber\": \"<string>\"\n    },\n    {\n      \"email\": \"<string>\",\n      \"name\": \"<string>\",\n      \"type\": \"<string>\",\n      \"id\": \"<uuid>\",\n      \"locationId\": \"<string>\",\n      \"phoneNumber\": \"<string>\"\n    }\n  ],\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"expiredAt\": \"<string>\",\n  \"type\": \"<string>\",\n  \"validated\": true,\n  \"validatedAt\": \"<string>\",\n  \"validatedByEmail\": \"<string>\",\n  \"validatedByName\": \"<string>\",\n  \"validationCycle\": \"<string>\",\n  \"validationExpired\": false\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/locations/v1beta1/locations",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"locations",
														"v1beta1",
														"locations"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\"\n}"
										},
										{
											"name": "Not found",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"addresses\": [\n    {\n      \"city\": \"<string>\",\n      \"country\": \"<string>\",\n      \"postalCode\": \"<string>\",\n      \"state\": \"<string>\",\n      \"streetAddress\": \"<string>\",\n      \"type\": {\n        \"value\": \"<Error: Could not resolve allOf schema\"\n      },\n      \"id\": \"<uuid>\",\n      \"locationId\": \"<string>\",\n      \"streetAddress2\": \"<string>\"\n    },\n    {\n      \"city\": \"<string>\",\n      \"country\": \"<string>\",\n      \"postalCode\": \"<string>\",\n      \"state\": \"<string>\",\n      \"streetAddress\": \"<string>\",\n      \"type\": {\n        \"value\": \"<Error: Could not resolve allOf schema\"\n      },\n      \"id\": \"<uuid>\",\n      \"locationId\": \"<string>\",\n      \"streetAddress2\": \"<string>\"\n    }\n  ],\n  \"contacts\": [\n    {\n      \"email\": \"<string>\",\n      \"name\": \"<string>\",\n      \"type\": \"<string>\",\n      \"id\": \"<uuid>\",\n      \"locationId\": \"<string>\",\n      \"phoneNumber\": \"<string>\"\n    },\n    {\n      \"email\": \"<string>\",\n      \"name\": \"<string>\",\n      \"type\": \"<string>\",\n      \"id\": \"<uuid>\",\n      \"locationId\": \"<string>\",\n      \"phoneNumber\": \"<string>\"\n    }\n  ],\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"expiredAt\": \"<string>\",\n  \"type\": \"<string>\",\n  \"validated\": true,\n  \"validatedAt\": \"<string>\",\n  \"validatedByEmail\": \"<string>\",\n  \"validatedByName\": \"<string>\",\n  \"validationCycle\": \"<string>\",\n  \"validationExpired\": false\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/locations/v1beta1/locations",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"locations",
														"v1beta1",
														"locations"
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\"\n}"
										},
										{
											"name": "Internal server error",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"addresses\": [\n    {\n      \"city\": \"<string>\",\n      \"country\": \"<string>\",\n      \"postalCode\": \"<string>\",\n      \"state\": \"<string>\",\n      \"streetAddress\": \"<string>\",\n      \"type\": {\n        \"value\": \"<Error: Could not resolve allOf schema\"\n      },\n      \"id\": \"<uuid>\",\n      \"locationId\": \"<string>\",\n      \"streetAddress2\": \"<string>\"\n    },\n    {\n      \"city\": \"<string>\",\n      \"country\": \"<string>\",\n      \"postalCode\": \"<string>\",\n      \"state\": \"<string>\",\n      \"streetAddress\": \"<string>\",\n      \"type\": {\n        \"value\": \"<Error: Could not resolve allOf schema\"\n      },\n      \"id\": \"<uuid>\",\n      \"locationId\": \"<string>\",\n      \"streetAddress2\": \"<string>\"\n    }\n  ],\n  \"contacts\": [\n    {\n      \"email\": \"<string>\",\n      \"name\": \"<string>\",\n      \"type\": \"<string>\",\n      \"id\": \"<uuid>\",\n      \"locationId\": \"<string>\",\n      \"phoneNumber\": \"<string>\"\n    },\n    {\n      \"email\": \"<string>\",\n      \"name\": \"<string>\",\n      \"type\": \"<string>\",\n      \"id\": \"<uuid>\",\n      \"locationId\": \"<string>\",\n      \"phoneNumber\": \"<string>\"\n    }\n  ],\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"expiredAt\": \"<string>\",\n  \"type\": \"<string>\",\n  \"validated\": true,\n  \"validatedAt\": \"<string>\",\n  \"validatedByEmail\": \"<string>\",\n  \"validatedByName\": \"<string>\",\n  \"validationCycle\": \"<string>\",\n  \"validationExpired\": false\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/locations/v1beta1/locations",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"locations",
														"v1beta1",
														"locations"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\"\n}"
										}
									]
								},
								{
									"name": "Create a Test Location",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"TestLocation\",\n    \"type\": \"building\",\n    \"description\": \"This is a test location\",\n    \"contacts\": [\n        {\n            \"type\": \"primary\",\n            \"name\": \"Givenname Surname\",\n            \"email\": \"testuser@example.com\",\n            \"phoneNumber\": \"\"\n        }\n    ],\n    \"addresses\": [\n        {\n            \"country\": \"<string>\",\n            \"type\": \"street\",\n            \"streetAddress\": \"<string>\",\n            \"streetAddress2\": \"<string>\",\n            \"city\": \"<string>\",\n            \"state\": \"<string>\",\n            \"postalCode\": \"<string>\"\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/locations/v1/locations",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"locations",
												"v1",
												"locations"
											]
										},
										"description": "Create a location and store its associated information."
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"addresses\": [\n    {\n      \"city\": \"<string>\",\n      \"country\": \"<string>\",\n      \"postalCode\": \"<string>\",\n      \"state\": \"<string>\",\n      \"streetAddress\": \"<string>\",\n      \"type\": {\n        \"value\": \"<Error: Could not resolve allOf schema\"\n      },\n      \"id\": \"<uuid>\",\n      \"locationId\": \"<string>\",\n      \"streetAddress2\": \"<string>\"\n    },\n    {\n      \"city\": \"<string>\",\n      \"country\": \"<string>\",\n      \"postalCode\": \"<string>\",\n      \"state\": \"<string>\",\n      \"streetAddress\": \"<string>\",\n      \"type\": {\n        \"value\": \"<Error: Could not resolve allOf schema\"\n      },\n      \"id\": \"<uuid>\",\n      \"locationId\": \"<string>\",\n      \"streetAddress2\": \"<string>\"\n    }\n  ],\n  \"contacts\": [\n    {\n      \"email\": \"<string>\",\n      \"name\": \"<string>\",\n      \"type\": \"<string>\",\n      \"id\": \"<uuid>\",\n      \"locationId\": \"<string>\",\n      \"phoneNumber\": \"<string>\"\n    },\n    {\n      \"email\": \"<string>\",\n      \"name\": \"<string>\",\n      \"type\": \"<string>\",\n      \"id\": \"<uuid>\",\n      \"locationId\": \"<string>\",\n      \"phoneNumber\": \"<string>\"\n    }\n  ],\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"expiredAt\": \"<string>\",\n  \"type\": \"<string>\",\n  \"validated\": true,\n  \"validatedAt\": \"<string>\",\n  \"validatedByEmail\": \"<string>\",\n  \"validatedByName\": \"<string>\",\n  \"validationCycle\": \"<string>\",\n  \"validationExpired\": false\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/locations/v1beta1/locations",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"locations",
														"v1beta1",
														"locations"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"<uuid>\",\n  \"type\": \"<string>\",\n  \"createdAt\": \"<string>\",\n  \"updatedAt\": \"<string>\",\n  \"generation\": \"<integer>\",\n  \"addresses\": [\n    {\n      \"city\": \"<string>\",\n      \"country\": \"<string>\",\n      \"id\": \"<uuid>\",\n      \"postalCode\": \"<string>\",\n      \"state\": \"<string>\",\n      \"streetAddress\": \"<string>\",\n      \"streetAddress2\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"city\": \"<string>\",\n      \"country\": \"<string>\",\n      \"id\": \"<uuid>\",\n      \"postalCode\": \"<string>\",\n      \"state\": \"<string>\",\n      \"streetAddress\": \"<string>\",\n      \"streetAddress2\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ],\n  \"contacts\": [\n    {\n      \"email\": \"<string>\",\n      \"id\": \"<uuid>\",\n      \"name\": \"<string>\",\n      \"phoneNumber\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"email\": \"<string>\",\n      \"id\": \"<uuid>\",\n      \"name\": \"<string>\",\n      \"phoneNumber\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ],\n  \"description\": \"<string>\",\n  \"expiredAt\": \"<string>\",\n  \"name\": \"<string>\",\n  \"validated\": true,\n  \"validatedAt\": \"<string>\",\n  \"validatedByEmail\": \"<string>\",\n  \"validatedByName\": \"<string>\",\n  \"validationCycle\": \"<string>\",\n  \"validationExpired\": false\n}"
										},
										{
											"name": "Bad request",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"addresses\": [\n    {\n      \"city\": \"<string>\",\n      \"country\": \"<string>\",\n      \"postalCode\": \"<string>\",\n      \"state\": \"<string>\",\n      \"streetAddress\": \"<string>\",\n      \"type\": {\n        \"value\": \"<Error: Could not resolve allOf schema\"\n      },\n      \"id\": \"<uuid>\",\n      \"locationId\": \"<string>\",\n      \"streetAddress2\": \"<string>\"\n    },\n    {\n      \"city\": \"<string>\",\n      \"country\": \"<string>\",\n      \"postalCode\": \"<string>\",\n      \"state\": \"<string>\",\n      \"streetAddress\": \"<string>\",\n      \"type\": {\n        \"value\": \"<Error: Could not resolve allOf schema\"\n      },\n      \"id\": \"<uuid>\",\n      \"locationId\": \"<string>\",\n      \"streetAddress2\": \"<string>\"\n    }\n  ],\n  \"contacts\": [\n    {\n      \"email\": \"<string>\",\n      \"name\": \"<string>\",\n      \"type\": \"<string>\",\n      \"id\": \"<uuid>\",\n      \"locationId\": \"<string>\",\n      \"phoneNumber\": \"<string>\"\n    },\n    {\n      \"email\": \"<string>\",\n      \"name\": \"<string>\",\n      \"type\": \"<string>\",\n      \"id\": \"<uuid>\",\n      \"locationId\": \"<string>\",\n      \"phoneNumber\": \"<string>\"\n    }\n  ],\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"expiredAt\": \"<string>\",\n  \"type\": \"<string>\",\n  \"validated\": true,\n  \"validatedAt\": \"<string>\",\n  \"validatedByEmail\": \"<string>\",\n  \"validatedByName\": \"<string>\",\n  \"validationCycle\": \"<string>\",\n  \"validationExpired\": false\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/locations/v1beta1/locations",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"locations",
														"v1beta1",
														"locations"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\"\n}"
										},
										{
											"name": "Not found",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"addresses\": [\n    {\n      \"city\": \"<string>\",\n      \"country\": \"<string>\",\n      \"postalCode\": \"<string>\",\n      \"state\": \"<string>\",\n      \"streetAddress\": \"<string>\",\n      \"type\": {\n        \"value\": \"<Error: Could not resolve allOf schema\"\n      },\n      \"id\": \"<uuid>\",\n      \"locationId\": \"<string>\",\n      \"streetAddress2\": \"<string>\"\n    },\n    {\n      \"city\": \"<string>\",\n      \"country\": \"<string>\",\n      \"postalCode\": \"<string>\",\n      \"state\": \"<string>\",\n      \"streetAddress\": \"<string>\",\n      \"type\": {\n        \"value\": \"<Error: Could not resolve allOf schema\"\n      },\n      \"id\": \"<uuid>\",\n      \"locationId\": \"<string>\",\n      \"streetAddress2\": \"<string>\"\n    }\n  ],\n  \"contacts\": [\n    {\n      \"email\": \"<string>\",\n      \"name\": \"<string>\",\n      \"type\": \"<string>\",\n      \"id\": \"<uuid>\",\n      \"locationId\": \"<string>\",\n      \"phoneNumber\": \"<string>\"\n    },\n    {\n      \"email\": \"<string>\",\n      \"name\": \"<string>\",\n      \"type\": \"<string>\",\n      \"id\": \"<uuid>\",\n      \"locationId\": \"<string>\",\n      \"phoneNumber\": \"<string>\"\n    }\n  ],\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"expiredAt\": \"<string>\",\n  \"type\": \"<string>\",\n  \"validated\": true,\n  \"validatedAt\": \"<string>\",\n  \"validatedByEmail\": \"<string>\",\n  \"validatedByName\": \"<string>\",\n  \"validationCycle\": \"<string>\",\n  \"validationExpired\": false\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/locations/v1beta1/locations",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"locations",
														"v1beta1",
														"locations"
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\"\n}"
										},
										{
											"name": "Internal server error",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"addresses\": [\n    {\n      \"city\": \"<string>\",\n      \"country\": \"<string>\",\n      \"postalCode\": \"<string>\",\n      \"state\": \"<string>\",\n      \"streetAddress\": \"<string>\",\n      \"type\": {\n        \"value\": \"<Error: Could not resolve allOf schema\"\n      },\n      \"id\": \"<uuid>\",\n      \"locationId\": \"<string>\",\n      \"streetAddress2\": \"<string>\"\n    },\n    {\n      \"city\": \"<string>\",\n      \"country\": \"<string>\",\n      \"postalCode\": \"<string>\",\n      \"state\": \"<string>\",\n      \"streetAddress\": \"<string>\",\n      \"type\": {\n        \"value\": \"<Error: Could not resolve allOf schema\"\n      },\n      \"id\": \"<uuid>\",\n      \"locationId\": \"<string>\",\n      \"streetAddress2\": \"<string>\"\n    }\n  ],\n  \"contacts\": [\n    {\n      \"email\": \"<string>\",\n      \"name\": \"<string>\",\n      \"type\": \"<string>\",\n      \"id\": \"<uuid>\",\n      \"locationId\": \"<string>\",\n      \"phoneNumber\": \"<string>\"\n    },\n    {\n      \"email\": \"<string>\",\n      \"name\": \"<string>\",\n      \"type\": \"<string>\",\n      \"id\": \"<uuid>\",\n      \"locationId\": \"<string>\",\n      \"phoneNumber\": \"<string>\"\n    }\n  ],\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"expiredAt\": \"<string>\",\n  \"type\": \"<string>\",\n  \"validated\": true,\n  \"validatedAt\": \"<string>\",\n  \"validatedByEmail\": \"<string>\",\n  \"validatedByName\": \"<string>\",\n  \"validationCycle\": \"<string>\",\n  \"validationExpired\": false\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/locations/v1beta1/locations",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"locations",
														"v1beta1",
														"locations"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\"\n}"
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "Step4-Devices and Subscriptions",
					"item": [
						{
							"name": "devices",
							"item": [
								{
									"name": "v1beta1",
									"item": [
										{
											"name": "devices",
											"item": [
												{
													"name": "async-operations",
													"item": [
														{
															"name": "{id}",
															"item": [
																{
																	"name": "Get async operation resource for devices",
																	"request": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/devices/v1beta1/devices/async-operations/:id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"devices",
																				"v1beta1",
																				"devices",
																				"async-operations",
																				":id"
																			],
																			"variable": [
																				{
																					"key": "id",
																					"value": "{{AsyncOpsTransaction_Id}}",
																					"description": "(Required) The async operation resource id retrieved from the location header of the asynchronous API response"
																				}
																			]
																		},
																		"description": "Get async operation resource of devices for a given id. If the async operation resource id represents an asynchronous request that consists of multiple devices, a breakdown of succeeded devices and failed devices, if there are any, will be returned as the response. In this case, the device serial number will be used to represent each device. To use this API, you need to have the view permission of device management."
																	},
																	"response": [
																		{
																			"name": "Successful Response",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: bearer",
																						"key": "Authorization",
																						"value": "Bearer <token>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/devices/v1beta1/devices/async-operations/:id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"devices",
																						"v1beta1",
																						"devices",
																						"async-operations",
																						":id"
																					],
																					"variable": [
																						{
																							"key": "id"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"status\": \"SUCCEEDED\",\n  \"startedAt\": \"<dateTime>\",\n  \"endedAt\": \"<dateTime>\",\n  \"progressPercent\": \"<integer>\",\n  \"suggestedPollingIntervalSeconds\": \"<integer>\",\n  \"timeoutMinutes\": \"<integer>\",\n  \"result\": {},\n  \"resultType\": \"<string>\"\n}"
																		},
																		{
																			"name": "Not Found",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: bearer",
																						"key": "Authorization",
																						"value": "Bearer <token>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/devices/v1beta1/devices/async-operations/:id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"devices",
																						"v1beta1",
																						"devices",
																						"async-operations",
																						":id"
																					],
																					"variable": [
																						{
																							"key": "id"
																						}
																					]
																				}
																			},
																			"status": "Not Found",
																			"code": 404,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"error_code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		}
																	]
																}
															]
														}
													]
												},
												{
													"name": "Get device information",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"var jsonData = JSON.parse(responseBody).items[0].id;\r",
																	"pm.collectionVariables.set(\"DeviceId\",jsonData);\r",
																	"console.log(jsonData)"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/devices/v1beta1/devices?filter=serialNumber eq '<DeviceSN>'&offset=0&limit=5",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"devices",
																"v1beta1",
																"devices"
															],
															"query": [
																{
																	"key": "filter",
																	"value": "serialNumber eq '<DeviceSN>'",
																	"description": "Filter expressions consisting of simple comparison operations joined by logical operators"
																},
																{
																	"key": "filter-tags",
																	"value": "<string>",
																	"description": "Filter expressions consisting of simple comparison operations joined by logical operators to be applied on the assigned tags and/or their values",
																	"disabled": true
																},
																{
																	"key": "sort",
																	"value": "<string>",
																	"description": "Comma separated list of sort expressions. Sort expression is a property name optionally followed by a direction indicator asc or desc. Default is ascending order",
																	"disabled": true
																},
																{
																	"key": "select",
																	"value": "<string>",
																	"description": "Comma separated list of select properties to get in the response. Default All properties are returned",
																	"disabled": true
																},
																{
																	"key": "select",
																	"value": "<string>",
																	"description": "Comma separated list of select properties to get in the response. Default All properties are returned",
																	"disabled": true
																},
																{
																	"key": "limit",
																	"value": "2000",
																	"description": "Specifies the number of results to be returned, Default value is 2000",
																	"disabled": true
																},
																{
																	"key": "offset",
																	"value": "0",
																	"description": "Specifies the zero-based resource offset to start the response from. Default value is 0"
																},
																{
																	"key": "limit",
																	"value": "5"
																}
															]
														},
														"description": "Get device details by filter. To use this API, you need to have the view permission of device management."
													},
													"response": [
														{
															"name": "Successful Response",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/devices/v1beta1/devices?filter=<string>&filter-tags=<string>&sort=<string>&select=<string>&limit=2000&offset=0",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"devices",
																		"v1beta1",
																		"devices"
																	],
																	"query": [
																		{
																			"key": "filter",
																			"value": "<string>",
																			"description": "Filter expressions consisting of simple comparison operations joined by logical operators"
																		},
																		{
																			"key": "filter-tags",
																			"value": "<string>",
																			"description": "Filter expressions consisting of simple comparison operations joined by logical operators to be applied on the assigned tags and/or their values"
																		},
																		{
																			"key": "sort",
																			"value": "<string>",
																			"description": "Comma separated list of sort expressions. Sort expression is a property name optionally followed by a direction indicator asc or desc. Default is ascending order"
																		},
																		{
																			"key": "select",
																			"value": "<string>",
																			"description": "Comma separated list of select properties to get in the response. Default All properties are returned"
																		},
																		{
																			"key": "limit",
																			"value": "2000",
																			"description": "Specifies the number of results to be returned, Default value is 2000"
																		},
																		{
																			"key": "offset",
																			"value": "0",
																			"description": "Specifies the zero-based resource offset to start the response from. Default value is 0"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"items\": [\n    {\n      \"id\": \"<string>\",\n      \"partNumber\": \"<string>\",\n      \"serialNumber\": \"<string>\",\n      \"macAddress\": \"bC:C3:1F:CB:e5:01\",\n      \"name\": \"<string>\",\n      \"type\": \"PCE\",\n      \"model\": \"<string>\",\n      \"archived\": \"<boolean>\",\n      \"application\": {\n        \"id\": \"<string>\",\n        \"instanceId\": \"<string>\",\n        \"customerId\": \"<string>\"\n      },\n      \"tags\": [\n        {\n          \"name\": \"_j:_\",\n          \"value\": \"-@t+=\"\n        },\n        {\n          \"name\": \": .-@+.:\",\n          \"value\": \" _ @\"\n        }\n      ],\n      \"folder\": {\n        \"name\": \"<string>\"\n      },\n      \"subscription\": [\n        {\n          \"id\": \"<string>\"\n        },\n        {\n          \"id\": \"<string>\"\n        }\n      ]\n    },\n    {\n      \"id\": \"<string>\",\n      \"partNumber\": \"<string>\",\n      \"serialNumber\": \"<string>\",\n      \"macAddress\": \"Ed:27:11:3c:E4:Af\",\n      \"name\": \"<string>\",\n      \"type\": \"UNKNOWN\",\n      \"model\": \"<string>\",\n      \"archived\": \"<boolean>\",\n      \"application\": {\n        \"id\": \"<string>\",\n        \"instanceId\": \"<string>\",\n        \"customerId\": \"<string>\"\n      },\n      \"tags\": [\n        {\n          \"name\": \"\",\n          \"value\": \". :+= _-\"\n        },\n        {\n          \"name\": \" @u@+\",\n          \"value\": \"\"\n        }\n      ],\n      \"folder\": {\n        \"name\": \"<string>\"\n      },\n      \"subscription\": [\n        {\n          \"id\": \"<string>\"\n        },\n        {\n          \"id\": \"<string>\"\n        }\n      ]\n    }\n  ],\n  \"count\": \"<integer>\",\n  \"offset\": \"<integer>\",\n  \"total\": \"<integer>\"\n}"
														},
														{
															"name": "The operation is forbidden",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/devices/v1beta1/devices?filter=<string>&filter-tags=<string>&sort=<string>&select=<string>&limit=2000&offset=0",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"devices",
																		"v1beta1",
																		"devices"
																	],
																	"query": [
																		{
																			"key": "filter",
																			"value": "<string>",
																			"description": "Filter expressions consisting of simple comparison operations joined by logical operators"
																		},
																		{
																			"key": "filter-tags",
																			"value": "<string>",
																			"description": "Filter expressions consisting of simple comparison operations joined by logical operators to be applied on the assigned tags and/or their values"
																		},
																		{
																			"key": "sort",
																			"value": "<string>",
																			"description": "Comma separated list of sort expressions. Sort expression is a property name optionally followed by a direction indicator asc or desc. Default is ascending order"
																		},
																		{
																			"key": "select",
																			"value": "<string>",
																			"description": "Comma separated list of select properties to get in the response. Default All properties are returned"
																		},
																		{
																			"key": "limit",
																			"value": "2000",
																			"description": "Specifies the number of results to be returned, Default value is 2000"
																		},
																		{
																			"key": "offset",
																			"value": "0",
																			"description": "Specifies the zero-based resource offset to start the response from. Default value is 0"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Validation Error",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/devices/v1beta1/devices?filter=<string>&filter-tags=<string>&sort=<string>&select=<string>&limit=2000&offset=0",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"devices",
																		"v1beta1",
																		"devices"
																	],
																	"query": [
																		{
																			"key": "filter",
																			"value": "<string>",
																			"description": "Filter expressions consisting of simple comparison operations joined by logical operators"
																		},
																		{
																			"key": "filter-tags",
																			"value": "<string>",
																			"description": "Filter expressions consisting of simple comparison operations joined by logical operators to be applied on the assigned tags and/or their values"
																		},
																		{
																			"key": "sort",
																			"value": "<string>",
																			"description": "Comma separated list of sort expressions. Sort expression is a property name optionally followed by a direction indicator asc or desc. Default is ascending order"
																		},
																		{
																			"key": "select",
																			"value": "<string>",
																			"description": "Comma separated list of select properties to get in the response. Default All properties are returned"
																		},
																		{
																			"key": "limit",
																			"value": "2000",
																			"description": "Specifies the number of results to be returned, Default value is 2000"
																		},
																		{
																			"key": "offset",
																			"value": "0",
																			"description": "Specifies the zero-based resource offset to start the response from. Default value is 0"
																		}
																	]
																}
															},
															"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
															"code": 422,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ]\n}"
														}
													]
												},
												{
													"name": "Claim devices",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"compute\": [\n    {\n      \"partNumber\": \"<string>\",\n      \"serialNumber\": \"<string>\",\n      \"tags\": {\n        \"laborisd7a\": \"<string>\",\n        \"occaecat_b5b\": \"<string>\"\n      }\n    },\n    {\n      \"partNumber\": \"<string>\",\n      \"serialNumber\": \"<string>\",\n      \"tags\": {\n        \"tempor7_8\": \"<string>\",\n        \"nulla__45\": \"<string>\"\n      }\n    }\n  ],\n  \"network\": [\n    {\n      \"macAddress\": \"<string>\",\n      \"serialNumber\": \"<string>\",\n      \"tags\": {\n        \"in__\": \"<string>\",\n        \"dolore_09\": \"<string>\"\n      }\n    },\n    {\n      \"macAddress\": \"<string>\",\n      \"serialNumber\": \"<string>\",\n      \"tags\": {\n        \"sede\": \"<string>\"\n      }\n    }\n  ],\n  \"storage\": [\n    {\n      \"serialNumber\": \"<string>\",\n      \"subscriptionKey\": \"<string>\",\n      \"tags\": {\n        \"in_e2\": \"<string>\",\n        \"irure47\": \"<string>\"\n      }\n    },\n    {\n      \"serialNumber\": \"<string>\",\n      \"subscriptionKey\": \"<string>\",\n      \"tags\": {\n        \"ametfa\": \"<string>\",\n        \"culpa_1\": \"<string>\"\n      }\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/devices/v1beta1/devices",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"devices",
																"v1beta1",
																"devices"
															]
														},
														"description": "Asynchronous batch claim of devices. To use this API, you need to have the edit permission of device management.\nPlease note that this API will always return response 202 Accepted if the asynchronous request is submitted successfully, and this response alone does not provide sufficient proof that the request is processed successfully or the requested devices have all been successfully claimed. For status updates on the submitted requests, please refer to the GET Async Operation Resource for Devices API for more details."
													},
													"response": [
														{
															"name": "Accepted Response",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"compute\": [\n    {\n      \"partNumber\": \"<string>\",\n      \"serialNumber\": \"<string>\",\n      \"tags\": {\n        \"laborisd7a\": \"<string>\",\n        \"occaecat_b5b\": \"<string>\"\n      }\n    },\n    {\n      \"partNumber\": \"<string>\",\n      \"serialNumber\": \"<string>\",\n      \"tags\": {\n        \"tempor7_8\": \"<string>\",\n        \"nulla__45\": \"<string>\"\n      }\n    }\n  ],\n  \"network\": [\n    {\n      \"macAddress\": \"<string>\",\n      \"serialNumber\": \"<string>\",\n      \"tags\": {\n        \"in__\": \"<string>\",\n        \"dolore_09\": \"<string>\"\n      }\n    },\n    {\n      \"macAddress\": \"<string>\",\n      \"serialNumber\": \"<string>\",\n      \"tags\": {\n        \"sede\": \"<string>\"\n      }\n    }\n  ],\n  \"storage\": [\n    {\n      \"serialNumber\": \"<string>\",\n      \"subscriptionKey\": \"<string>\",\n      \"tags\": {\n        \"in_e2\": \"<string>\",\n        \"irure47\": \"<string>\"\n      }\n    },\n    {\n      \"serialNumber\": \"<string>\",\n      \"subscriptionKey\": \"<string>\",\n      \"tags\": {\n        \"ametfa\": \"<string>\",\n        \"culpa_1\": \"<string>\"\n      }\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/devices/v1beta1/devices",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"devices",
																		"v1beta1",
																		"devices"
																	]
																}
															},
															"status": "Accepted",
															"code": 202,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																},
																{
																	"key": "location",
																	"value": "",
																	"description": {
																		"content": "",
																		"type": "text/plain"
																	}
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"<integer>\",\n  \"status\": \"500 INTERNAL_SERVER_ERROR\",\n  \"transaction_id\": \"<string>\",\n  \"application\": {\n    \"id\": \"<string>\",\n    \"instanceId\": \"<string>\",\n    \"customerId\": \"<string>\"\n  },\n  \"subscription\": [\n    {\n      \"id\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\"\n    }\n  ]\n}"
														},
														{
															"name": "The operation is forbidden",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"compute\": [\n    {\n      \"partNumber\": \"<string>\",\n      \"serialNumber\": \"<string>\",\n      \"tags\": {\n        \"laborisd7a\": \"<string>\",\n        \"occaecat_b5b\": \"<string>\"\n      }\n    },\n    {\n      \"partNumber\": \"<string>\",\n      \"serialNumber\": \"<string>\",\n      \"tags\": {\n        \"tempor7_8\": \"<string>\",\n        \"nulla__45\": \"<string>\"\n      }\n    }\n  ],\n  \"network\": [\n    {\n      \"macAddress\": \"<string>\",\n      \"serialNumber\": \"<string>\",\n      \"tags\": {\n        \"in__\": \"<string>\",\n        \"dolore_09\": \"<string>\"\n      }\n    },\n    {\n      \"macAddress\": \"<string>\",\n      \"serialNumber\": \"<string>\",\n      \"tags\": {\n        \"sede\": \"<string>\"\n      }\n    }\n  ],\n  \"storage\": [\n    {\n      \"serialNumber\": \"<string>\",\n      \"subscriptionKey\": \"<string>\",\n      \"tags\": {\n        \"in_e2\": \"<string>\",\n        \"irure47\": \"<string>\"\n      }\n    },\n    {\n      \"serialNumber\": \"<string>\",\n      \"subscriptionKey\": \"<string>\",\n      \"tags\": {\n        \"ametfa\": \"<string>\",\n        \"culpa_1\": \"<string>\"\n      }\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/devices/v1beta1/devices",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"devices",
																		"v1beta1",
																		"devices"
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Validation Error",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"compute\": [\n    {\n      \"partNumber\": \"<string>\",\n      \"serialNumber\": \"<string>\",\n      \"tags\": {\n        \"laborisd7a\": \"<string>\",\n        \"occaecat_b5b\": \"<string>\"\n      }\n    },\n    {\n      \"partNumber\": \"<string>\",\n      \"serialNumber\": \"<string>\",\n      \"tags\": {\n        \"tempor7_8\": \"<string>\",\n        \"nulla__45\": \"<string>\"\n      }\n    }\n  ],\n  \"network\": [\n    {\n      \"macAddress\": \"<string>\",\n      \"serialNumber\": \"<string>\",\n      \"tags\": {\n        \"in__\": \"<string>\",\n        \"dolore_09\": \"<string>\"\n      }\n    },\n    {\n      \"macAddress\": \"<string>\",\n      \"serialNumber\": \"<string>\",\n      \"tags\": {\n        \"sede\": \"<string>\"\n      }\n    }\n  ],\n  \"storage\": [\n    {\n      \"serialNumber\": \"<string>\",\n      \"subscriptionKey\": \"<string>\",\n      \"tags\": {\n        \"in_e2\": \"<string>\",\n        \"irure47\": \"<string>\"\n      }\n    },\n    {\n      \"serialNumber\": \"<string>\",\n      \"subscriptionKey\": \"<string>\",\n      \"tags\": {\n        \"ametfa\": \"<string>\",\n        \"culpa_1\": \"<string>\"\n      }\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/devices/v1beta1/devices",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"devices",
																		"v1beta1",
																		"devices"
																	]
																}
															},
															"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
															"code": 422,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ]\n}"
														}
													]
												},
												{
													"name": "Claim an Aruba Instant Access Point device",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"var jsonData = JSON.parse(responseBody).transaction_id;\r",
																	"pm.collectionVariables.set(\"AsyncOpsTransaction_Id\",jsonData);\r",
																	"console.log(jsonData)"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n        \"compute\": [],\n        \"storage\": [],\n        \"network\": [{\n                        \"serialNumber\": \"<string>\",\n                        \"macAddress\": \"<string>\"\n                    }]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/devices/v1beta1/devices",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"devices",
																"v1beta1",
																"devices"
															]
														},
														"description": "Asynchronous batch claim of devices. To use this API, you need to have the edit permission of device management.\nPlease note that this API will always return response 202 Accepted if the asynchronous request is submitted successfully, and this response alone does not provide sufficient proof that the request is processed successfully or the requested devices have all been successfully claimed. For status updates on the submitted requests, please refer to the GET Async Operation Resource for Devices API for more details."
													},
													"response": [
														{
															"name": "Accepted Response",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"compute\": [\n    {\n      \"partNumber\": \"<string>\",\n      \"serialNumber\": \"<string>\",\n      \"tags\": {\n        \"laborisd7a\": \"<string>\",\n        \"occaecat_b5b\": \"<string>\"\n      }\n    },\n    {\n      \"partNumber\": \"<string>\",\n      \"serialNumber\": \"<string>\",\n      \"tags\": {\n        \"tempor7_8\": \"<string>\",\n        \"nulla__45\": \"<string>\"\n      }\n    }\n  ],\n  \"network\": [\n    {\n      \"macAddress\": \"<string>\",\n      \"serialNumber\": \"<string>\",\n      \"tags\": {\n        \"in__\": \"<string>\",\n        \"dolore_09\": \"<string>\"\n      }\n    },\n    {\n      \"macAddress\": \"<string>\",\n      \"serialNumber\": \"<string>\",\n      \"tags\": {\n        \"sede\": \"<string>\"\n      }\n    }\n  ],\n  \"storage\": [\n    {\n      \"serialNumber\": \"<string>\",\n      \"subscriptionKey\": \"<string>\",\n      \"tags\": {\n        \"in_e2\": \"<string>\",\n        \"irure47\": \"<string>\"\n      }\n    },\n    {\n      \"serialNumber\": \"<string>\",\n      \"subscriptionKey\": \"<string>\",\n      \"tags\": {\n        \"ametfa\": \"<string>\",\n        \"culpa_1\": \"<string>\"\n      }\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/devices/v1beta1/devices",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"devices",
																		"v1beta1",
																		"devices"
																	]
																}
															},
															"status": "Accepted",
															"code": 202,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																},
																{
																	"key": "location",
																	"value": "",
																	"description": {
																		"content": "",
																		"type": "text/plain"
																	}
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"<integer>\",\n  \"status\": \"500 INTERNAL_SERVER_ERROR\",\n  \"transaction_id\": \"<string>\",\n  \"application\": {\n    \"id\": \"<string>\",\n    \"instanceId\": \"<string>\",\n    \"customerId\": \"<string>\"\n  },\n  \"subscription\": [\n    {\n      \"id\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\"\n    }\n  ]\n}"
														},
														{
															"name": "The operation is forbidden",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"compute\": [\n    {\n      \"partNumber\": \"<string>\",\n      \"serialNumber\": \"<string>\",\n      \"tags\": {\n        \"laborisd7a\": \"<string>\",\n        \"occaecat_b5b\": \"<string>\"\n      }\n    },\n    {\n      \"partNumber\": \"<string>\",\n      \"serialNumber\": \"<string>\",\n      \"tags\": {\n        \"tempor7_8\": \"<string>\",\n        \"nulla__45\": \"<string>\"\n      }\n    }\n  ],\n  \"network\": [\n    {\n      \"macAddress\": \"<string>\",\n      \"serialNumber\": \"<string>\",\n      \"tags\": {\n        \"in__\": \"<string>\",\n        \"dolore_09\": \"<string>\"\n      }\n    },\n    {\n      \"macAddress\": \"<string>\",\n      \"serialNumber\": \"<string>\",\n      \"tags\": {\n        \"sede\": \"<string>\"\n      }\n    }\n  ],\n  \"storage\": [\n    {\n      \"serialNumber\": \"<string>\",\n      \"subscriptionKey\": \"<string>\",\n      \"tags\": {\n        \"in_e2\": \"<string>\",\n        \"irure47\": \"<string>\"\n      }\n    },\n    {\n      \"serialNumber\": \"<string>\",\n      \"subscriptionKey\": \"<string>\",\n      \"tags\": {\n        \"ametfa\": \"<string>\",\n        \"culpa_1\": \"<string>\"\n      }\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/devices/v1beta1/devices",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"devices",
																		"v1beta1",
																		"devices"
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Validation Error",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"compute\": [\n    {\n      \"partNumber\": \"<string>\",\n      \"serialNumber\": \"<string>\",\n      \"tags\": {\n        \"laborisd7a\": \"<string>\",\n        \"occaecat_b5b\": \"<string>\"\n      }\n    },\n    {\n      \"partNumber\": \"<string>\",\n      \"serialNumber\": \"<string>\",\n      \"tags\": {\n        \"tempor7_8\": \"<string>\",\n        \"nulla__45\": \"<string>\"\n      }\n    }\n  ],\n  \"network\": [\n    {\n      \"macAddress\": \"<string>\",\n      \"serialNumber\": \"<string>\",\n      \"tags\": {\n        \"in__\": \"<string>\",\n        \"dolore_09\": \"<string>\"\n      }\n    },\n    {\n      \"macAddress\": \"<string>\",\n      \"serialNumber\": \"<string>\",\n      \"tags\": {\n        \"sede\": \"<string>\"\n      }\n    }\n  ],\n  \"storage\": [\n    {\n      \"serialNumber\": \"<string>\",\n      \"subscriptionKey\": \"<string>\",\n      \"tags\": {\n        \"in_e2\": \"<string>\",\n        \"irure47\": \"<string>\"\n      }\n    },\n    {\n      \"serialNumber\": \"<string>\",\n      \"subscriptionKey\": \"<string>\",\n      \"tags\": {\n        \"ametfa\": \"<string>\",\n        \"culpa_1\": \"<string>\"\n      }\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/devices/v1beta1/devices",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"devices",
																		"v1beta1",
																		"devices"
																	]
																}
															},
															"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
															"code": 422,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ]\n}"
														}
													]
												},
												{
													"name": "Claim an Aruba Instant Access Point device with Tag",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"var jsonData = JSON.parse(responseBody).transaction_id;\r",
																	"pm.collectionVariables.set(\"AsyncOpsTransaction_Id\",jsonData);\r",
																	"console.log(jsonData)"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"compute\": [],\n    \"storage\": [],\n    \"network\": [\n        {\n            \"serialNumber\": \"<string>\",\n            \"macAddress\": \"<string>\",\n             \"tags\": {\n               \"Aruba Access Point\": \"Lab Building 2\"\n             }\n        }\n    ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/devices/v1beta1/devices",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"devices",
																"v1beta1",
																"devices"
															]
														},
														"description": "Asynchronous batch claim of devices. To use this API, you need to have the edit permission of device management.\nPlease note that this API will always return response 202 Accepted if the asynchronous request is submitted successfully, and this response alone does not provide sufficient proof that the request is processed successfully or the requested devices have all been successfully claimed. For status updates on the submitted requests, please refer to the GET Async Operation Resource for Devices API for more details."
													},
													"response": [
														{
															"name": "Accepted Response",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"compute\": [\n    {\n      \"partNumber\": \"<string>\",\n      \"serialNumber\": \"<string>\",\n      \"tags\": {\n        \"laborisd7a\": \"<string>\",\n        \"occaecat_b5b\": \"<string>\"\n      }\n    },\n    {\n      \"partNumber\": \"<string>\",\n      \"serialNumber\": \"<string>\",\n      \"tags\": {\n        \"tempor7_8\": \"<string>\",\n        \"nulla__45\": \"<string>\"\n      }\n    }\n  ],\n  \"network\": [\n    {\n      \"macAddress\": \"<string>\",\n      \"serialNumber\": \"<string>\",\n      \"tags\": {\n        \"in__\": \"<string>\",\n        \"dolore_09\": \"<string>\"\n      }\n    },\n    {\n      \"macAddress\": \"<string>\",\n      \"serialNumber\": \"<string>\",\n      \"tags\": {\n        \"sede\": \"<string>\"\n      }\n    }\n  ],\n  \"storage\": [\n    {\n      \"serialNumber\": \"<string>\",\n      \"subscriptionKey\": \"<string>\",\n      \"tags\": {\n        \"in_e2\": \"<string>\",\n        \"irure47\": \"<string>\"\n      }\n    },\n    {\n      \"serialNumber\": \"<string>\",\n      \"subscriptionKey\": \"<string>\",\n      \"tags\": {\n        \"ametfa\": \"<string>\",\n        \"culpa_1\": \"<string>\"\n      }\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/devices/v1beta1/devices",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"devices",
																		"v1beta1",
																		"devices"
																	]
																}
															},
															"status": "Accepted",
															"code": 202,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																},
																{
																	"key": "location",
																	"value": "",
																	"description": {
																		"content": "",
																		"type": "text/plain"
																	}
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"<integer>\",\n  \"status\": \"500 INTERNAL_SERVER_ERROR\",\n  \"transaction_id\": \"<string>\",\n  \"application\": {\n    \"id\": \"<string>\",\n    \"instanceId\": \"<string>\",\n    \"customerId\": \"<string>\"\n  },\n  \"subscription\": [\n    {\n      \"id\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\"\n    }\n  ]\n}"
														},
														{
															"name": "The operation is forbidden",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"compute\": [\n    {\n      \"partNumber\": \"<string>\",\n      \"serialNumber\": \"<string>\",\n      \"tags\": {\n        \"laborisd7a\": \"<string>\",\n        \"occaecat_b5b\": \"<string>\"\n      }\n    },\n    {\n      \"partNumber\": \"<string>\",\n      \"serialNumber\": \"<string>\",\n      \"tags\": {\n        \"tempor7_8\": \"<string>\",\n        \"nulla__45\": \"<string>\"\n      }\n    }\n  ],\n  \"network\": [\n    {\n      \"macAddress\": \"<string>\",\n      \"serialNumber\": \"<string>\",\n      \"tags\": {\n        \"in__\": \"<string>\",\n        \"dolore_09\": \"<string>\"\n      }\n    },\n    {\n      \"macAddress\": \"<string>\",\n      \"serialNumber\": \"<string>\",\n      \"tags\": {\n        \"sede\": \"<string>\"\n      }\n    }\n  ],\n  \"storage\": [\n    {\n      \"serialNumber\": \"<string>\",\n      \"subscriptionKey\": \"<string>\",\n      \"tags\": {\n        \"in_e2\": \"<string>\",\n        \"irure47\": \"<string>\"\n      }\n    },\n    {\n      \"serialNumber\": \"<string>\",\n      \"subscriptionKey\": \"<string>\",\n      \"tags\": {\n        \"ametfa\": \"<string>\",\n        \"culpa_1\": \"<string>\"\n      }\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/devices/v1beta1/devices",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"devices",
																		"v1beta1",
																		"devices"
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Validation Error",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"compute\": [\n    {\n      \"partNumber\": \"<string>\",\n      \"serialNumber\": \"<string>\",\n      \"tags\": {\n        \"laborisd7a\": \"<string>\",\n        \"occaecat_b5b\": \"<string>\"\n      }\n    },\n    {\n      \"partNumber\": \"<string>\",\n      \"serialNumber\": \"<string>\",\n      \"tags\": {\n        \"tempor7_8\": \"<string>\",\n        \"nulla__45\": \"<string>\"\n      }\n    }\n  ],\n  \"network\": [\n    {\n      \"macAddress\": \"<string>\",\n      \"serialNumber\": \"<string>\",\n      \"tags\": {\n        \"in__\": \"<string>\",\n        \"dolore_09\": \"<string>\"\n      }\n    },\n    {\n      \"macAddress\": \"<string>\",\n      \"serialNumber\": \"<string>\",\n      \"tags\": {\n        \"sede\": \"<string>\"\n      }\n    }\n  ],\n  \"storage\": [\n    {\n      \"serialNumber\": \"<string>\",\n      \"subscriptionKey\": \"<string>\",\n      \"tags\": {\n        \"in_e2\": \"<string>\",\n        \"irure47\": \"<string>\"\n      }\n    },\n    {\n      \"serialNumber\": \"<string>\",\n      \"subscriptionKey\": \"<string>\",\n      \"tags\": {\n        \"ametfa\": \"<string>\",\n        \"culpa_1\": \"<string>\"\n      }\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/devices/v1beta1/devices",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"devices",
																		"v1beta1",
																		"devices"
																	]
																}
															},
															"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
															"code": 422,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ]\n}"
														}
													]
												},
												{
													"name": "Update multiple device's information",
													"request": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"subscription\": [\n    {\n      \"id\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\"\n    }\n  ],\n  \"application\": {\n    \"id\": \"<string>\",\n    \"region\": \"<string>\"\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/devices/v1beta1/devices?id=<string>&id=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"devices",
																"v1beta1",
																"devices"
															],
															"query": [
																{
																	"key": "id",
																	"value": "<string>",
																	"description": "(Required) Array of device resource ids. Accept at most 5 devices per request."
																},
																{
																	"key": "id",
																	"value": "<string>",
																	"description": "(Required) Array of device resource ids. Accept at most 5 devices per request."
																}
															]
														},
														"description": "Update information of devices by resourceIds, supporting assigning/un-assigning of applications or assigning/re-assigning/un-assigning of subscriptions. To use this API, you need to have the edit permission of device management.\nPlease note that this API will always return response 202 Accepted if the asynchronous request is submitted successfully, and this response alone does not provide sufficient proof that the request is processed successfully or the requested devices have all been successfully assigned/un-assigned with application/subscriptions. For status updates on the submitted requests, please refer to the GET Async Operation Resource for Devices API for more details."
													},
													"response": [
														{
															"name": "Accepted Response",
															"originalRequest": {
																"method": "PATCH",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"subscription\": [\n    {\n      \"id\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\"\n    }\n  ],\n  \"application\": {\n    \"id\": \"<string>\",\n    \"region\": \"<string>\"\n  }\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/devices/v1beta1/devices?id=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"devices",
																		"v1beta1",
																		"devices"
																	],
																	"query": [
																		{
																			"key": "id",
																			"value": "<string>",
																			"description": "(Required) Array of device resource ids. Accept at most 5 devices per request."
																		}
																	]
																}
															},
															"status": "Accepted",
															"code": 202,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																},
																{
																	"key": "location",
																	"value": "",
																	"description": {
																		"content": "",
																		"type": "text/plain"
																	}
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"<integer>\",\n  \"status\": \"500 INTERNAL_SERVER_ERROR\",\n  \"transaction_id\": \"<string>\",\n  \"application\": {\n    \"id\": \"<string>\",\n    \"instanceId\": \"<string>\",\n    \"customerId\": \"<string>\"\n  },\n  \"subscription\": [\n    {\n      \"id\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\"\n    }\n  ]\n}"
														},
														{
															"name": "Validation Error",
															"originalRequest": {
																"method": "PATCH",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"subscription\": [\n    {\n      \"id\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\"\n    }\n  ],\n  \"application\": {\n    \"id\": \"<string>\",\n    \"region\": \"<string>\"\n  }\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/devices/v1beta1/devices?id=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"devices",
																		"v1beta1",
																		"devices"
																	],
																	"query": [
																		{
																			"key": "id",
																			"value": "<string>",
																			"description": "(Required) Array of device resource ids. Accept at most 5 devices per request."
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\"\n}"
														},
														{
															"name": "The operation is forbidden",
															"originalRequest": {
																"method": "PATCH",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"subscription\": [\n    {\n      \"id\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\"\n    }\n  ],\n  \"application\": {\n    \"id\": \"<string>\",\n    \"region\": \"<string>\"\n  }\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/devices/v1beta1/devices?id=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"devices",
																		"v1beta1",
																		"devices"
																	],
																	"query": [
																		{
																			"key": "id",
																			"value": "<string>",
																			"description": "(Required) Array of device resource ids. Accept at most 5 devices per request."
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Not Found",
															"originalRequest": {
																"method": "PATCH",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"subscription\": [\n    {\n      \"id\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\"\n    }\n  ],\n  \"application\": {\n    \"id\": \"<string>\",\n    \"region\": \"<string>\"\n  }\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/devices/v1beta1/devices?id=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"devices",
																		"v1beta1",
																		"devices"
																	],
																	"query": [
																		{
																			"key": "id",
																			"value": "<string>",
																			"description": "(Required) Array of device resource ids. Accept at most 5 devices per request."
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\"\n}"
														}
													]
												},
												{
													"name": "Update multiple device's information - unassign App from device",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"var jsonData = JSON.parse(responseBody).transaction_id;\r",
																	"pm.collectionVariables.set(\"AsyncOpsTransaction_Id\",jsonData);\r",
																	"console.log(jsonData)"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"application\": {\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/devices/v1beta1/devices?id={{DeviceId}}",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"devices",
																"v1beta1",
																"devices"
															],
															"query": [
																{
																	"key": "id",
																	"value": "{{DeviceId}}",
																	"description": "(Required) Array of device resource ids. Accept at most 5 devices per request."
																},
																{
																	"key": "id",
																	"value": "<string>",
																	"description": "(Required) Array of device resource ids. Accept at most 5 devices per request.",
																	"disabled": true
																}
															]
														},
														"description": "Update information of devices by resourceIds, supporting assigning/un-assigning of applications or assigning/re-assigning/un-assigning of subscriptions. To use this API, you need to have the edit permission of device management.\nPlease note that this API will always return response 202 Accepted if the asynchronous request is submitted successfully, and this response alone does not provide sufficient proof that the request is processed successfully or the requested devices have all been successfully assigned/un-assigned with application/subscriptions. For status updates on the submitted requests, please refer to the GET Async Operation Resource for Devices API for more details."
													},
													"response": [
														{
															"name": "Accepted Response",
															"originalRequest": {
																"method": "PATCH",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"subscription\": [\n    {\n      \"id\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\"\n    }\n  ],\n  \"application\": {\n    \"id\": \"<string>\",\n    \"region\": \"<string>\"\n  }\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/devices/v1beta1/devices?id=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"devices",
																		"v1beta1",
																		"devices"
																	],
																	"query": [
																		{
																			"key": "id",
																			"value": "<string>",
																			"description": "(Required) Array of device resource ids. Accept at most 5 devices per request."
																		}
																	]
																}
															},
															"status": "Accepted",
															"code": 202,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																},
																{
																	"key": "location",
																	"value": "",
																	"description": {
																		"content": "",
																		"type": "text/plain"
																	}
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"<integer>\",\n  \"status\": \"500 INTERNAL_SERVER_ERROR\",\n  \"transaction_id\": \"<string>\",\n  \"application\": {\n    \"id\": \"<string>\",\n    \"instanceId\": \"<string>\",\n    \"customerId\": \"<string>\"\n  },\n  \"subscription\": [\n    {\n      \"id\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\"\n    }\n  ]\n}"
														},
														{
															"name": "Validation Error",
															"originalRequest": {
																"method": "PATCH",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"subscription\": [\n    {\n      \"id\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\"\n    }\n  ],\n  \"application\": {\n    \"id\": \"<string>\",\n    \"region\": \"<string>\"\n  }\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/devices/v1beta1/devices?id=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"devices",
																		"v1beta1",
																		"devices"
																	],
																	"query": [
																		{
																			"key": "id",
																			"value": "<string>",
																			"description": "(Required) Array of device resource ids. Accept at most 5 devices per request."
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\"\n}"
														},
														{
															"name": "The operation is forbidden",
															"originalRequest": {
																"method": "PATCH",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"subscription\": [\n    {\n      \"id\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\"\n    }\n  ],\n  \"application\": {\n    \"id\": \"<string>\",\n    \"region\": \"<string>\"\n  }\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/devices/v1beta1/devices?id=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"devices",
																		"v1beta1",
																		"devices"
																	],
																	"query": [
																		{
																			"key": "id",
																			"value": "<string>",
																			"description": "(Required) Array of device resource ids. Accept at most 5 devices per request."
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Not Found",
															"originalRequest": {
																"method": "PATCH",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"subscription\": [\n    {\n      \"id\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\"\n    }\n  ],\n  \"application\": {\n    \"id\": \"<string>\",\n    \"region\": \"<string>\"\n  }\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/devices/v1beta1/devices?id=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"devices",
																		"v1beta1",
																		"devices"
																	],
																	"query": [
																		{
																			"key": "id",
																			"value": "<string>",
																			"description": "(Required) Array of device resource ids. Accept at most 5 devices per request."
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\"\n}"
														}
													]
												},
												{
													"name": "Update multiple device's information - Assign App To device",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"var jsonData = JSON.parse(responseBody).transaction_id;\r",
																	"pm.collectionVariables.set(\"AsyncOpsTransaction_Id\",jsonData);\r",
																	"console.log(jsonData)"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"application\": {\n    \"id\": \"{{Aruba_Application_Id}}\",\n    \"region\": \"eu-central\"\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/devices/v1beta1/devices?id={{DeviceId}}",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"devices",
																"v1beta1",
																"devices"
															],
															"query": [
																{
																	"key": "id",
																	"value": "{{DeviceId}}",
																	"description": "(Required) Array of device resource ids. Accept at most 5 devices per request."
																},
																{
																	"key": "id",
																	"value": "<string>",
																	"description": "(Required) Array of device resource ids. Accept at most 5 devices per request.",
																	"disabled": true
																}
															]
														},
														"description": "Update information of devices by resourceIds, supporting assigning/un-assigning of applications or assigning/re-assigning/un-assigning of subscriptions. To use this API, you need to have the edit permission of device management.\nPlease note that this API will always return response 202 Accepted if the asynchronous request is submitted successfully, and this response alone does not provide sufficient proof that the request is processed successfully or the requested devices have all been successfully assigned/un-assigned with application/subscriptions. For status updates on the submitted requests, please refer to the GET Async Operation Resource for Devices API for more details."
													},
													"response": [
														{
															"name": "Accepted Response",
															"originalRequest": {
																"method": "PATCH",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"subscription\": [\n    {\n      \"id\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\"\n    }\n  ],\n  \"application\": {\n    \"id\": \"<string>\",\n    \"region\": \"<string>\"\n  }\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/devices/v1beta1/devices?id=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"devices",
																		"v1beta1",
																		"devices"
																	],
																	"query": [
																		{
																			"key": "id",
																			"value": "<string>",
																			"description": "(Required) Array of device resource ids. Accept at most 5 devices per request."
																		}
																	]
																}
															},
															"status": "Accepted",
															"code": 202,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																},
																{
																	"key": "location",
																	"value": "",
																	"description": {
																		"content": "",
																		"type": "text/plain"
																	}
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"<integer>\",\n  \"status\": \"500 INTERNAL_SERVER_ERROR\",\n  \"transaction_id\": \"<string>\",\n  \"application\": {\n    \"id\": \"<string>\",\n    \"instanceId\": \"<string>\",\n    \"customerId\": \"<string>\"\n  },\n  \"subscription\": [\n    {\n      \"id\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\"\n    }\n  ]\n}"
														},
														{
															"name": "Validation Error",
															"originalRequest": {
																"method": "PATCH",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"subscription\": [\n    {\n      \"id\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\"\n    }\n  ],\n  \"application\": {\n    \"id\": \"<string>\",\n    \"region\": \"<string>\"\n  }\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/devices/v1beta1/devices?id=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"devices",
																		"v1beta1",
																		"devices"
																	],
																	"query": [
																		{
																			"key": "id",
																			"value": "<string>",
																			"description": "(Required) Array of device resource ids. Accept at most 5 devices per request."
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\"\n}"
														},
														{
															"name": "The operation is forbidden",
															"originalRequest": {
																"method": "PATCH",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"subscription\": [\n    {\n      \"id\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\"\n    }\n  ],\n  \"application\": {\n    \"id\": \"<string>\",\n    \"region\": \"<string>\"\n  }\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/devices/v1beta1/devices?id=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"devices",
																		"v1beta1",
																		"devices"
																	],
																	"query": [
																		{
																			"key": "id",
																			"value": "<string>",
																			"description": "(Required) Array of device resource ids. Accept at most 5 devices per request."
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Not Found",
															"originalRequest": {
																"method": "PATCH",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"subscription\": [\n    {\n      \"id\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\"\n    }\n  ],\n  \"application\": {\n    \"id\": \"<string>\",\n    \"region\": \"<string>\"\n  }\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/devices/v1beta1/devices?id=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"devices",
																		"v1beta1",
																		"devices"
																	],
																	"query": [
																		{
																			"key": "id",
																			"value": "<string>",
																			"description": "(Required) Array of device resource ids. Accept at most 5 devices per request."
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\"\n}"
														}
													]
												},
												{
													"name": "Update multiple device's information - Assign Subscription key To device",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"var jsonData = JSON.parse(responseBody).transaction_id;\r",
																	"pm.collectionVariables.set(\"AsyncOpsTransaction_Id\",jsonData);\r",
																	"console.log(jsonData)"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"subscription\": [\n    {\n      \"id\": \"{{SubscriptionKeyId}}\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/devices/v1beta1/devices?id={{DeviceId}}",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"devices",
																"v1beta1",
																"devices"
															],
															"query": [
																{
																	"key": "id",
																	"value": "{{DeviceId}}",
																	"description": "(Required) Array of device resource ids. Accept at most 5 devices per request."
																},
																{
																	"key": "id",
																	"value": "<string>",
																	"description": "(Required) Array of device resource ids. Accept at most 5 devices per request.",
																	"disabled": true
																}
															]
														},
														"description": "Update information of devices by resourceIds, supporting assigning/un-assigning of applications or assigning/re-assigning/un-assigning of subscriptions. To use this API, you need to have the edit permission of device management.\nPlease note that this API will always return response 202 Accepted if the asynchronous request is submitted successfully, and this response alone does not provide sufficient proof that the request is processed successfully or the requested devices have all been successfully assigned/un-assigned with application/subscriptions. For status updates on the submitted requests, please refer to the GET Async Operation Resource for Devices API for more details."
													},
													"response": [
														{
															"name": "Accepted Response",
															"originalRequest": {
																"method": "PATCH",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"subscription\": [\n    {\n      \"id\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\"\n    }\n  ],\n  \"application\": {\n    \"id\": \"<string>\",\n    \"region\": \"<string>\"\n  }\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/devices/v1beta1/devices?id=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"devices",
																		"v1beta1",
																		"devices"
																	],
																	"query": [
																		{
																			"key": "id",
																			"value": "<string>",
																			"description": "(Required) Array of device resource ids. Accept at most 5 devices per request."
																		}
																	]
																}
															},
															"status": "Accepted",
															"code": 202,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																},
																{
																	"key": "location",
																	"value": "",
																	"description": {
																		"content": "",
																		"type": "text/plain"
																	}
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"<integer>\",\n  \"status\": \"500 INTERNAL_SERVER_ERROR\",\n  \"transaction_id\": \"<string>\",\n  \"application\": {\n    \"id\": \"<string>\",\n    \"instanceId\": \"<string>\",\n    \"customerId\": \"<string>\"\n  },\n  \"subscription\": [\n    {\n      \"id\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\"\n    }\n  ]\n}"
														},
														{
															"name": "Validation Error",
															"originalRequest": {
																"method": "PATCH",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"subscription\": [\n    {\n      \"id\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\"\n    }\n  ],\n  \"application\": {\n    \"id\": \"<string>\",\n    \"region\": \"<string>\"\n  }\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/devices/v1beta1/devices?id=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"devices",
																		"v1beta1",
																		"devices"
																	],
																	"query": [
																		{
																			"key": "id",
																			"value": "<string>",
																			"description": "(Required) Array of device resource ids. Accept at most 5 devices per request."
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\"\n}"
														},
														{
															"name": "The operation is forbidden",
															"originalRequest": {
																"method": "PATCH",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"subscription\": [\n    {\n      \"id\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\"\n    }\n  ],\n  \"application\": {\n    \"id\": \"<string>\",\n    \"region\": \"<string>\"\n  }\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/devices/v1beta1/devices?id=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"devices",
																		"v1beta1",
																		"devices"
																	],
																	"query": [
																		{
																			"key": "id",
																			"value": "<string>",
																			"description": "(Required) Array of device resource ids. Accept at most 5 devices per request."
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Not Found",
															"originalRequest": {
																"method": "PATCH",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"subscription\": [\n    {\n      \"id\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\"\n    }\n  ],\n  \"application\": {\n    \"id\": \"<string>\",\n    \"region\": \"<string>\"\n  }\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/devices/v1beta1/devices?id=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"devices",
																		"v1beta1",
																		"devices"
																	],
																	"query": [
																		{
																			"key": "id",
																			"value": "<string>",
																			"description": "(Required) Array of device resource ids. Accept at most 5 devices per request."
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\"\n}"
														}
													]
												},
												{
													"name": "Update multiple device's information - Unassign Subscription key from a device",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"var jsonData = JSON.parse(responseBody).transaction_id;\r",
																	"pm.collectionVariables.set(\"AsyncOpsTransaction_Id\",jsonData);\r",
																	"console.log(jsonData)"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"subscription\": [\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/devices/v1beta1/devices?id={{DeviceId}}",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"devices",
																"v1beta1",
																"devices"
															],
															"query": [
																{
																	"key": "id",
																	"value": "{{DeviceId}}",
																	"description": "(Required) Array of device resource ids. Accept at most 5 devices per request."
																},
																{
																	"key": "id",
																	"value": "<string>",
																	"description": "(Required) Array of device resource ids. Accept at most 5 devices per request.",
																	"disabled": true
																}
															]
														},
														"description": "Update information of devices by resourceIds, supporting assigning/un-assigning of applications or assigning/re-assigning/un-assigning of subscriptions. To use this API, you need to have the edit permission of device management.\nPlease note that this API will always return response 202 Accepted if the asynchronous request is submitted successfully, and this response alone does not provide sufficient proof that the request is processed successfully or the requested devices have all been successfully assigned/un-assigned with application/subscriptions. For status updates on the submitted requests, please refer to the GET Async Operation Resource for Devices API for more details."
													},
													"response": [
														{
															"name": "Accepted Response",
															"originalRequest": {
																"method": "PATCH",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"subscription\": [\n    {\n      \"id\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\"\n    }\n  ],\n  \"application\": {\n    \"id\": \"<string>\",\n    \"region\": \"<string>\"\n  }\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/devices/v1beta1/devices?id=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"devices",
																		"v1beta1",
																		"devices"
																	],
																	"query": [
																		{
																			"key": "id",
																			"value": "<string>",
																			"description": "(Required) Array of device resource ids. Accept at most 5 devices per request."
																		}
																	]
																}
															},
															"status": "Accepted",
															"code": 202,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																},
																{
																	"key": "location",
																	"value": "",
																	"description": {
																		"content": "",
																		"type": "text/plain"
																	}
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"<integer>\",\n  \"status\": \"500 INTERNAL_SERVER_ERROR\",\n  \"transaction_id\": \"<string>\",\n  \"application\": {\n    \"id\": \"<string>\",\n    \"instanceId\": \"<string>\",\n    \"customerId\": \"<string>\"\n  },\n  \"subscription\": [\n    {\n      \"id\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\"\n    }\n  ]\n}"
														},
														{
															"name": "Validation Error",
															"originalRequest": {
																"method": "PATCH",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"subscription\": [\n    {\n      \"id\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\"\n    }\n  ],\n  \"application\": {\n    \"id\": \"<string>\",\n    \"region\": \"<string>\"\n  }\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/devices/v1beta1/devices?id=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"devices",
																		"v1beta1",
																		"devices"
																	],
																	"query": [
																		{
																			"key": "id",
																			"value": "<string>",
																			"description": "(Required) Array of device resource ids. Accept at most 5 devices per request."
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\"\n}"
														},
														{
															"name": "The operation is forbidden",
															"originalRequest": {
																"method": "PATCH",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"subscription\": [\n    {\n      \"id\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\"\n    }\n  ],\n  \"application\": {\n    \"id\": \"<string>\",\n    \"region\": \"<string>\"\n  }\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/devices/v1beta1/devices?id=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"devices",
																		"v1beta1",
																		"devices"
																	],
																	"query": [
																		{
																			"key": "id",
																			"value": "<string>",
																			"description": "(Required) Array of device resource ids. Accept at most 5 devices per request."
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Not Found",
															"originalRequest": {
																"method": "PATCH",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"subscription\": [\n    {\n      \"id\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\"\n    }\n  ],\n  \"application\": {\n    \"id\": \"<string>\",\n    \"region\": \"<string>\"\n  }\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/devices/v1beta1/devices?id=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"devices",
																		"v1beta1",
																		"devices"
																	],
																	"query": [
																		{
																			"key": "id",
																			"value": "<string>",
																			"description": "(Required) Array of device resource ids. Accept at most 5 devices per request."
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\"\n}"
														}
													]
												}
											]
										}
									]
								}
							]
						},
						{
							"name": "subscriptions",
							"item": [
								{
									"name": "v1beta1",
									"item": [
										{
											"name": "subscriptions",
											"item": [
												{
													"name": "async-operations",
													"item": [
														{
															"name": "{id}",
															"item": [
																{
																	"name": "Get async operation resource for subscriptions",
																	"request": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/subscriptions/v1beta1/subscriptions/async-operations/:id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"subscriptions",
																				"v1beta1",
																				"subscriptions",
																				"async-operations",
																				":id"
																			],
																			"variable": [
																				{
																					"key": "id",
																					"value": "{{AsyncOpsTransaction_Id}}",
																					"description": "(Required) The async operation resource id retrieved from the location header of the asynchronous API response"
																				}
																			]
																		},
																		"description": "Get async operation resource of subscriptions for a given id. If the async operation resource id represents an asynchronous request that consists of multiple subscriptions, a breakdown of succeeded subscriptions and failed subscriptions, if there are any, will be returned as the response. In this case, the subscription key will be used to represent each subscription. To use this API, you need to have the view permission of device management."
																	},
																	"response": [
																		{
																			"name": "Successful Response",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: bearer",
																						"key": "Authorization",
																						"value": "Bearer <token>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/subscriptions/v1beta1/subscriptions/async-operations/:id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"subscriptions",
																						"v1beta1",
																						"subscriptions",
																						"async-operations",
																						":id"
																					],
																					"variable": [
																						{
																							"key": "id"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"status\": \"TIMEDOUT\",\n  \"startedAt\": \"<dateTime>\",\n  \"endedAt\": \"<dateTime>\",\n  \"progressPercent\": \"<integer>\",\n  \"suggestedPollingIntervalSeconds\": \"<integer>\",\n  \"timeoutMinutes\": \"<integer>\",\n  \"result\": {},\n  \"resultType\": \"<string>\"\n}"
																		},
																		{
																			"name": "Not Found",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: bearer",
																						"key": "Authorization",
																						"value": "Bearer <token>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/subscriptions/v1beta1/subscriptions/async-operations/:id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"subscriptions",
																						"v1beta1",
																						"subscriptions",
																						"async-operations",
																						":id"
																					],
																					"variable": [
																						{
																							"key": "id"
																						}
																					]
																				}
																			},
																			"status": "Not Found",
																			"code": 404,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"error_code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		}
																	]
																}
															]
														}
													]
												},
												{
													"name": "Claim subscriptions",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"subscriptions\": [\n    {\n      \"key\": \"<string>\"\n    },\n    {\n      \"key\": \"<string>\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/subscriptions/v1beta1/subscriptions",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"subscriptions",
																"v1beta1",
																"subscriptions"
															]
														},
														"description": "Asynchronous batch claim of subscriptions. To use this API, you need to have the edit permission of device management.\nPlease note that this API will always return response 202 Accepted if the asynchronous request is submitted successfully, and this response alone does not provide sufficient proof that the request is processed successfully or the requested subscriptions have all been successfully claimed. For status updates on the submitted requests, please refer to the GET Async Operation Resource for Subscriptions API for more details."
													},
													"response": [
														{
															"name": "Accepted Response",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"subscriptions\": [\n    {\n      \"key\": \"<string>\"\n    },\n    {\n      \"key\": \"<string>\"\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/subscriptions/v1beta1/subscriptions",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"subscriptions",
																		"v1beta1",
																		"subscriptions"
																	]
																}
															},
															"status": "Accepted",
															"code": 202,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																},
																{
																	"key": "location",
																	"value": "",
																	"description": {
																		"content": "",
																		"type": "text/plain"
																	}
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"<integer>\",\n  \"status\": \"414 URI_TOO_LONG\",\n  \"transaction_id\": \"<string>\",\n  \"application\": {\n    \"id\": \"<string>\",\n    \"instanceId\": \"<string>\",\n    \"customerId\": \"<string>\"\n  },\n  \"subscription\": [\n    {\n      \"id\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\"\n    }\n  ]\n}"
														},
														{
															"name": "The operation is forbidden",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"subscriptions\": [\n    {\n      \"key\": \"<string>\"\n    },\n    {\n      \"key\": \"<string>\"\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/subscriptions/v1beta1/subscriptions",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"subscriptions",
																		"v1beta1",
																		"subscriptions"
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Validation Error",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"subscriptions\": [\n    {\n      \"key\": \"<string>\"\n    },\n    {\n      \"key\": \"<string>\"\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/subscriptions/v1beta1/subscriptions",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"subscriptions",
																		"v1beta1",
																		"subscriptions"
																	]
																}
															},
															"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
															"code": 422,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ]\n}"
														}
													]
												},
												{
													"name": "Claim subscriptions Key for AP device",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"subscriptions\": [\n    {\n      \"key\": \"<String>\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/subscriptions/v1beta1/subscriptions",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"subscriptions",
																"v1beta1",
																"subscriptions"
															]
														},
														"description": "Asynchronous batch claim of subscriptions. To use this API, you need to have the edit permission of device management.\nPlease note that this API will always return response 202 Accepted if the asynchronous request is submitted successfully, and this response alone does not provide sufficient proof that the request is processed successfully or the requested subscriptions have all been successfully claimed. For status updates on the submitted requests, please refer to the GET Async Operation Resource for Subscriptions API for more details."
													},
													"response": [
														{
															"name": "Accepted Response",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"subscriptions\": [\n    {\n      \"key\": \"<string>\"\n    },\n    {\n      \"key\": \"<string>\"\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/subscriptions/v1beta1/subscriptions",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"subscriptions",
																		"v1beta1",
																		"subscriptions"
																	]
																}
															},
															"status": "Accepted",
															"code": 202,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																},
																{
																	"key": "location",
																	"value": "",
																	"description": {
																		"content": "",
																		"type": "text/plain"
																	}
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"<integer>\",\n  \"status\": \"414 URI_TOO_LONG\",\n  \"transaction_id\": \"<string>\",\n  \"application\": {\n    \"id\": \"<string>\",\n    \"instanceId\": \"<string>\",\n    \"customerId\": \"<string>\"\n  },\n  \"subscription\": [\n    {\n      \"id\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\"\n    }\n  ]\n}"
														},
														{
															"name": "The operation is forbidden",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"subscriptions\": [\n    {\n      \"key\": \"<string>\"\n    },\n    {\n      \"key\": \"<string>\"\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/subscriptions/v1beta1/subscriptions",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"subscriptions",
																		"v1beta1",
																		"subscriptions"
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Validation Error",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"subscriptions\": [\n    {\n      \"key\": \"<string>\"\n    },\n    {\n      \"key\": \"<string>\"\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/subscriptions/v1beta1/subscriptions",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"subscriptions",
																		"v1beta1",
																		"subscriptions"
																	]
																}
															},
															"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
															"code": 422,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ]\n}"
														}
													]
												}
											]
										}
									]
								},
								{
									"name": "v1alpha1",
									"item": [
										{
											"name": "subscriptions",
											"item": [
												{
													"name": "Get subscription information",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"var jsonData = JSON.parse(responseBody).items[0].id;\r",
																	"pm.collectionVariables.set(\"SubscriptionKeyId\",jsonData);\r",
																	"console.log(jsonData)"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/subscriptions/v1alpha1/subscriptions?filter=key eq '<subscriptionKey>'",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"subscriptions",
																"v1alpha1",
																"subscriptions"
															],
															"query": [
																{
																	"key": "filter",
																	"value": "key eq '<subscriptionKey>'",
																	"description": "Filter expressions consisting of simple comparison operations joined by logical operators"
																},
																{
																	"key": "filter-tags",
																	"value": "<string>",
																	"description": "Filter expressions consisting of simple comparison operations joined by logical operators to be applied on the assigned tags and/or their values",
																	"disabled": true
																},
																{
																	"key": "sort",
																	"value": "<string>",
																	"description": "Comma separated list of sort expressions. Sort expression is a property name optionally followed by a direction indicator asc or desc. Default is ascending order",
																	"disabled": true
																},
																{
																	"key": "select",
																	"value": "<string>",
																	"description": "Comma separated list of select properties to get in the response. Default All properties are returned",
																	"disabled": true
																},
																{
																	"key": "select",
																	"value": "<string>",
																	"description": "Comma separated list of select properties to get in the response. Default All properties are returned",
																	"disabled": true
																},
																{
																	"key": "limit",
																	"value": "2000",
																	"description": "Specifies the number of results to be returned, Default value is 2000",
																	"disabled": true
																},
																{
																	"key": "offset",
																	"value": "0",
																	"description": "Specifies the zero-based resource offset to start the response from. Default value is 0",
																	"disabled": true
																}
															]
														},
														"description": "Get subscription details by filter. To use this API, you need to have the view permission of device management."
													},
													"response": [
														{
															"name": "Successful Response",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/subscriptions/v1alpha1/subscriptions?filter=<string>&filter-tags=<string>&sort=<string>&select=<string>&limit=2000&offset=0",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"subscriptions",
																		"v1alpha1",
																		"subscriptions"
																	],
																	"query": [
																		{
																			"key": "filter",
																			"value": "<string>",
																			"description": "Filter expressions consisting of simple comparison operations joined by logical operators"
																		},
																		{
																			"key": "filter-tags",
																			"value": "<string>",
																			"description": "Filter expressions consisting of simple comparison operations joined by logical operators to be applied on the assigned tags and/or their values"
																		},
																		{
																			"key": "sort",
																			"value": "<string>",
																			"description": "Comma separated list of sort expressions. Sort expression is a property name optionally followed by a direction indicator asc or desc. Default is ascending order"
																		},
																		{
																			"key": "select",
																			"value": "<string>",
																			"description": "Comma separated list of select properties to get in the response. Default All properties are returned"
																		},
																		{
																			"key": "limit",
																			"value": "2000",
																			"description": "Specifies the number of results to be returned, Default value is 2000"
																		},
																		{
																			"key": "offset",
																			"value": "0",
																			"description": "Specifies the zero-based resource offset to start the response from. Default value is 0"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"items\": [\n    {\n      \"id\": \"<string>\",\n      \"key\": \"<string>\",\n      \"quantity\": \"<string>\",\n      \"evaluationType\": \"ALPHA\",\n      \"productSku\": \"<string>\",\n      \"productDescription\": \"<string>\",\n      \"quote\": \"<string>\",\n      \"po\": \"<string>\",\n      \"contract\": \"<string>\",\n      \"endUserName\": \"<string>\",\n      \"orderClass\": \"<string>\",\n      \"aasType\": \"IAAS\",\n      \"appointment\": {\n        \"subscriptionStart\": \"<string>\",\n        \"subscriptionEnd\": \"<string>\",\n        \"delayedActivation\": \"<string>\"\n      }\n    },\n    {\n      \"id\": \"<string>\",\n      \"key\": \"<string>\",\n      \"quantity\": \"<string>\",\n      \"evaluationType\": \"EVAL\",\n      \"productSku\": \"<string>\",\n      \"productDescription\": \"<string>\",\n      \"quote\": \"<string>\",\n      \"po\": \"<string>\",\n      \"contract\": \"<string>\",\n      \"endUserName\": \"<string>\",\n      \"orderClass\": \"<string>\",\n      \"aasType\": \"IAAS\",\n      \"appointment\": {\n        \"subscriptionStart\": \"<string>\",\n        \"subscriptionEnd\": \"<string>\",\n        \"delayedActivation\": \"<string>\"\n      }\n    }\n  ],\n  \"count\": \"<integer>\",\n  \"offset\": \"<integer>\",\n  \"total\": \"<integer>\"\n}"
														},
														{
															"name": "The operation is forbidden",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/subscriptions/v1alpha1/subscriptions?filter=<string>&filter-tags=<string>&sort=<string>&select=<string>&limit=2000&offset=0",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"subscriptions",
																		"v1alpha1",
																		"subscriptions"
																	],
																	"query": [
																		{
																			"key": "filter",
																			"value": "<string>",
																			"description": "Filter expressions consisting of simple comparison operations joined by logical operators"
																		},
																		{
																			"key": "filter-tags",
																			"value": "<string>",
																			"description": "Filter expressions consisting of simple comparison operations joined by logical operators to be applied on the assigned tags and/or their values"
																		},
																		{
																			"key": "sort",
																			"value": "<string>",
																			"description": "Comma separated list of sort expressions. Sort expression is a property name optionally followed by a direction indicator asc or desc. Default is ascending order"
																		},
																		{
																			"key": "select",
																			"value": "<string>",
																			"description": "Comma separated list of select properties to get in the response. Default All properties are returned"
																		},
																		{
																			"key": "limit",
																			"value": "2000",
																			"description": "Specifies the number of results to be returned, Default value is 2000"
																		},
																		{
																			"key": "offset",
																			"value": "0",
																			"description": "Specifies the zero-based resource offset to start the response from. Default value is 0"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Validation Error",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/subscriptions/v1alpha1/subscriptions?filter=<string>&filter-tags=<string>&sort=<string>&select=<string>&limit=2000&offset=0",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"subscriptions",
																		"v1alpha1",
																		"subscriptions"
																	],
																	"query": [
																		{
																			"key": "filter",
																			"value": "<string>",
																			"description": "Filter expressions consisting of simple comparison operations joined by logical operators"
																		},
																		{
																			"key": "filter-tags",
																			"value": "<string>",
																			"description": "Filter expressions consisting of simple comparison operations joined by logical operators to be applied on the assigned tags and/or their values"
																		},
																		{
																			"key": "sort",
																			"value": "<string>",
																			"description": "Comma separated list of sort expressions. Sort expression is a property name optionally followed by a direction indicator asc or desc. Default is ascending order"
																		},
																		{
																			"key": "select",
																			"value": "<string>",
																			"description": "Comma separated list of select properties to get in the response. Default All properties are returned"
																		},
																		{
																			"key": "limit",
																			"value": "2000",
																			"description": "Specifies the number of results to be returned, Default value is 2000"
																		},
																		{
																			"key": "offset",
																			"value": "0",
																			"description": "Specifies the zero-based resource offset to start the response from. Default value is 0"
																		}
																	]
																}
															},
															"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
															"code": 422,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ]\n}"
														}
													]
												}
											]
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "Tracking GLP Workspace",
			"item": [
				{
					"name": "Step5-audit-log",
					"item": [
						{
							"name": "audit-log/v1beta1/logs",
							"item": [
								{
									"name": "Get all audit logs of an application or user.",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/audit-log/v1beta1/logs?filter=<string>&select=<string>&all=<string>&limit=50&offset=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"audit-log",
												"v1beta1",
												"logs"
											],
											"query": [
												{
													"key": "filter",
													"value": "<string>"
												},
												{
													"key": "select",
													"value": "<string>",
													"description": "Use the `select` query parameter to restrict the number of properties included in the audit log response.\nThe supported select parameters:\n * additionalInfo\n * createdAt\n * category\n * hasDetails\n * workspace/workspaceName\n * description\n * user/username\n"
												},
												{
													"key": "all",
													"value": "<string>",
													"description": "Provide a free-text search to perform a comprehensive search across all properties for audit logs."
												},
												{
													"key": "limit",
													"value": "50",
													"description": "How many items to return at one time (max 2000)"
												},
												{
													"key": "offset",
													"value": "0",
													"description": "Specifies the zero-based resource offset to start the response from."
												}
											]
										},
										"description": "The audit logs can be filtered using a variety of parameters. Queries should be separated by `and` and can utilize `eq`, `contains`, and `in` operators to construct the final query. Each query should follow the format:\n* key eq 'value' for equality operation.\n* contains(key, 'value') for contains operation.\n* key in ('value1', 'value2') for in operation.\n\nThe supported filter parameters.\n* createdAt\n* category\n* description\n* ipAddress\n* target\n* user/username\n* workspace/workspaceName\n* application/id\n* region\n\nExamples:\n1. Get audit logs starting from 24/07/2023 4:20 AM UTC\n`filter=createdAt ge '2023-07-24T04:21:22.00Z'`\n\n2. Get audit logs with category *User Management* and *User Activity*\n`filter=category in ('User Management', 'User Activity') and workspace/workspaceName eq 'HPE'`\n\n3. Get application specific audit logs\n`filter=region eq 'us-west' and application/id eq '12312-123123-123123-123121'`\n"
									},
									"response": [
										{
											"name": "All audit logs.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/audit-log/v1beta1/logs?filter=<string>&select=<string>&all=<string>&limit=50&offset=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"audit-log",
														"v1beta1",
														"logs"
													],
													"query": [
														{
															"key": "filter",
															"value": "<string>"
														},
														{
															"key": "select",
															"value": "<string>"
														},
														{
															"key": "all",
															"value": "<string>"
														},
														{
															"key": "limit",
															"value": "50"
														},
														{
															"key": "offset",
															"value": "0"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"count\": \"<integer>\",\n  \"items\": [\n    {\n      \"id\": \"<string>\",\n      \"type\": \"/audit-log/logs\",\n      \"application\": {\n        \"id\": \"<string>\"\n      },\n      \"region\": \"<string>\",\n      \"user\": {\n        \"username\": \"<string>\"\n      },\n      \"category\": \"<string>\",\n      \"description\": \"<string>\",\n      \"workspace\": {\n        \"id\": \"<string>\",\n        \"workspaceName\": \"<string>\"\n      },\n      \"createdAt\": \"<dateTime>\",\n      \"updatedAt\": \"<dateTime>\",\n      \"generation\": \"<integer>\",\n      \"additionalInfo\": \"<object>\",\n      \"hasDetails\": \"<boolean>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"type\": \"/audit-log/logs\",\n      \"application\": {\n        \"id\": \"<string>\"\n      },\n      \"region\": \"<string>\",\n      \"user\": {\n        \"username\": \"<string>\"\n      },\n      \"category\": \"<string>\",\n      \"description\": \"<string>\",\n      \"workspace\": {\n        \"id\": \"<string>\",\n        \"workspaceName\": \"<string>\"\n      },\n      \"createdAt\": \"<dateTime>\",\n      \"updatedAt\": \"<dateTime>\",\n      \"generation\": \"<integer>\",\n      \"additionalInfo\": \"<object>\",\n      \"hasDetails\": \"<boolean>\"\n    }\n  ],\n  \"total\": \"<integer>\",\n  \"offset\": \"<integer>\",\n  \"remainingRecords\": \"<boolean>\"\n}"
										},
										{
											"name": "Bad request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/audit-log/v1beta1/logs?filter=<string>&select=<string>&all=<string>&limit=50&offset=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"audit-log",
														"v1beta1",
														"logs"
													],
													"query": [
														{
															"key": "filter",
															"value": "<string>"
														},
														{
															"key": "select",
															"value": "<string>"
														},
														{
															"key": "all",
															"value": "<string>"
														},
														{
															"key": "limit",
															"value": "50"
														},
														{
															"key": "offset",
															"value": "0"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorDetails\": [\n    {\n      \"type\": \"hpe.greenlake.bad_request\",\n      \"issues\": [\n        {\n          \"source\": \"<string>\",\n          \"subject\": \"<string>\",\n          \"description\": \"<string>\"\n        },\n        {\n          \"source\": \"<string>\",\n          \"subject\": \"<string>\",\n          \"description\": \"<string>\"\n        }\n      ]\n    },\n    {\n      \"type\": \"hpe.greenlake.bad_request\",\n      \"issues\": [\n        {\n          \"source\": \"<string>\",\n          \"subject\": \"<string>\",\n          \"description\": \"<string>\"\n        },\n        {\n          \"source\": \"<string>\",\n          \"subject\": \"<string>\",\n          \"description\": \"<string>\"\n        }\n      ]\n    }\n  ]\n}"
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/audit-log/v1beta1/logs?filter=<string>&select=<string>&all=<string>&limit=50&offset=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"audit-log",
														"v1beta1",
														"logs"
													],
													"query": [
														{
															"key": "filter",
															"value": "<string>"
														},
														{
															"key": "select",
															"value": "<string>"
														},
														{
															"key": "all",
															"value": "<string>"
														},
														{
															"key": "limit",
															"value": "50"
														},
														{
															"key": "offset",
															"value": "0"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorDetails\": [\n    {\n      \"type\": \"<string>\",\n      \"source\": \"<string>\",\n      \"metadata\": \"<object>\"\n    },\n    {\n      \"type\": \"<string>\",\n      \"source\": \"<string>\",\n      \"metadata\": \"<object>\"\n    }\n  ]\n}"
										},
										{
											"name": "Forbidden",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/audit-log/v1beta1/logs?filter=<string>&select=<string>&all=<string>&limit=50&offset=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"audit-log",
														"v1beta1",
														"logs"
													],
													"query": [
														{
															"key": "filter",
															"value": "<string>"
														},
														{
															"key": "select",
															"value": "<string>"
														},
														{
															"key": "all",
															"value": "<string>"
														},
														{
															"key": "limit",
															"value": "50"
														},
														{
															"key": "offset",
															"value": "0"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\"\n}"
										},
										{
											"name": "Internal Server Error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/audit-log/v1beta1/logs?filter=<string>&select=<string>&all=<string>&limit=50&offset=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"audit-log",
														"v1beta1",
														"logs"
													],
													"query": [
														{
															"key": "filter",
															"value": "<string>"
														},
														{
															"key": "select",
															"value": "<string>"
														},
														{
															"key": "all",
															"value": "<string>"
														},
														{
															"key": "limit",
															"value": "50"
														},
														{
															"key": "offset",
															"value": "0"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorDetails\": [\n    {\n      \"type\": \"<string>\",\n      \"retryAfterSeconds\": \"<integer>\"\n    },\n    {\n      \"type\": \"<string>\",\n      \"retryAfterSeconds\": \"<integer>\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Get all audit logs of an application",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/audit-log/v1beta1/logs?filter=application/id eq '{{GLP_Application_Id}}'&filter=createdAt ge '2023-12-14T11:00:00.00000Z'&limit=50&offset=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"audit-log",
												"v1beta1",
												"logs"
											],
											"query": [
												{
													"key": "filter",
													"value": "application/id eq '{{GLP_Application_Id}}'"
												},
												{
													"key": "filter",
													"value": "createdAt ge '2023-12-14T11:00:00.00000Z'"
												},
												{
													"key": "select",
													"value": "<string>",
													"description": "Use the `select` query parameter to restrict the number of properties included in the audit log response.\nThe supported select parameters:\n * additionalInfo\n * createdAt\n * category\n * hasDetails\n * workspace/workspaceName\n * description\n * user/username\n",
													"disabled": true
												},
												{
													"key": "all",
													"value": "<string>",
													"description": "Provide a free-text search to perform a comprehensive search across all properties for audit logs.",
													"disabled": true
												},
												{
													"key": "limit",
													"value": "50",
													"description": "How many items to return at one time (max 2000)"
												},
												{
													"key": "offset",
													"value": "0",
													"description": "Specifies the zero-based resource offset to start the response from."
												}
											]
										},
										"description": "The audit logs can be filtered using a variety of parameters. Queries should be separated by `and` and can utilize `eq`, `contains`, and `in` operators to construct the final query. Each query should follow the format:\n* key eq 'value' for equality operation.\n* contains(key, 'value') for contains operation.\n* key in ('value1', 'value2') for in operation.\n\nThe supported filter parameters.\n* createdAt\n* category\n* description\n* ipAddress\n* target\n* user/username\n* workspace/workspaceName\n* application/id\n* region\n\nExamples:\n1. Get audit logs starting from 24/07/2023 4:20 AM UTC\n`filter=createdAt ge '2023-07-24T04:21:22.00Z'`\n\n2. Get audit logs with category *User Management* and *User Activity*\n`filter=category in ('User Management', 'User Activity') and workspace/workspaceName eq 'HPE'`\n\n3. Get application specific audit logs\n`filter=region eq 'us-west' and application/id eq '12312-123123-123123-123121'`\n"
									},
									"response": [
										{
											"name": "All audit logs.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/audit-log/v1beta1/logs?filter=<string>&select=<string>&all=<string>&limit=50&offset=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"audit-log",
														"v1beta1",
														"logs"
													],
													"query": [
														{
															"key": "filter",
															"value": "<string>"
														},
														{
															"key": "select",
															"value": "<string>"
														},
														{
															"key": "all",
															"value": "<string>"
														},
														{
															"key": "limit",
															"value": "50"
														},
														{
															"key": "offset",
															"value": "0"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"count\": \"<integer>\",\n  \"items\": [\n    {\n      \"id\": \"<string>\",\n      \"type\": \"/audit-log/logs\",\n      \"application\": {\n        \"id\": \"<string>\"\n      },\n      \"region\": \"<string>\",\n      \"user\": {\n        \"username\": \"<string>\"\n      },\n      \"category\": \"<string>\",\n      \"description\": \"<string>\",\n      \"workspace\": {\n        \"id\": \"<string>\",\n        \"workspaceName\": \"<string>\"\n      },\n      \"createdAt\": \"<dateTime>\",\n      \"updatedAt\": \"<dateTime>\",\n      \"generation\": \"<integer>\",\n      \"additionalInfo\": \"<object>\",\n      \"hasDetails\": \"<boolean>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"type\": \"/audit-log/logs\",\n      \"application\": {\n        \"id\": \"<string>\"\n      },\n      \"region\": \"<string>\",\n      \"user\": {\n        \"username\": \"<string>\"\n      },\n      \"category\": \"<string>\",\n      \"description\": \"<string>\",\n      \"workspace\": {\n        \"id\": \"<string>\",\n        \"workspaceName\": \"<string>\"\n      },\n      \"createdAt\": \"<dateTime>\",\n      \"updatedAt\": \"<dateTime>\",\n      \"generation\": \"<integer>\",\n      \"additionalInfo\": \"<object>\",\n      \"hasDetails\": \"<boolean>\"\n    }\n  ],\n  \"total\": \"<integer>\",\n  \"offset\": \"<integer>\",\n  \"remainingRecords\": \"<boolean>\"\n}"
										},
										{
											"name": "Bad request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/audit-log/v1beta1/logs?filter=<string>&select=<string>&all=<string>&limit=50&offset=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"audit-log",
														"v1beta1",
														"logs"
													],
													"query": [
														{
															"key": "filter",
															"value": "<string>"
														},
														{
															"key": "select",
															"value": "<string>"
														},
														{
															"key": "all",
															"value": "<string>"
														},
														{
															"key": "limit",
															"value": "50"
														},
														{
															"key": "offset",
															"value": "0"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorDetails\": [\n    {\n      \"type\": \"hpe.greenlake.bad_request\",\n      \"issues\": [\n        {\n          \"source\": \"<string>\",\n          \"subject\": \"<string>\",\n          \"description\": \"<string>\"\n        },\n        {\n          \"source\": \"<string>\",\n          \"subject\": \"<string>\",\n          \"description\": \"<string>\"\n        }\n      ]\n    },\n    {\n      \"type\": \"hpe.greenlake.bad_request\",\n      \"issues\": [\n        {\n          \"source\": \"<string>\",\n          \"subject\": \"<string>\",\n          \"description\": \"<string>\"\n        },\n        {\n          \"source\": \"<string>\",\n          \"subject\": \"<string>\",\n          \"description\": \"<string>\"\n        }\n      ]\n    }\n  ]\n}"
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/audit-log/v1beta1/logs?filter=<string>&select=<string>&all=<string>&limit=50&offset=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"audit-log",
														"v1beta1",
														"logs"
													],
													"query": [
														{
															"key": "filter",
															"value": "<string>"
														},
														{
															"key": "select",
															"value": "<string>"
														},
														{
															"key": "all",
															"value": "<string>"
														},
														{
															"key": "limit",
															"value": "50"
														},
														{
															"key": "offset",
															"value": "0"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorDetails\": [\n    {\n      \"type\": \"<string>\",\n      \"source\": \"<string>\",\n      \"metadata\": \"<object>\"\n    },\n    {\n      \"type\": \"<string>\",\n      \"source\": \"<string>\",\n      \"metadata\": \"<object>\"\n    }\n  ]\n}"
										},
										{
											"name": "Forbidden",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/audit-log/v1beta1/logs?filter=<string>&select=<string>&all=<string>&limit=50&offset=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"audit-log",
														"v1beta1",
														"logs"
													],
													"query": [
														{
															"key": "filter",
															"value": "<string>"
														},
														{
															"key": "select",
															"value": "<string>"
														},
														{
															"key": "all",
															"value": "<string>"
														},
														{
															"key": "limit",
															"value": "50"
														},
														{
															"key": "offset",
															"value": "0"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\"\n}"
										},
										{
											"name": "Internal Server Error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/audit-log/v1beta1/logs?filter=<string>&select=<string>&all=<string>&limit=50&offset=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"audit-log",
														"v1beta1",
														"logs"
													],
													"query": [
														{
															"key": "filter",
															"value": "<string>"
														},
														{
															"key": "select",
															"value": "<string>"
														},
														{
															"key": "all",
															"value": "<string>"
														},
														{
															"key": "limit",
															"value": "50"
														},
														{
															"key": "offset",
															"value": "0"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorDetails\": [\n    {\n      \"type\": \"<string>\",\n      \"retryAfterSeconds\": \"<integer>\"\n    },\n    {\n      \"type\": \"<string>\",\n      \"retryAfterSeconds\": \"<integer>\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Get all audit logs of a user",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/audit-log/v1beta1/logs?filter=username eq 'userEmail@example.com'&filter=createdAt ge '2023-12-14T11:00:00.00000Z'&limit=300",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"audit-log",
												"v1beta1",
												"logs"
											],
											"query": [
												{
													"key": "filter",
													"value": "username eq 'userEmail@example.com'"
												},
												{
													"key": "filter",
													"value": "createdAt ge '2023-12-14T11:00:00.00000Z'"
												},
												{
													"key": "filter",
													"value": "category in ('User Management', 'User and Customer Account Management')",
													"disabled": true
												},
												{
													"key": "select",
													"value": "<string>",
													"description": "Use the `select` query parameter to restrict the number of properties included in the audit log response.\nThe supported select parameters:\n * additionalInfo\n * createdAt\n * category\n * hasDetails\n * workspace/workspaceName\n * description\n * user/username\n",
													"disabled": true
												},
												{
													"key": "all",
													"value": "<string>",
													"description": "Provide a free-text search to perform a comprehensive search across all properties for audit logs.",
													"disabled": true
												},
												{
													"key": "limit",
													"value": "300",
													"description": "How many items to return at one time (max 2000)"
												},
												{
													"key": "offset",
													"value": "0",
													"description": "Specifies the zero-based resource offset to start the response from.",
													"disabled": true
												}
											]
										},
										"description": "The audit logs can be filtered using a variety of parameters. Queries should be separated by `and` and can utilize `eq`, `contains`, and `in` operators to construct the final query. Each query should follow the format:\n* key eq 'value' for equality operation.\n* contains(key, 'value') for contains operation.\n* key in ('value1', 'value2') for in operation.\n\nThe supported filter parameters.\n* createdAt\n* category\n* description\n* ipAddress\n* target\n* user/username\n* workspace/workspaceName\n* application/id\n* region\n\nExamples:\n1. Get audit logs starting from 24/07/2023 4:20 AM UTC\n`filter=createdAt ge '2023-07-24T04:21:22.00Z'`\n\n2. Get audit logs with category *User Management* and *User Activity*\n`filter=category in ('User Management', 'User Activity') and workspace/workspaceName eq 'HPE'`\n\n3. Get application specific audit logs\n`filter=region eq 'us-west' and application/id eq '12312-123123-123123-123121'`\n"
									},
									"response": [
										{
											"name": "All audit logs.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/audit-log/v1beta1/logs?filter=<string>&select=<string>&all=<string>&limit=50&offset=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"audit-log",
														"v1beta1",
														"logs"
													],
													"query": [
														{
															"key": "filter",
															"value": "<string>"
														},
														{
															"key": "select",
															"value": "<string>"
														},
														{
															"key": "all",
															"value": "<string>"
														},
														{
															"key": "limit",
															"value": "50"
														},
														{
															"key": "offset",
															"value": "0"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"count\": \"<integer>\",\n  \"items\": [\n    {\n      \"id\": \"<string>\",\n      \"type\": \"/audit-log/logs\",\n      \"application\": {\n        \"id\": \"<string>\"\n      },\n      \"region\": \"<string>\",\n      \"user\": {\n        \"username\": \"<string>\"\n      },\n      \"category\": \"<string>\",\n      \"description\": \"<string>\",\n      \"workspace\": {\n        \"id\": \"<string>\",\n        \"workspaceName\": \"<string>\"\n      },\n      \"createdAt\": \"<dateTime>\",\n      \"updatedAt\": \"<dateTime>\",\n      \"generation\": \"<integer>\",\n      \"additionalInfo\": \"<object>\",\n      \"hasDetails\": \"<boolean>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"type\": \"/audit-log/logs\",\n      \"application\": {\n        \"id\": \"<string>\"\n      },\n      \"region\": \"<string>\",\n      \"user\": {\n        \"username\": \"<string>\"\n      },\n      \"category\": \"<string>\",\n      \"description\": \"<string>\",\n      \"workspace\": {\n        \"id\": \"<string>\",\n        \"workspaceName\": \"<string>\"\n      },\n      \"createdAt\": \"<dateTime>\",\n      \"updatedAt\": \"<dateTime>\",\n      \"generation\": \"<integer>\",\n      \"additionalInfo\": \"<object>\",\n      \"hasDetails\": \"<boolean>\"\n    }\n  ],\n  \"total\": \"<integer>\",\n  \"offset\": \"<integer>\",\n  \"remainingRecords\": \"<boolean>\"\n}"
										},
										{
											"name": "Bad request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/audit-log/v1beta1/logs?filter=<string>&select=<string>&all=<string>&limit=50&offset=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"audit-log",
														"v1beta1",
														"logs"
													],
													"query": [
														{
															"key": "filter",
															"value": "<string>"
														},
														{
															"key": "select",
															"value": "<string>"
														},
														{
															"key": "all",
															"value": "<string>"
														},
														{
															"key": "limit",
															"value": "50"
														},
														{
															"key": "offset",
															"value": "0"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorDetails\": [\n    {\n      \"type\": \"hpe.greenlake.bad_request\",\n      \"issues\": [\n        {\n          \"source\": \"<string>\",\n          \"subject\": \"<string>\",\n          \"description\": \"<string>\"\n        },\n        {\n          \"source\": \"<string>\",\n          \"subject\": \"<string>\",\n          \"description\": \"<string>\"\n        }\n      ]\n    },\n    {\n      \"type\": \"hpe.greenlake.bad_request\",\n      \"issues\": [\n        {\n          \"source\": \"<string>\",\n          \"subject\": \"<string>\",\n          \"description\": \"<string>\"\n        },\n        {\n          \"source\": \"<string>\",\n          \"subject\": \"<string>\",\n          \"description\": \"<string>\"\n        }\n      ]\n    }\n  ]\n}"
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/audit-log/v1beta1/logs?filter=<string>&select=<string>&all=<string>&limit=50&offset=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"audit-log",
														"v1beta1",
														"logs"
													],
													"query": [
														{
															"key": "filter",
															"value": "<string>"
														},
														{
															"key": "select",
															"value": "<string>"
														},
														{
															"key": "all",
															"value": "<string>"
														},
														{
															"key": "limit",
															"value": "50"
														},
														{
															"key": "offset",
															"value": "0"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorDetails\": [\n    {\n      \"type\": \"<string>\",\n      \"source\": \"<string>\",\n      \"metadata\": \"<object>\"\n    },\n    {\n      \"type\": \"<string>\",\n      \"source\": \"<string>\",\n      \"metadata\": \"<object>\"\n    }\n  ]\n}"
										},
										{
											"name": "Forbidden",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/audit-log/v1beta1/logs?filter=<string>&select=<string>&all=<string>&limit=50&offset=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"audit-log",
														"v1beta1",
														"logs"
													],
													"query": [
														{
															"key": "filter",
															"value": "<string>"
														},
														{
															"key": "select",
															"value": "<string>"
														},
														{
															"key": "all",
															"value": "<string>"
														},
														{
															"key": "limit",
															"value": "50"
														},
														{
															"key": "offset",
															"value": "0"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\"\n}"
										},
										{
											"name": "Internal Server Error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/audit-log/v1beta1/logs?filter=<string>&select=<string>&all=<string>&limit=50&offset=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"audit-log",
														"v1beta1",
														"logs"
													],
													"query": [
														{
															"key": "filter",
															"value": "<string>"
														},
														{
															"key": "select",
															"value": "<string>"
														},
														{
															"key": "all",
															"value": "<string>"
														},
														{
															"key": "limit",
															"value": "50"
														},
														{
															"key": "offset",
															"value": "0"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorDetails\": [\n    {\n      \"type\": \"<string>\",\n      \"retryAfterSeconds\": \"<integer>\"\n    },\n    {\n      \"type\": \"<string>\",\n      \"retryAfterSeconds\": \"<integer>\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Get additional detail of an audit log.",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/audit-log/v1beta1/logs/:id/detail",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"audit-log",
												"v1beta1",
												"logs",
												":id",
												"detail"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) Provide the ID of the audit log record to fetch the additional details."
												}
											]
										}
									},
									"response": [
										{
											"name": "Audit log details.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/audit-log/v1beta1/logs/:id/detail",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"audit-log",
														"v1beta1",
														"logs",
														":id",
														"detail"
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"description": "(Required) Provide the ID of the audit log record to fetch the additional details."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"<uuid>\",\n  \"type\": \"/audit-log/logs\",\n  \"header\": \"<string>\",\n  \"body\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/audit-log/v1beta1/logs/:id/detail",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"audit-log",
														"v1beta1",
														"logs",
														":id",
														"detail"
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"description": "(Required) Provide the ID of the audit log record to fetch the additional details."
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorDetails\": [\n    {\n      \"type\": \"<string>\",\n      \"source\": \"<string>\",\n      \"metadata\": \"<object>\"\n    },\n    {\n      \"type\": \"<string>\",\n      \"source\": \"<string>\",\n      \"metadata\": \"<object>\"\n    }\n  ]\n}"
										},
										{
											"name": "Forbidden",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/audit-log/v1beta1/logs/:id/detail",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"audit-log",
														"v1beta1",
														"logs",
														":id",
														"detail"
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"description": "(Required) Provide the ID of the audit log record to fetch the additional details."
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\"\n}"
										},
										{
											"name": "Record Not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/audit-log/v1beta1/logs/:id/detail",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"audit-log",
														"v1beta1",
														"logs",
														":id",
														"detail"
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"description": "(Required) Provide the ID of the audit log record to fetch the additional details."
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorDetails\": [\n    {\n      \"type\": \"<string>\",\n      \"source\": \"<string>\",\n      \"metadata\": \"<object>\"\n    },\n    {\n      \"type\": \"<string>\",\n      \"source\": \"<string>\",\n      \"metadata\": \"<object>\"\n    }\n  ]\n}"
										},
										{
											"name": "Internal Server Error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/audit-log/v1beta1/logs/:id/detail",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"audit-log",
														"v1beta1",
														"logs",
														":id",
														"detail"
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"description": "(Required) Provide the ID of the audit log record to fetch the additional details."
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorDetails\": [\n    {\n      \"type\": \"<string>\",\n      \"retryAfterSeconds\": \"<integer>\"\n    },\n    {\n      \"type\": \"<string>\",\n      \"retryAfterSeconds\": \"<integer>\"\n    }\n  ]\n}"
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "Step6-Wellness",
					"item": [
						{
							"name": "wellness/v2beta1",
							"item": [
								{
									"name": "events",
									"item": [
										{
											"name": "{id}",
											"item": [
												{
													"name": "Event with specific event ID.",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/wellness/v2beta1/events/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"wellness",
																"v2beta1",
																"events",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "{{WellnessEventId}}",
																	"description": "(Required) Event ID"
																}
															]
														},
														"description": "Fetches a wellness event based on a given event ID."
													},
													"response": [
														{
															"name": "OK",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/wellness/v2beta1/events/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"wellness",
																		"v2beta1",
																		"events",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "id",
																			"value": "0908777a-788f-45da-afb8-295c626e4d14",
																			"description": "(Required) Event ID"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"id\": \"<uuid>\",\n  \"type\": \"<string>\",\n  \"createdAt\": \"<string>\",\n  \"updatedAt\": \"<string>\",\n  \"generation\": \"<integer>\",\n  \"uuid\": \"<string>\",\n  \"version\": \"<integer>\",\n  \"automationUuid\": \"<string>\",\n  \"origin\": \"<string>\",\n  \"domain\": \"<string>\",\n  \"title\": \"<string>\",\n  \"claimTokens\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"body\": \"<object>\",\n  \"tenant\": \"<object>\",\n  \"asset\": \"<object>\",\n  \"object\": \"<object>\",\n  \"relatedObjects\": [\n    {\n      \"urn\": {},\n      \"relationShip\": \"<string>\"\n    },\n    {\n      \"urn\": {},\n      \"relationShip\": \"<string>\"\n    }\n  ],\n  \"condition\": \"<object>\",\n  \"status\": \"<object>\",\n  \"causes\": [\n    {\n      \"titleBody\": {\n        \"title\": \"<string>\",\n        \"body\": \"<object>\"\n      },\n      \"confidence\": \"<integer>\",\n      \"visibility\": \"<string>\",\n      \"recommendation\": \"<string>\",\n      \"recommendations\": [\n        {\n          \"titleBody\": {\n            \"title\": \"<string>\",\n            \"body\": \"<object>\"\n          },\n          \"confidence\": \"<integer>\",\n          \"visibility\": \"<string>\",\n          \"href\": \"<string>\"\n        },\n        {\n          \"titleBody\": {\n            \"title\": \"<string>\",\n            \"body\": \"<object>\"\n          },\n          \"confidence\": \"<integer>\",\n          \"visibility\": \"<string>\",\n          \"href\": \"<string>\"\n        }\n      ]\n    },\n    {\n      \"titleBody\": {\n        \"title\": \"<string>\",\n        \"body\": \"<object>\"\n      },\n      \"confidence\": \"<integer>\",\n      \"visibility\": \"<string>\",\n      \"recommendation\": \"<string>\",\n      \"recommendations\": [\n        {\n          \"titleBody\": {\n            \"title\": \"<string>\",\n            \"body\": \"<object>\"\n          },\n          \"confidence\": \"<integer>\",\n          \"visibility\": \"<string>\",\n          \"href\": \"<string>\"\n        },\n        {\n          \"titleBody\": {\n            \"title\": \"<string>\",\n            \"body\": \"<object>\"\n          },\n          \"confidence\": \"<integer>\",\n          \"visibility\": \"<string>\",\n          \"href\": \"<string>\"\n        }\n      ]\n    }\n  ],\n  \"escalation\": [\n    {\n      \"trigger\": \"<string>\",\n      \"user\": \"<string>\",\n      \"timeStamp\": \"<string>\",\n      \"lastUpdatedAt\": \"<string>\",\n      \"crm\": \"<string>\",\n      \"caseId\": \"<string>\",\n      \"caseNumber\": \"<string>\",\n      \"href\": \"<object>\",\n      \"caseStatus\": \"<string>\",\n      \"caseAction\": \"<string>\",\n      \"caseHistory\": [\n        {\n          \"action\": \"<string>\",\n          \"timeStamp\": \"<string>\"\n        },\n        {\n          \"action\": \"<string>\",\n          \"timeStamp\": \"<string>\"\n        }\n      ],\n      \"wellnessModelUuid\": \"<string>\"\n    },\n    {\n      \"trigger\": \"<string>\",\n      \"user\": \"<string>\",\n      \"timeStamp\": \"<string>\",\n      \"lastUpdatedAt\": \"<string>\",\n      \"crm\": \"<string>\",\n      \"caseId\": \"<string>\",\n      \"caseNumber\": \"<string>\",\n      \"href\": \"<object>\",\n      \"caseStatus\": \"<string>\",\n      \"caseAction\": \"<string>\",\n      \"caseHistory\": [\n        {\n          \"action\": \"<string>\",\n          \"timeStamp\": \"<string>\"\n        },\n        {\n          \"action\": \"<string>\",\n          \"timeStamp\": \"<string>\"\n        }\n      ],\n      \"wellnessModelUuid\": \"<string>\"\n    }\n  ],\n  \"domainData\": \"<object>\",\n  \"correlated\": \"<boolean>\",\n  \"correlatedParent\": \"<string>\",\n  \"correlatedChildren\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"userTags\": {\n    \"Ut_e29\": {\n      \"read\": \"<boolean>\",\n      \"archive\": \"<boolean>\",\n      \"flag\": \"<boolean>\"\n    }\n  },\n  \"glcpattributes\": \"<object>\",\n  \"flag\": \"<object>\",\n  \"read\": \"<object>\",\n  \"archive\": \"<object>\"\n}"
														},
														{
															"name": "Client Error",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/wellness/v2beta1/events/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"wellness",
																		"v2beta1",
																		"events",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "id",
																			"value": "0908777a-788f-45da-afb8-295c626e4d14",
																			"description": "(Required) Event ID"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": 400\n}"
														},
														{
															"name": "Bad Request",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/wellness/v2beta1/events/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"wellness",
																		"v2beta1",
																		"events",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "id",
																			"value": "0908777a-788f-45da-afb8-295c626e4d14",
																			"description": "(Required) Event ID"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": 404\n}"
														},
														{
															"name": "Internal Server Error",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/wellness/v2beta1/events/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"wellness",
																		"v2beta1",
																		"events",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "id",
																			"value": "0908777a-788f-45da-afb8-295c626e4d14",
																			"description": "(Required) Event ID"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": 500\n}"
														}
													]
												},
												{
													"name": "Update a wellness event with tags for a given event ID",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"tags\": {\n    \"flag\": \"<uri-reference>\",\n    \"read\": \"<uri-reference>\",\n    \"archive\": \"<uri-reference>\"\n  }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/wellness/v2beta1/events/:id/tags",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"wellness",
																"v2beta1",
																"events",
																":id",
																"tags"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "{{WellnessEventId}}",
																	"description": "(Required) Event ID"
																}
															]
														},
														"description": "Update wellness event with tags. The tags can be flag, read, or archive."
													},
													"response": [
														{
															"name": "OK",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"tags\": {\n    \"flag\": \"<uri-reference>\",\n    \"read\": \"<uri-reference>\",\n    \"archive\": \"<uri-reference>\"\n  }\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/wellness/v2beta1/events/:id/tags",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"wellness",
																		"v2beta1",
																		"events",
																		":id",
																		"tags"
																	],
																	"variable": [
																		{
																			"key": "id",
																			"value": "0908777a-788f-45da-afb8-295c626e4d14",
																			"description": "(Required) Event ID"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"success\": \"<boolean>\",\n  \"httpStatusCode\": 200\n}"
														},
														{
															"name": "Bad Request",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"tags\": {\n    \"flag\": \"<uri-reference>\",\n    \"read\": \"<uri-reference>\",\n    \"archive\": \"<uri-reference>\"\n  }\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/wellness/v2beta1/events/:id/tags",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"wellness",
																		"v2beta1",
																		"events",
																		":id",
																		"tags"
																	],
																	"variable": [
																		{
																			"key": "id",
																			"value": "0908777a-788f-45da-afb8-295c626e4d14",
																			"description": "(Required) Event ID"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": 400\n}"
														},
														{
															"name": "Internal Server Error",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"tags\": {\n    \"flag\": \"<uri-reference>\",\n    \"read\": \"<uri-reference>\",\n    \"archive\": \"<uri-reference>\"\n  }\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/wellness/v2beta1/events/:id/tags",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"wellness",
																		"v2beta1",
																		"events",
																		":id",
																		"tags"
																	],
																	"variable": [
																		{
																			"key": "id",
																			"value": "0908777a-788f-45da-afb8-295c626e4d14",
																			"description": "(Required) Event ID"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": 500\n}"
														}
													]
												},
												{
													"name": "Open a Case.",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"uuid\": \"<uri-reference>\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/wellness/v2beta1/events/:id/case",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"wellness",
																"v2beta1",
																"events",
																":id",
																"case"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "{{WellnessEventId}}",
																	"description": "(Required) Event ID"
																}
															]
														},
														"description": "Opens a Case against an event if it does not have one. NOTE: Request body is not required."
													},
													"response": [
														{
															"name": "OK",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"uuid\": \"<uri-reference>\"\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/wellness/v2beta1/events/:id/case",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"wellness",
																		"v2beta1",
																		"events",
																		":id",
																		"case"
																	],
																	"variable": [
																		{
																			"key": "id",
																			"value": "0908777a-788f-45da-afb8-295c626e4d14",
																			"description": "(Required) Event ID"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"success\": \"<boolean>\",\n  \"httpStatusCode\": 200\n}"
														},
														{
															"name": "Bad Request",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"uuid\": \"<uri-reference>\"\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/wellness/v2beta1/events/:id/case",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"wellness",
																		"v2beta1",
																		"events",
																		":id",
																		"case"
																	],
																	"variable": [
																		{
																			"key": "id",
																			"value": "0908777a-788f-45da-afb8-295c626e4d14",
																			"description": "(Required) Event ID"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": 400\n}"
														},
														{
															"name": "Internal Server Error",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"uuid\": \"<uri-reference>\"\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/wellness/v2beta1/events/:id/case",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"wellness",
																		"v2beta1",
																		"events",
																		":id",
																		"case"
																	],
																	"variable": [
																		{
																			"key": "id",
																			"value": "0908777a-788f-45da-afb8-295c626e4d14",
																			"description": "(Required) Event ID"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": 500\n}"
														}
													]
												}
											]
										},
										{
											"name": "List of wellness events.",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var jsonData = JSON.parse(responseBody).items[0].uuid;\r",
															"pm.collectionVariables.set(\"WellnessEventId\",jsonData);\r",
															"console.log(jsonData)"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/wellness/v2beta1/events",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"wellness",
														"v2beta1",
														"events"
													],
													"query": [
														{
															"key": "filter",
															"value": "<string>",
															"description": "The fields used to filter the events. It should be in OData v4 format.",
															"disabled": true
														},
														{
															"key": "current-page",
															"value": "<integer>",
															"description": "The current page the user is on. It starts at 1. 'current-page' is a required parameter if the next query parameter is added.",
															"disabled": true
														},
														{
															"key": "wanted-page",
															"value": "<integer>",
															"description": "The page that the user is querying for. It starts at 1. 'wanted-page' is a required parameter if the next query parameter is added.",
															"disabled": true
														},
														{
															"key": "next",
															"value": "<string>",
															"description": "The event ID of the last entry on the last page the user queried for. Defaults to the first page if left blank.",
															"disabled": true
														},
														{
															"key": "limit",
															"value": "100",
															"description": "The number of events to return. The Maximum is 200. Empty or negative defaults to 100.",
															"disabled": true
														}
													]
												},
												"description": "Retrieves a paginated list of the events based on a chosen filter. </br> If the `next` field exists and valid, then only both `current-page` and `wanted-page` are required. </br> You cannot set values to either `current-page` or `wanted-page` when `next` is empty. </br> If `next`, `current-page`, and `wanted-page` are empty, then `current-page` and `wanted-page` default to 1."
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/wellness/v2beta1/events?filter=<string>&current-page=<integer>&wanted-page=<integer>&next=<string>&limit=100",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"wellness",
																"v2beta1",
																"events"
															],
															"query": [
																{
																	"key": "filter",
																	"value": "<string>"
																},
																{
																	"key": "current-page",
																	"value": "<integer>"
																},
																{
																	"key": "wanted-page",
																	"value": "<integer>"
																},
																{
																	"key": "next",
																	"value": "<string>"
																},
																{
																	"key": "limit",
																	"value": "100"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"items\": [\n    {\n      \"id\": \"<uuid>\",\n      \"type\": \"<string>\",\n      \"createdAt\": \"<string>\",\n      \"updatedAt\": \"<string>\",\n      \"generation\": \"<integer>\",\n      \"uuid\": \"<string>\",\n      \"version\": \"<integer>\",\n      \"automationUuid\": \"<string>\",\n      \"origin\": \"<string>\",\n      \"domain\": \"<string>\",\n      \"title\": \"<string>\",\n      \"claimTokens\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"body\": \"<object>\",\n      \"tenant\": \"<object>\",\n      \"asset\": \"<object>\",\n      \"object\": \"<object>\",\n      \"relatedObjects\": [\n        {\n          \"urn\": {},\n          \"relationShip\": \"<string>\"\n        },\n        {\n          \"urn\": {},\n          \"relationShip\": \"<string>\"\n        }\n      ],\n      \"condition\": \"<object>\",\n      \"status\": \"<object>\",\n      \"causes\": [\n        {\n          \"titleBody\": {\n            \"title\": \"<string>\",\n            \"body\": \"<object>\"\n          },\n          \"confidence\": \"<integer>\",\n          \"visibility\": \"<string>\",\n          \"recommendation\": \"<string>\",\n          \"recommendations\": [\n            {\n              \"titleBody\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"confidence\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"visibility\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"href\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            },\n            {\n              \"titleBody\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"confidence\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"visibility\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"href\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            }\n          ]\n        },\n        {\n          \"titleBody\": {\n            \"title\": \"<string>\",\n            \"body\": \"<object>\"\n          },\n          \"confidence\": \"<integer>\",\n          \"visibility\": \"<string>\",\n          \"recommendation\": \"<string>\",\n          \"recommendations\": [\n            {\n              \"titleBody\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"confidence\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"visibility\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"href\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            },\n            {\n              \"titleBody\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"confidence\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"visibility\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"href\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            }\n          ]\n        }\n      ],\n      \"escalation\": [\n        {\n          \"trigger\": \"<string>\",\n          \"user\": \"<string>\",\n          \"timeStamp\": \"<string>\",\n          \"lastUpdatedAt\": \"<string>\",\n          \"crm\": \"<string>\",\n          \"caseId\": \"<string>\",\n          \"caseNumber\": \"<string>\",\n          \"href\": \"<object>\",\n          \"caseStatus\": \"<string>\",\n          \"caseAction\": \"<string>\",\n          \"caseHistory\": [\n            {\n              \"action\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"timeStamp\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            },\n            {\n              \"action\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"timeStamp\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            }\n          ],\n          \"wellnessModelUuid\": \"<string>\"\n        },\n        {\n          \"trigger\": \"<string>\",\n          \"user\": \"<string>\",\n          \"timeStamp\": \"<string>\",\n          \"lastUpdatedAt\": \"<string>\",\n          \"crm\": \"<string>\",\n          \"caseId\": \"<string>\",\n          \"caseNumber\": \"<string>\",\n          \"href\": \"<object>\",\n          \"caseStatus\": \"<string>\",\n          \"caseAction\": \"<string>\",\n          \"caseHistory\": [\n            {\n              \"action\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"timeStamp\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            },\n            {\n              \"action\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"timeStamp\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            }\n          ],\n          \"wellnessModelUuid\": \"<string>\"\n        }\n      ],\n      \"domainData\": \"<object>\",\n      \"correlated\": \"<boolean>\",\n      \"correlatedParent\": \"<string>\",\n      \"correlatedChildren\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"userTags\": {\n        \"ea0\": {\n          \"read\": \"<boolean>\",\n          \"archive\": \"<boolean>\",\n          \"flag\": \"<boolean>\"\n        },\n        \"mollit_db_\": {\n          \"read\": \"<boolean>\",\n          \"archive\": \"<boolean>\",\n          \"flag\": \"<boolean>\"\n        },\n        \"est_8\": {\n          \"read\": \"<boolean>\",\n          \"archive\": \"<boolean>\",\n          \"flag\": \"<boolean>\"\n        },\n        \"commodo_cad\": {\n          \"read\": \"<boolean>\",\n          \"archive\": \"<boolean>\",\n          \"flag\": \"<boolean>\"\n        },\n        \"ad_d\": {\n          \"read\": \"<boolean>\",\n          \"archive\": \"<boolean>\",\n          \"flag\": \"<boolean>\"\n        }\n      },\n      \"glcpattributes\": \"<object>\",\n      \"flag\": \"<object>\",\n      \"read\": \"<object>\",\n      \"archive\": \"<object>\"\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"type\": \"<string>\",\n      \"createdAt\": \"<string>\",\n      \"updatedAt\": \"<string>\",\n      \"generation\": \"<integer>\",\n      \"uuid\": \"<string>\",\n      \"version\": \"<integer>\",\n      \"automationUuid\": \"<string>\",\n      \"origin\": \"<string>\",\n      \"domain\": \"<string>\",\n      \"title\": \"<string>\",\n      \"claimTokens\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"body\": \"<object>\",\n      \"tenant\": \"<object>\",\n      \"asset\": \"<object>\",\n      \"object\": \"<object>\",\n      \"relatedObjects\": [\n        {\n          \"urn\": {},\n          \"relationShip\": \"<string>\"\n        },\n        {\n          \"urn\": {},\n          \"relationShip\": \"<string>\"\n        }\n      ],\n      \"condition\": \"<object>\",\n      \"status\": \"<object>\",\n      \"causes\": [\n        {\n          \"titleBody\": {\n            \"title\": \"<string>\",\n            \"body\": \"<object>\"\n          },\n          \"confidence\": \"<integer>\",\n          \"visibility\": \"<string>\",\n          \"recommendation\": \"<string>\",\n          \"recommendations\": [\n            {\n              \"titleBody\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"confidence\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"visibility\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"href\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            },\n            {\n              \"titleBody\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"confidence\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"visibility\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"href\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            }\n          ]\n        },\n        {\n          \"titleBody\": {\n            \"title\": \"<string>\",\n            \"body\": \"<object>\"\n          },\n          \"confidence\": \"<integer>\",\n          \"visibility\": \"<string>\",\n          \"recommendation\": \"<string>\",\n          \"recommendations\": [\n            {\n              \"titleBody\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"confidence\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"visibility\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"href\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            },\n            {\n              \"titleBody\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"confidence\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"visibility\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"href\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            }\n          ]\n        }\n      ],\n      \"escalation\": [\n        {\n          \"trigger\": \"<string>\",\n          \"user\": \"<string>\",\n          \"timeStamp\": \"<string>\",\n          \"lastUpdatedAt\": \"<string>\",\n          \"crm\": \"<string>\",\n          \"caseId\": \"<string>\",\n          \"caseNumber\": \"<string>\",\n          \"href\": \"<object>\",\n          \"caseStatus\": \"<string>\",\n          \"caseAction\": \"<string>\",\n          \"caseHistory\": [\n            {\n              \"action\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"timeStamp\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            },\n            {\n              \"action\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"timeStamp\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            }\n          ],\n          \"wellnessModelUuid\": \"<string>\"\n        },\n        {\n          \"trigger\": \"<string>\",\n          \"user\": \"<string>\",\n          \"timeStamp\": \"<string>\",\n          \"lastUpdatedAt\": \"<string>\",\n          \"crm\": \"<string>\",\n          \"caseId\": \"<string>\",\n          \"caseNumber\": \"<string>\",\n          \"href\": \"<object>\",\n          \"caseStatus\": \"<string>\",\n          \"caseAction\": \"<string>\",\n          \"caseHistory\": [\n            {\n              \"action\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"timeStamp\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            },\n            {\n              \"action\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"timeStamp\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            }\n          ],\n          \"wellnessModelUuid\": \"<string>\"\n        }\n      ],\n      \"domainData\": \"<object>\",\n      \"correlated\": \"<boolean>\",\n      \"correlatedParent\": \"<string>\",\n      \"correlatedChildren\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"userTags\": {\n        \"utcf_\": {\n          \"read\": \"<boolean>\",\n          \"archive\": \"<boolean>\",\n          \"flag\": \"<boolean>\"\n        },\n        \"et_bfb\": {\n          \"read\": \"<boolean>\",\n          \"archive\": \"<boolean>\",\n          \"flag\": \"<boolean>\"\n        }\n      },\n      \"glcpattributes\": \"<object>\",\n      \"flag\": \"<object>\",\n      \"read\": \"<object>\",\n      \"archive\": \"<object>\"\n    }\n  ],\n  \"count\": \"<integer>\",\n  \"page\": \"<integer>\",\n  \"lastPage\": \"<integer>\",\n  \"next\": \"<string>\",\n  \"message\": \"<string>\"\n}"
												},
												{
													"name": "Bad Request",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/wellness/v2beta1/events?filter=<string>&current-page=<integer>&wanted-page=<integer>&next=<string>&limit=100",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"wellness",
																"v2beta1",
																"events"
															],
															"query": [
																{
																	"key": "filter",
																	"value": "<string>"
																},
																{
																	"key": "current-page",
																	"value": "<integer>"
																},
																{
																	"key": "wanted-page",
																	"value": "<integer>"
																},
																{
																	"key": "next",
																	"value": "<string>"
																},
																{
																	"key": "limit",
																	"value": "100"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": 400\n}"
												},
												{
													"name": "Unexpected Server Error",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/wellness/v2beta1/events?filter=<string>&current-page=<integer>&wanted-page=<integer>&next=<string>&limit=100",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"wellness",
																"v2beta1",
																"events"
															],
															"query": [
																{
																	"key": "filter",
																	"value": "<string>"
																},
																{
																	"key": "current-page",
																	"value": "<integer>"
																},
																{
																	"key": "wanted-page",
																	"value": "<integer>"
																},
																{
																	"key": "next",
																	"value": "<string>"
																},
																{
																	"key": "limit",
																	"value": "100"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": 500\n}"
												}
											]
										}
									]
								},
								{
									"name": "Health of the Service",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/wellness/v2beta1/status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"wellness",
												"v2beta1",
												"status"
											]
										},
										"description": "Checks the health of all service dependencies to ensure complete serviceability."
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/wellness/v2beta1/status",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"wellness",
														"v2beta1",
														"status"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"items\": [\n    {\n      \"id\": \"<uuid>\",\n      \"type\": \"<string>\",\n      \"items\": \"<string>\"\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"type\": \"<string>\",\n      \"items\": \"<string>\"\n    }\n  ],\n  \"count\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"status\": \"<string>\",\n  \"serviceName\": \"<string>\",\n  \"upTime\": \"<string>\",\n  \"environment\": \"<string>\",\n  \"version\": \"<string>\"\n}"
										},
										{
											"name": "Service not available",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/wellness/v2beta1/status",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"wellness",
														"v2beta1",
														"status"
													]
												}
											},
											"status": "Failed Dependency (WebDAV) (RFC 4918)",
											"code": 424,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"items\": [\n    {\n      \"id\": \"<uuid>\",\n      \"type\": \"<string>\",\n      \"items\": \"<string>\"\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"type\": \"<string>\",\n      \"items\": \"<string>\"\n    }\n  ],\n  \"count\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"status\": \"<string>\",\n  \"serviceName\": \"<string>\",\n  \"upTime\": \"<string>\",\n  \"environment\": \"<string>\",\n  \"version\": \"<string>\"\n}"
										},
										{
											"name": "Unexpected Server Error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/wellness/v2beta1/status",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"wellness",
														"v2beta1",
														"status"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"items\": [\n    {\n      \"id\": \"<uuid>\",\n      \"type\": \"<string>\",\n      \"items\": \"<string>\"\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"type\": \"<string>\",\n      \"items\": \"<string>\"\n    }\n  ],\n  \"count\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"status\": \"<string>\",\n  \"serviceName\": \"<string>\",\n  \"upTime\": \"<string>\",\n  \"environment\": \"<string>\",\n  \"version\": \"<string>\"\n}"
										}
									]
								},
								{
									"name": "Wellness summary",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/wellness/v2beta1/summary?start-time=2023-10-15T00:00:00.000Z&end-time=2023-11-28T00:00:00.000Z",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"wellness",
												"v2beta1",
												"summary"
											],
											"query": [
												{
													"key": "filter",
													"value": "<string>",
													"description": "Fields to filter the events on. It should be in OData V4 format.",
													"disabled": true
												},
												{
													"key": "start-time",
													"value": "2023-10-15T00:00:00.000Z",
													"description": "(Required) Starting time range in ISO8601 format."
												},
												{
													"key": "end-time",
													"value": "2023-11-28T00:00:00.000Z",
													"description": "(Required) Ending time range in ISO8601 format."
												}
											]
										},
										"description": "Provides a count of wellness events and auto-closed cases for the given time range."
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/wellness/v2beta1/summary?filter=<string>&start-time=<string>&end-time=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"wellness",
														"v2beta1",
														"summary"
													],
													"query": [
														{
															"key": "filter",
															"value": "<string>"
														},
														{
															"key": "start-time",
															"value": "<string>"
														},
														{
															"key": "end-time",
															"value": "<string>"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"cases\": \"<integer>\",\n  \"events\": \"<integer>\",\n  \"items\": [\n    {\n      \"id\": \"<uuid>\",\n      \"type\": \"<string>\",\n      \"items\": \"<string>\"\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"type\": \"<string>\",\n      \"items\": \"<string>\"\n    }\n  ],\n  \"count\": \"<integer>\"\n}"
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/wellness/v2beta1/summary?filter=<string>&start-time=<string>&end-time=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"wellness",
														"v2beta1",
														"summary"
													],
													"query": [
														{
															"key": "filter",
															"value": "<string>"
														},
														{
															"key": "start-time",
															"value": "<string>"
														},
														{
															"key": "end-time",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": 400\n}"
										},
										{
											"name": "Internal Server Error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/wellness/v2beta1/summary?filter=<string>&start-time=<string>&end-time=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"wellness",
														"v2beta1",
														"summary"
													],
													"query": [
														{
															"key": "filter",
															"value": "<string>"
														},
														{
															"key": "start-time",
															"value": "<string>"
														},
														{
															"key": "end-time",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": 500\n}"
										}
									]
								},
								{
									"name": "Updates multiple events with tags.",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"uuids\": [\n    \"<uuid>\",\n    \"<uuid>\"\n  ],\n  \"tags\": {\n    \"flag\": \"<uri-reference>\",\n    \"read\": \"<uri-reference>\",\n    \"archive\": \"<uri-reference>\"\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/wellness/v2beta1/bulk-tags",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"wellness",
												"v2beta1",
												"bulk-tags"
											]
										},
										"description": "Tag multiple events with specified tags."
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"uuids\": [\n    \"<uuid>\",\n    \"<uuid>\"\n  ],\n  \"tags\": {\n    \"flag\": \"<uri-reference>\",\n    \"read\": \"<uri-reference>\",\n    \"archive\": \"<uri-reference>\"\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/wellness/v2beta1/bulk-tags",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"wellness",
														"v2beta1",
														"bulk-tags"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"success\": \"<boolean>\",\n  \"httpStatusCode\": 200\n}"
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"uuids\": [\n    \"<uuid>\",\n    \"<uuid>\"\n  ],\n  \"tags\": {\n    \"flag\": \"<uri-reference>\",\n    \"read\": \"<uri-reference>\",\n    \"archive\": \"<uri-reference>\"\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/wellness/v2beta1/bulk-tags",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"wellness",
														"v2beta1",
														"bulk-tags"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": 400\n}"
										},
										{
											"name": "Internal Server Error",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"uuids\": [\n    \"<uuid>\",\n    \"<uuid>\"\n  ],\n  \"tags\": {\n    \"flag\": \"<uri-reference>\",\n    \"read\": \"<uri-reference>\",\n    \"archive\": \"<uri-reference>\"\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/wellness/v2beta1/bulk-tags",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"wellness",
														"v2beta1",
														"bulk-tags"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": 500\n}"
										}
									]
								}
							]
						}
					]
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{BearerToken}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://global.api.greenlake.hpe.com",
			"type": "string"
		},
		{
			"key": "BearerToken",
			"value": "",
			"type": "string"
		},
		{
			"key": "ClientId",
			"value": "SetYourClientID",
			"type": "string"
		},
		{
			"key": "ClientSecret",
			"value": "SetYourClientSecret",
			"type": "string"
		},
		{
			"key": "sso_URI",
			"value": "sso.common.cloud.hpe.com/as/token.oauth2",
			"type": "string"
		},
		{
			"key": "GLP_Application_Id",
			"value": "00000000-0000-0000-0000-000000000000",
			"type": "string"
		},
		{
			"key": "WorkspaceId",
			"value": "SetYourWorkspaceID",
			"type": "string"
		},
		{
			"key": "COM_Application_Id",
			"value": "SetYourComputeOpsMgmtAppID",
			"type": "string"
		},
		{
			"key": "Aruba_Application_Id",
			"value": "SetYourArubaCentralAppID",
			"type": "string"
		},
		{
			"key": "DSCC_Application_Id",
			"value": "SetYourDataServicesAppID",
			"type": "string"
		},
		{
			"key": "DeviceId",
			"value": "",
			"type": "string"
		},
		{
			"key": "UserId",
			"value": "",
			"type": "string"
		},
		{
			"key": "UserIdNoDash",
			"value": "",
			"type": "string"
		},
		{
			"key": "InvitedUserId",
			"value": "",
			"type": "string"
		},
		{
			"key": "InvitedUserIdNoDash",
			"value": "",
			"type": "string"
		},
		{
			"key": "AsyncOpsTransaction_Id",
			"value": "",
			"type": "string"
		},
		{
			"key": "WellnessEventId",
			"value": "",
			"type": "string"
		},
		{
			"key": "SubscriptionKeyId",
			"value": "",
			"type": "string"
		},
		{
			"key": "MSP-TenantId",
			"value": "",
			"type": "string"
		},
		{
			"key": "Aruba_Application_Id",
			"value": "SetYourArubaCentralAppID",
			"type": "string"
		}
	]
}